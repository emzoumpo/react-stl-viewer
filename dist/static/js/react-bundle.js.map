{"version":3,"sources":["webpack:///react-bundle.js","webpack:///webpack/bootstrap 10a36f4d8d08b189b5a9","webpack:///./react/app.js","webpack:///./~/react/index.js","webpack:///./~/prop-types/index.js","webpack:///./~/domkit/appendVendorPrefix.js","webpack:///./~/domkit/insertKeyframesRule.js","webpack:///./~/object-assign/index.js","webpack:///./~/react-dom/index.js","webpack:///./react/containers/App.js","webpack:///./src/Paint.js","webpack:///./src/STLViewer.js","webpack:///./src/Three.js","webpack:///./~/domkit/builtinStyle.js","webpack:///./~/domkit/getVendorPrefix.js","webpack:///./~/domkit/getVendorPropertyName.js","webpack:///./~/domkit/insertRule.js","webpack:///./~/halogenium/lib/BeatLoader.js","webpack:///./~/halogenium/lib/BounceLoader.js","webpack:///./~/halogenium/lib/ClipLoader.js","webpack:///./~/halogenium/lib/DotLoader.js","webpack:///./~/halogenium/lib/FadeLoader.js","webpack:///./~/halogenium/lib/GridLoader.js","webpack:///./~/halogenium/lib/Halogenium.js","webpack:///./~/halogenium/lib/MoonLoader.js","webpack:///./~/halogenium/lib/PacmanLoader.js","webpack:///./~/halogenium/lib/PulseLoader.js","webpack:///./~/halogenium/lib/RingLoader.js","webpack:///./~/halogenium/lib/RiseLoader.js","webpack:///./~/halogenium/lib/RotateLoader.js","webpack:///./~/halogenium/lib/ScaleLoader.js","webpack:///./~/halogenium/lib/SkewLoader.js","webpack:///./~/halogenium/lib/SquareLoader.js","webpack:///./~/halogenium/lib/SyncLoader.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./~/scheduler/cjs/scheduler.production.min.js","webpack:///./~/scheduler/index.js","webpack:///./~/three-orbit-controls/index.js","webpack:///./~/three/three.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_reactDom2","_App","_App2","ReactDOM","render","createElement","document","getElementById","getVendorPropertyName","target","sources","to","Object","hasOwnProperty","prototype","nextIndex","arguments","length","nextSource","from","key","prefixed","insertRule","vendorPrefix","index","keyframes","name","Date","css","property","part","toObject","val","undefined","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","source","symbols","s","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_STLViewer","_STLViewer2","App","_Component","this","_this","getPrototypeOf","state","color","clickBlue","bind","clickRed","e","preventDefault","setState","url","modelColor","onClick","Component","_typeof","Symbol","iterator","_Three","_Three2","OrbitControls","THREE","DIRECTIONAL_LIGHT","Paint","context","clean","loader","STLLoader","scene","Scene","renderer","WebGLRenderer","antialias","meshes","bedMesh","initialBox","Box3","reqNumber","component","urls","width","height","modelColors","backgroundColor","orbitControls","rotate","cameraX","cameraY","cameraZ","rotationSpeeds","lightX","lightY","lightZ","lightColor","distance","directionalLight","DirectionalLight","position","x","y","z","normalize","directionalLight2","add","addSTLToScene","reqId","crossOrigin","promises","push","addSTLPromise","Promise","all","then","resolvedArray","mesh","geometry","computeBoundingBox","rotation","union","boundingBox","centerVector","Vector3","center","translate","Mesh","CubeGeometry","MeshBasicMaterial","transparent","opacity","xDims","max","min","yDims","zDims","addCamera","addInteractionControls","addToReactComponent","animate","_this2","resolve","reject","load","computeFaceNormals","computeVertexNormals","MeshLambertMaterial","overdraw","camera","PerspectiveCamera","Math","set","lookAt","setSize","setClearColor","controls","findDOMNode","enableKeys","addEventListener","orbitRender","replaceChild","domElement","firstChild","animationRequestId","requestAnimationFrame","update","_this3","remove","dispose","material","directionalLightObj","getObjectByName","directionalLightObj2","cancelAnimationFrame","forceContextLoss","_this4","_propTypes","_propTypes2","_halogenium","_Paint","_Paint2","STLViewer","apply","paint","init","nextProps","nextState","JSON","stringify","_props","className","style","overflow","display","justifyContent","alignItems","ScaleLoader","size","propTypes","PropTypes","string","arrayOf","number","bool","defaultProps","manager","DefaultLoadingManager","onLoad","onProgress","onError","scope","XHRLoader","setCrossOrigin","setResponseType","text","parse","data","isBinary","expect","face_size","n_faces","reader","DataView","binData","getUint32","byteLength","fileLength","getUint8","ensureBinary","parseBinary","parseASCII","ensureString","r","g","b","colors","defaultR","defaultG","defaultB","alpha","faces","hasColors","Float32Array","dataOffset","faceLength","offset","BufferGeometry","vertices","normals","face","start","normalX","getFloat32","normalY","normalZ","packedColor","getUint16","vertexstart","addAttribute","BufferAttribute","normal","patternFace","patternNormal","patternVertex","result","Geometry","exec","parseFloat","Face3","computeBoundingSphere","buf","array_buffer","Uint8Array","str","charCodeAt","buffer","byteOffset","_isString","_getCharCodes","end","codes","_getBytes","littleEndian","_littleEndian","Error","isString","slice","Array","reverse","getFloat64","sign","exponent","mantissa","pow","NaN","Infinity","getInt32","getInt16","getInt8","cssVendorPrefix","styles","window","getComputedStyle","documentElement","pre","match","OLink","domVendorPrefix","builtinStyle","prefixes","prop","isSupportTest","vendorProp","UpperProp","charAt","toUpperCase","substr","extraSheet","getElementsByTagName","appendChild","sheet","styleSheet","cssRules","rules","_extends","_appendVendorPrefix","_appendVendorPrefix2","_insertKeyframesRule","_insertKeyframesRule2","50%","transform","100%","animationName","loading","oneOfType","margin","verticalAlign","ptKeys","BeatLoader","_ref","_temp","_ret","_len","args","_key","concat","getBallStyle","borderRadius","getAnimationStyle","animation","animationFillMode","getStyle","border","klen","0%, 100%","BounceLoader","top","left","0%","ClipLoader","borderColor","borderBottomColor","background","rotateKeyframes","bounceKeyframes","rotateAnimationName","bounceAnimationName","DotLoader","ballSize","bottom","radius","FadeLoader","getLineStyle","getPosStyle","quarter","lines","l1","l2","l3","l4","l5","l6","l7","l8","fontSize","random","GridLoader","animationDuration","animationDelay","SyncLoader","SquareLoader","SkewLoader","RotateLoader","RiseLoader","RingLoader","PulseLoader","PacmanLoader","MoonLoader","_BeatLoader2","_BeatLoader3","_BounceLoader2","_BounceLoader3","_ClipLoader2","_ClipLoader3","_DotLoader2","_DotLoader3","_FadeLoader2","_FadeLoader3","_GridLoader2","_GridLoader3","_MoonLoader2","_MoonLoader3","_PacmanLoader2","_PacmanLoader3","_PulseLoader2","_PulseLoader3","_RingLoader2","_RingLoader3","_RiseLoader2","_RiseLoader3","_RotateLoader2","_RotateLoader3","_ScaleLoader2","_ScaleLoader3","_SkewLoader2","_SkewLoader3","_SquareLoader2","_SquareLoader3","_SyncLoader2","_SyncLoader3","moonSize","animations","75%","s1","s2","borderRight","borderTop","borderLeft","borderBottom","renderLoader","45%","80%","rightRotateKeyframes","leftRotateKeyframes","rightRotateAnimationName","leftRotateAnimationName","getCircleStyle","perspective","parseInt","riseAmount","keyframesEven","25%","keyframesOdd","25","animationNameEven","animationNameOdd","getSharpStyle","getSquareStyle","33%","66%","emptyFunction","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","func","object","symbol","any","element","instanceOf","node","objectOf","oneOf","shape","exact","checkPropTypes","ca","a","d","f","h","k","l","replace","framesToPop","t","encodeURIComponent","da","ka","ea","fa","ja","la","ha","ia","oa","ma","na","indexOf","pa","extractEvents","eventTypes","qa","phasedRegistrationNames","ra","registrationName","sa","ta","dependencies","xa","type","currentTarget","wa","ya","isArray","za","Ba","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Da","stateNode","ua","disabled","Ea","Aa","Ia","Ga","parentNode","tag","Ja","Ka","La","Ha","Ma","return","Na","dispatchConfig","Oa","_targetInst","Pa","Qa","Ra","Ta","toLowerCase","Xa","Va","Ua","Wa","gb","fb","eb","cb","textContent","hb","ib","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","kb","eventPool","pop","lb","destructor","jb","getPooled","wb","ob","keyCode","xb","detail","zb","which","vb","tb","Ab","yb","pb","ctrlKey","altKey","metaKey","char","sb","locale","Hb","va","Cb","Ib","Db","Eb","Jb","Kb","Lb","Mb","Ob","Nb","Qb","nodeName","Pb","Rb","srcElement","correspondingUseElement","nodeType","Sb","Sa","setAttribute","Tb","Ub","getOwnPropertyDescriptor","get","getValue","setValue","stopTracking","_valueTracker","Vb","Wb","checked","lc","kc","mc","displayName","fc","ac","$b","cc","bc","hc","$$typeof","ec","dc","gc","ic","jc","_status","_result","nc","_debugOwner","_debugSource","fileName","Yb","lineNumber","sc","pc","rc","qc","oc","test","tc","acceptsBooleans","uc","isNaN","E","attributeName","attributeNamespace","mustUseProperty","propertyName","wc","xc","F","removeAttribute","setAttributeNS","yc","zc","defaultChecked","defaultValue","_wrapperState","initialChecked","Ac","initialValue","controlled","Bc","Cc","Dc","Ec","ownerDocument","activeElement","Gc","Fc","change","Lc","Mc","Nc","Pc","Jc","detachEvent","Qc","Kc","Rc","attachEvent","Sc","Tc","Uc","Yc","getModifierState","Xc","Zc","jd","hd","kd","alternate","effectTag","ld","md","child","sibling","current","nd","rd","charCode","Cd","bubbled","captured","isInteractive","Ad","Bd","Gd","targetInst","ancestors","containerInfo","topLevelType","H","Ed","Id","Jd","Kd","Hd","Fd","Od","Nd","Md","Ld","Pd","body","Qd","Rd","nextSibling","Sd","contains","compareDocumentPosition","Td","HTMLIFrameElement","contentDocument","defaultView","Ud","contentEditable","ae","$d","Xd","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","Zd","Wd","select","Yd","de","aa","Children","ee","children","fe","options","selected","defaultSelected","ge","dangerouslySetInnerHTML","he","ie","je","le","me","pe","lastChild","nodeValue","se","qe","trim","te","setProperty","ve","ue","we","is","xe","blur","focus","bb","ye","Be","autoFocus","Ce","__html","Fe","oe","wasMultiple","multiple","Ge","He","I","Je","Ie","J","Me","contextTypes","Ke","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","M","childContextTypes","Ne","L","K","Oe","Pe","Qe","getChildContext","Re","__reactInternalMemoizedMergedChildContext","Le","Se","Ve","We","isDisabled","supportsFiber","inject","Te","onCommitFiberRoot","Ue","onCommitFiberUnmount","Xe","elementType","ref","pendingProps","firstContextDependency","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","N","Ye","isReactComponent","Ze","$e","af","bf","cf","df","ef","pendingChildren","implementation","ff","didError","earliestPendingTime","latestPendingTime","gf","hf","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","jf","nextExpirationTimeToWorkOn","lf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","mf","nf","payload","callback","next","of","pf","qf","rf","sf","kf","tf","uf","vf","wf","stack","Bf","_context","xf","_currentValue","Cf","Df","yf","Af","zf","Ef","observedBits","If","Ff","Jf","Hf","Gf","O","namespaceURI","tagName","Kf","Lf","Mf","P","Nf","_ctor","Qf","Wf","shouldComponentUpdate","isPureReactComponent","Xf","contextType","Of","currentDispatcher","readContext","updater","Vf","_reactInternalFiber","Zf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","$f","refs","Pf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","bg","_owner","_stringRef","cg","toString","dg","Map","Zb","ag","w","B","q","u","v","delete","R","done","A","jg","kg","lg","ig","hg","gg","mg","ng","og","Q","fg","eg","qg","rg","compare","sg","tg","ug","vg","wg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","xg","pg","getDerivedStateFromError","yg","pendingContext","zg","timedOutAt","fallback","Ag","hydrate","hidden","_calculateChangedBits","unstable_observedBits","Bg","Kg","setTimeout","Lg","Mg","Ng","Og","destroy","componentWillUnmount","Pg","Qg","Rg","insertBefore","_reactRootContainer","onclick","removeChild","Sg","Rf","Jg","Tg","has","Vg","Wg","Xg","componentDidCatch","Yg","Set","componentStack","Zg","jh","S","T","U","eh","fh","Tf","ih","ba","unstable_cancelCallback","hh","kh","Gg","Hg","ke","html","innerHTML","createElementNS","Cg","Ig","createTextNode","lh","ah","mh","dh","$g","pendingCommitExpirationTime","nh","maxDuration","pingCache","Ug","oh","finishedWork","ph","Uf","Sf","ch","gh","qh","rh","sh","th","uh","vh","wh","Jh","Gh","unstable_now","Fh","Kh","yh","zh","unstable_scheduleCallback","Lh","timeout","timeoutHandle","De","Mh","Hh","Nh","X","Oh","Y","nextScheduledRoot","W","xh","Z","Dh","Ah","Ph","Qh","Rh","unstable_shouldYield","Ih","Eh","_onComplete","Bh","Ch","Sh","Ee","firstBatch","_expirationTime","_defer","ze","rangeCount","db","Ae","focusedElem","selectionRange","V","Yf","Vh","__reactInternalSnapshotBeforeUpdate","C","G","extend","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","Fb","Gb","Hc","ii","Dg","Eg","ji","Ic","Fg","ce","Th","Uh","Wh","Xh","Yh","Zh","$h","ai","bh","_root","_callbacks","_next","_hasChildren","_didComplete","_children","bi","_didCommit","_onCommit","ci","_internalRoot","di","ei","hasAttribute","fi","legacy_renderSubtreeIntoContainer","gi","hi","Ca","injectEventPluginOrder","injectEventPluginsByName","Fa","animationend","animationiteration","animationstart","transitionend","transition","Ya","Za","$a","ab","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","mb","nb","qb","documentMode","rb","ub","beforeInput","compositionEnd","compositionStart","compositionUpdate","Bb","date","datetime","datetime-local","email","month","password","range","search","tel","time","week","Xb","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","D","for","vc","tabIndex","Oc","Vc","_isInputEventSupported","Wc","view","Alt","Control","Meta","Shift","$c","ad","bd","cd","dd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","ed","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","fd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","gd","parentWindow","od","elapsedTime","pseudoElement","pd","clipboardData","qd","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","repeat","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Dd","isInteractiveTopLevelEventType","Vd","be","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","mathml","svg","ne","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","re","substring","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","clearTimeout","ReactCurrentOwner","isMounted","enqueueSetState","enqueueForceUpdate","WeakSet","WeakMap","querySelectorAll","form","commit","unmount","createBatch","ki","createPortal","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","overrideProps","findHostInstanceByFiber","bundleType","version","rendererPackageName","li","mi","escape","=",":","keyPrefix","count","forceUpdate","__self","__source","toArray","only","createRef","PureComponent","createContext","_currentValue2","_threadCount","Provider","Consumer","forwardRef","lazy","memo","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","global","previous","priorityLevel","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_IdlePriority","unstable_LowPriority","unstable_runWithPriority","unstable_wrapCallback","unstable_getCurrentPriorityLevel","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","OrbitConstraint","minDistance","maxDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","matrix","elements","multiplyScalar","panUp","pan","screenWidth","screenHeight","clone","sub","targetDistance","tan","fov","OrthographicCamera","right","warn","dollyIn","dollyScale","updateProjectionMatrix","dollyOut","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","copy","applyQuaternion","atan2","sqrt","sin","cos","distanceToSquared","dot","quaternion","constraint","clientWidth","clientHeight","getAutoRotationAngle","autoRotateSpeed","getZoomScale","zoomSpeed","onMouseDown","event","enabled","mouseButtons","ORBIT","enableRotate","STATE","ROTATE","rotateStart","ZOOM","enableZoom","DOLLY","dollyStart","PAN","enablePan","panStart","NONE","onMouseMove","onMouseUp","dispatchEvent","startEvent","rotateEnd","rotateDelta","subVectors","rotateSpeed","dollyEnd","dollyDelta","panEnd","panDelta","removeEventListener","endEvent","onMouseWheel","delta","onKeyDown","UP","keyPanSpeed","BOTTOM","LEFT","RIGHT","touchstart","TOUCH_ROTATE","TOUCH_DOLLY","dx","dy","TOUCH_PAN","touchmove","touchend","contextmenu","autoRotate","MOUSE","MIDDLE","Vector2","target0","position0","zoom0","changeEvent","reset","EventDispatcher","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","REVISION","lastTime","vendors","currTime","timeToCall","Function","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","projectVector","vector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","clear","Color","setRGB","setHex","setStyle","hex","floor","setHSL","hue2rgb","euclideanModulo","clamp","parseAlpha","strAlpha","components","ColorKeywords","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","offsetHSL","addColors","color1","color2","addScalar","multiply","lerp","equals","fromArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_x","_y","_z","_w","onChangeCallback","setFromEuler","euler","Euler","c1","c2","c3","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","v1","vFrom","vTo","abs","crossVectors","conjugate","lengthSq","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","slerp","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","onChange","qm","setX","setY","setComponent","getComponent","addVectors","addScaledVector","subScalar","divide","divideScalar","scalar","invScalar","clampScalar","minVal","maxVal","ceil","round","roundToZero","negate","lengthManhattan","distanceTo","setLength","oldLength","lerpVectors","v2","fromAttribute","attribute","itemSize","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","qx","qy","qz","qw","ix","iy","iz","iw","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","line","distanceSq","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","empty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","setFromObject","updateMatrixWorld","traverse","attributes","positions","getBoundingSphere","Sphere","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","j","applyToBuffer","getX","getY","getZ","setXYZ","determinant","throwOnInvertible","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","near","far","makePerspective","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","uuid","rnd","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nextPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","v3","initFromArray","getPoint","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","midpoint","Clock","autoStart","startTime","oldTime","running","stop","getElapsedTime","getDelta","newTime","hasEventListener","listener","_listeners","listeners","listenerArray","splice","descSort","Raycaster","params","Line","LOD","Points","threshold","Sprite","PointCloud","intersectObject","raycaster","intersects","recursive","visible","raycast","linePrecision","setFromCamera","sort","intersectObjects","objects","Object3D","Object3DIdCount","parent","DefaultUp","onRotationChange","onQuaternionChange","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","renderDepth","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getChildByName","getObjectById","getObjectByProperty","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","extractFromCache","cache","values","metadata","isRootObject","geometries","materials","textures","images","generator","output","materialIndex","vertexNormals","vertexColors","Face4","dynamic","updateRange","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faceVertexUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","jl","fromBufferGeometry","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","fl","vA","vB","vC","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","setBit","getNormalIndex","hash","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","addIndex","setIndex","getIndex","getAttribute","drawcalls","offsets","addDrawCall","indexOffset","addGroup","clearDrawCalls","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","normalizeNormals","computeOffsets","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","generateMipmaps","activeCubeFace","setRenderTarget","cx","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","Light","AmbientLight","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","HemisphereLight","skyColor","groundColor","PointLight","decay","SpotLight","shadowCameraFov","Cache","files","file","Loader","onLoadStart","onLoadProgress","onLoadComplete","extractUrlBase","parts","initMaterials","texturePath","createMaterial","imageLoader","nearest_pow2","log","LN2","create_texture","where","sourceFile","wrap","anisotropy","texture","fullPath","Handlers","Texture","image","canvas","getContext","drawImage","wrapS","wrapT","wrapMap","mirror","rgb2hex","rgb","ImageLoader","mtype","mpars","shading","blending","depthTest","depthWrite","flipSided","side","doubleSided","wireframe","colorDiffuse","DbgColor","colorEmissive","emissive","colorSpecular","specular","specularCoef","shininess","transparency","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAO","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","DbgName","handlers","regex","cached","request","XMLHttpRequest","open","response","itemEnd","itemError","responseType","withCredentials","send","itemStart","setWithCredentials","src","JSONLoader","statusDomElement","_statusDomElement","json","setTexturePath","parseModel","isBitSet","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","bones","parseMorphing","dstVertices","srcVertices","cl","dstColors","srcColors","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","typedArray","MaterialLoader","setTextures","getTexture","uniforms","vertexShader","fragmentShader","alphaTest","wireframeLinewidth","sizeAttenuation","alphaMap","bumpMap","normalMap","displacementMap","displacementScale","displacementBias","specularMap","envMap","combine","reflectivity","lightMap","lightMapIntensity","aoMap","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleBufferGeometry","segments","thetaStart","thetaLength","CircleGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","SphereBufferGeometry","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","TextGeometry","loadImage","path","parseConstant","mapping","getGeometry","getMaterial","Group","levels","level","addLevel","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","loadTexture","texDatas","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","_needsUpdate","setValues","newValue","currentValue","Number","wrapAround","boolean","wrapRGB","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshPhongMaterial","metal","emissiveMap","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","MeshFaceMaterial","PointsMaterial","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","ShaderMaterial","defines","lights","derivatives","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","getDataURL","toDataURL","transformUv","CanvasTexture","CubeTexture","VideoTexture","video","readyState","HAVE_ENOUGH_DATA","inverseMatrix","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","ParticleSystem","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","LineStrip","LinePieces","updateMorphTargets","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","uvIntersection","uv1","uv3","barycoord","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bone","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","skeleton","sw","MorphAnimMesh","duration","mirroredLoop","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","pattern","morph","label","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","influences","mix","interpolateTargets","getObjectForDistance","matrixPosition","guessSizeSq","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bumpmap_pars_fragment","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","defaultnormal_vertex","displacementmap_vertex","displacementmap_pars_vertex","emissivemap_fragment","emissivemap_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_fragment","lights_phong_pars_fragment","lights_phong_pars_vertex","lights_phong_vertex","linear_to_gamma_fragment","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normalmap_pars_fragment","project_vertex","shadowmap_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","psColor","shadowmap","ShaderLib","basic","lambert","phong","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","glClearColor","_premultipliedAlpha","_gl","clearColor","setDefaultGLState","viewport","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_clearColor","_clearAlpha","resetGLState","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","_lightsNeedUpdate","onContextLost","properties","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","releaseMaterialProgramReference","programInfo","program","programCache","releaseProgram","setupVertexAttributes","startIndex","extension","extensions","initAttributes","geometryAttributes","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","enableAttribute","getAttributeBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","vertexAttribDivisorANGLE","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","disableUnusedAttributes","numericalSort","painterSortStable","reversePainterSortStable","pushImmediateRenderItem","transparentImmediateObjects","transparentImmediateObjectsLastIndex","opaqueImmediateObjects","opaqueImmediateObjectsLastIndex","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","projectObject","sprites","ImmediateRenderObject","_frustum","sortObjects","_projScreenMatrix","groupMaterial","renderObjects","renderList","renderBufferDirect","renderObjectsImmediate","setMaterial","setProgram","renderBufferImmediate","initMaterial","materialProperties","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniformsList","uniformLocations","getUniforms","setMaterialFaces","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","enable","CULL_FACE","disable","setFlipSided","_usedTextureUnits","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","capabilities","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","_lights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","uvScaleMap","_canvas","ambient","directional","distances","decays","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","light","uniformMatrix3fv","maxTextures","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecays","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","spotDecays","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","pointCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","_direction","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","maxSize","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","updateRenderTargetMipmap","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","_width","_height","pixelRatio","_alpha","_depth","_stencil","stencil","_antialias","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","autoClear","autoClearColor","autoClearDepth","autoClearStencil","gammaInput","gammaOutput","_currentFramebuffer","_currentWidth","_currentHeight","_infoRender","calls","info","memory","programs","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","getSize","updateStyle","setViewport","setScissor","scissor","enableScissorTest","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","buffers","hasPositions","createBuffer","hasNormals","hasUvs","bufferData","positionArray","DYNAMIC_DRAW","normalArray","nx","ny","nz","uvArray","colorArray","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","ELEMENT_ARRAY_BUFFER","setLineWidth","setMode","LINES","renderInstances","lineWidth","LINE_STRIP","POINTS","forceClear","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","complete","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","readRenderTargetPixels","WebGLRenderTarget","restore","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsVertexTextures","vertexTextures","supportsInstancedArrays","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","debug","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttributes","deleteAttribute","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","subarray","edges","checkEdge","list","WebGLProgram","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","suffixPos","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","filterEmptyLine","programIdCount","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customDefines","createProgram","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","maxBones","flatShading","filter","useFog","fogExp","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","deleteProgram","usedTimes","allocateBones","nVertexUniforms","nVertexMatrices","allocateLights","dirLights","pointLights","spotLights","hemiLights","allocateShadows","shaderIDs","parameterNames","maxLightCount","envMapMode","parameterName","pl","addLineNumbers","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_objects","getDepthMaterial","depthMaterial","useMorphing","useSkinning","customDepthMaterial","_depthMaterialMorphSkin","_depthMaterialSkin","_depthMaterialMorph","_depthMaterial","_renderList","_state","_matrixPosition","depthShader","depthUniforms","BLEND","shadowFilter","pars","cameraHelper","CameraHelper","clearAlpha","newAttributes","enabledAttributes","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentTextureSlot","currentBoundTextures","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","factor","units","POLYGON_OFFSET_FILL","scissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","flares","vertexBuffer","elementBuffer","hasVertexTexture","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","subtract","getImageData","imageData","createImageData","ly","uy","lx","ux","num_points","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","resolution","fontPaths","Path","ret","extractGlyphPoints","paths","outline","action","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","pts","glyph","glyphs","o","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","generateShapes","curveSegments","font","shapes","toShapes","namespace","EPSILON","process","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","typeface_js","_typeface_js","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","playbackRate","isPlaying","onload","decodeAudioData","play","loop","pause","currentTime","disconnect","setFilter","getFilter","setPlaybackRate","getPlaybackRate","setLoop","getLoop","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setVolume","getVolume","AudioListener","AudioContext","webkitAudioContext","orientation","setOrientation","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","last","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","oldX","oldY","xNorm","bounds","pathPt","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vlen","lastargs","x0","y0","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","closedPath","useSpacedPoints","item","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","isClockWise","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","hole","tmpHoles","holes","extrude","extruded","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","nextIdx","intersection","intersectsHoleEdge","ihIdx","chkHole","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","x1","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","rot","usedMorphTargets","morphTargetName","morphTargetsInfluences","root","parseRecurseHierarchy","deltaTimeMS","resetBlendWeights","Animation","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","newVector","newQuat","interpolateCatmullRom","prevXYZ","nextXYZ","proportionalWeight","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","isPaused","sids","sid","endTime","original","hasTarget","MorphAnimation","frames","lastFrame","currentFrame","frame","buildPlane","udir","vdir","gridX","gridY","width_half","height_half","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","depth_half","centerUV","segment","heightHalf","verticesRow","uvsRow","tanTheta","v4","n1","n2","n3","n4","uv4","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","scalePt2","pt","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","binormal","position2","amount","bevelThickness","bevelSize","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","shapePoints","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","np","u0","u1","PlaneGeometry","PlaneBufferGeometry","offset2","radiusStep","thetaSegment","thetaEnd","vertexCount","textShapes","getPos","in_q","in_p","cu","su","quOverP","cs","tz","grid","tang","bitan","ip","jp","closed","taper","NoTaper","numpoints","pos2","tangents","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","mat","PolyhedronGeometry","prepare","that","azimuth","inclination","make","centroid","azi","correctUV","subdivide","cols","aj","bj","rows","ParametricGeometry","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","drawcall","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","dir","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","active","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation"],"mappings":"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","file":"react-bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(6);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _App = __webpack_require__(7);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('react-app'));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(35);\n\t} else {\n\t  module.exports = require('./cjs/react.development.js');\n\t}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\tif (false) {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\t\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(32)();\n\t}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar getVendorPropertyName = __webpack_require__(13);\n\t\n\tmodule.exports = function(target, sources) {\n\t  var to = Object(target);\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n\t    var nextSource = arguments[nextIndex];\n\t    if (nextSource == null) {\n\t      continue;\n\t    }\n\t\n\t    var from = Object(nextSource);\n\t\n\t    for (var key in from) {\n\t      if (hasOwnProperty.call(from, key)) {\n\t        to[key] = from[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  var prefixed = {};\n\t  for (var key in to) {\n\t    prefixed[getVendorPropertyName(key)] = to[key]\n\t  }\n\t\n\t  return prefixed\n\t}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar insertRule = __webpack_require__(14);\n\tvar vendorPrefix = __webpack_require__(12)();\n\tvar index = 0;\n\t\n\tmodule.exports = function(keyframes) {\n\t  // random name\n\t  var name = 'anim_' + (++index) + (+new Date);\n\t  var css = \"@\" + vendorPrefix + \"keyframes \" + name + \" {\";\n\t\n\t  for (var key in keyframes) {\n\t    css += key + \" {\";\n\t\n\t    for (var property in keyframes[key]) {\n\t      var part = \":\" + keyframes[key][property] + \";\";\n\t      // We do vendor prefix for every property\n\t      css += vendorPrefix + property + part;\n\t      css += property + part;\n\t    }\n\t\n\t    css += \"}\";\n\t  }\n\t\n\t  css += \"}\";\n\t\n\t  insertRule(css);\n\t\n\t  return name\n\t}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction checkDCE() {\n\t  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\t  if (\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n\t  ) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // This branch is unreachable because this function is only called\n\t    // in production, but the condition is true only in development.\n\t    // Therefore if the branch is still here, dead code elimination wasn't\n\t    // properly applied.\n\t    // Don't change the message. React DevTools relies on it. Also make sure\n\t    // this message doesn't occur elsewhere in this function, or it will cause\n\t    // a false positive.\n\t    throw new Error('^_^');\n\t  }\n\t  try {\n\t    // Verify that the code above has been dead code eliminated (DCE'd).\n\t    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n\t  } catch (err) {\n\t    // DevTools shouldn't crash React, no matter what.\n\t    // We should still report in case we break this code.\n\t    console.error(err);\n\t  }\n\t}\n\t\n\tif (true) {\n\t  // DCE check should happen before ReactDOM bundle executes so that\n\t  // DevTools can report bad minification during injection.\n\t  checkDCE();\n\t  module.exports = __webpack_require__(34);\n\t} else {\n\t  module.exports = require('./cjs/react-dom.development.js');\n\t}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _STLViewer = __webpack_require__(9);\n\t\n\tvar _STLViewer2 = _interopRequireDefault(_STLViewer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App(props) {\n\t    _classCallCheck(this, App);\n\t\n\t    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\t\n\t    _this.state = {\n\t      color: '#FF0000'\n\t    };\n\t\n\t    _this.clickBlue = _this.clickBlue.bind(_this);\n\t    _this.clickRed = _this.clickRed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: 'clickBlue',\n\t    value: function clickBlue(e) {\n\t      e.preventDefault();\n\t      this.setState({ color: '#0000FF' });\n\t    }\n\t  }, {\n\t    key: 'clickRed',\n\t    value: function clickRed(e) {\n\t      e.preventDefault();\n\t      this.setState({ color: '#FF0000' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        _react2.default.createElement(_STLViewer2.default, { url: 'dist/static/crazy-thing.stl', modelColor: this.state.color }),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.clickRed },\n\t          'red'\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.clickBlue },\n\t          'blue'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\t;\n\texports.default = App;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Three = __webpack_require__(10);\n\t\n\tvar _Three2 = _interopRequireDefault(_Three);\n\t\n\tvar _reactDom = __webpack_require__(6);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar OrbitControls = __webpack_require__(38)(_Three2.default);\n\t\n\tvar DIRECTIONAL_LIGHT = 'directionalLight';\n\t\n\tvar Paint = function () {\n\t  function Paint() {\n\t    _classCallCheck(this, Paint);\n\t  }\n\t\n\t  _createClass(Paint, [{\n\t    key: 'init',\n\t    value: function init(context) {\n\t      this.clean();\n\t\n\t      this.loader = new _Three2.default.STLLoader();\n\t      this.scene = new _Three2.default.Scene();\n\t      this.renderer = new _Three2.default.WebGLRenderer({\n\t        antialias: true\n\t      });\n\t      this.meshes = [];\n\t      this.bedMesh = null;\n\t      this.initialBox = new _Three2.default.Box3();\n\t      this.reqNumber = 0;\n\t\n\t      this.component = context;\n\t      this.urls = context.props.urls;\n\t      this.width = context.props.width;\n\t      this.height = context.props.height;\n\t      this.modelColor = context.props.modelColors;\n\t      this.backgroundColor = context.props.backgroundColor;\n\t      this.orbitControls = context.props.orbitControls;\n\t      this.rotate = context.props.rotate;\n\t      this.cameraX = context.props.cameraX;\n\t      this.cameraY = context.props.cameraY;\n\t      this.cameraZ = context.props.cameraZ;\n\t      this.rotationSpeeds = context.props.rotationSpeeds;\n\t      this.lightX = context.props.lightX;\n\t      this.lightY = context.props.lightY;\n\t      this.lightZ = context.props.lightZ;\n\t      this.lightColor = context.props.lightColor;\n\t\n\t      //Detector.addGetWebGLMessage();\n\t      this.distance = 10000;\n\t\n\t      var directionalLight = new _Three2.default.DirectionalLight(this.lightColor);\n\t      directionalLight.position.x = this.lightX;\n\t      directionalLight.position.y = this.lightY;\n\t      directionalLight.position.z = this.lightZ;\n\t      directionalLight.position.normalize();\n\t      directionalLight.name = DIRECTIONAL_LIGHT;\n\t\n\t      var directionalLight2 = new _Three2.default.DirectionalLight(this.lightColor);\n\t      directionalLight2.position.x = -this.lightX;\n\t      directionalLight2.position.y = -this.lightY;\n\t      directionalLight2.position.z = this.lightZ;\n\t      directionalLight2.position.normalize();\n\t      directionalLight2.name = DIRECTIONAL_LIGHT + '2';\n\t\n\t      this.scene.add(directionalLight);\n\t      this.scene.add(directionalLight2);\n\t\n\t      this.reqNumber += 1;\n\t      this.addSTLToScene(this.reqNumber);\n\t    }\n\t  }, {\n\t    key: 'addSTLToScene',\n\t    value: function addSTLToScene(reqId) {\n\t      var _this = this;\n\t\n\t      this.loader.crossOrigin = '';\n\t      var promises = [];\n\t      this.urls.forEach(function (url, index) {\n\t        promises.push(_this.addSTLPromise(url, reqId, index));\n\t      });\n\t\n\t      Promise.all(promises).then(function (resolvedArray) {\n\t        resolvedArray.forEach(function (mesh) {\n\t          // Set the object's dimensions\n\t          mesh.geometry.computeBoundingBox();\n\t\n\t          if (_this.rotate) {\n\t            mesh.rotation.x = _this.rotationSpeeds[0];\n\t            mesh.rotation.y = _this.rotationSpeeds[1];\n\t            mesh.rotation.z = _this.rotationSpeeds[2];\n\t          }\n\t\n\t          _this.meshes.push(mesh);\n\t          _this.initialBox = _this.initialBox && _this.initialBox.union(mesh.geometry.boundingBox) || mesh.geometry.boundingBox;\n\t        });\n\t\n\t        var centerVector = new _Three2.default.Vector3();\n\t        _this.initialBox.center(centerVector);\n\t\n\t        _this.meshes.forEach(function (mesh) {\n\t          mesh.geometry.translate(-centerVector.x, -centerVector.y, -centerVector.z);\n\t          _this.scene.add(mesh);\n\t        });\n\t\n\t        _this.bedMesh = new _Three2.default.Mesh(new _Three2.default.CubeGeometry(250, 250, 1), new _Three2.default.MeshBasicMaterial({\n\t          color: '#999999',\n\t          transparent: true,\n\t          opacity: 0.5\n\t        }));\n\t\n\t        _this.xDims = _this.initialBox.max.x - _this.initialBox.min.x;\n\t        _this.yDims = _this.initialBox.max.y - _this.initialBox.min.y;\n\t        _this.zDims = _this.initialBox.max.z - _this.initialBox.min.z;\n\t\n\t        _this.bedMesh.geometry.center();\n\t        _this.bedMesh.geometry.translate(0, 0, -_this.zDims / 2 - 0.5);\n\t\n\t        _this.scene.add(_this.bedMesh);\n\t\n\t        _this.addCamera();\n\t        _this.addInteractionControls();\n\t        _this.addToReactComponent();\n\t\n\t        // Start the animation\n\t        _this.animate();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addSTLPromise',\n\t    value: function addSTLPromise(url, reqId, index) {\n\t      var _this2 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        _this2.loader.load(url, function (geometry) {\n\t          if (_this2.reqNumber !== reqId) {\n\t            return;\n\t          }\n\t          // Calculate mesh noramls for MeshLambertMaterial.\n\t          geometry.computeFaceNormals();\n\t          geometry.computeVertexNormals();\n\t\n\t          // Center the object\n\t          // geometry.center();\n\t\n\t          var mesh = new _Three2.default.Mesh(geometry, new _Three2.default.MeshLambertMaterial({\n\t            overdraw: true,\n\t            color: _this2.modelColor[index % _this2.modelColor.length]\n\t          }));\n\t\n\t          resolve(mesh);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addCamera',\n\t    value: function addCamera() {\n\t      // Add the camera\n\t      this.camera = new _Three2.default.PerspectiveCamera(30, this.width / this.height, 1, this.distance);\n\t\n\t      if (this.cameraZ === null) {\n\t        this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n\t      }\n\t\n\t      this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\t\n\t      this.scene.add(this.camera);\n\t\n\t      this.camera.lookAt(this.meshes[0]);\n\t\n\t      this.renderer.set;\n\t      this.renderer.setSize(this.width, this.height);\n\t      this.renderer.setClearColor(this.backgroundColor, 1);\n\t    }\n\t  }, {\n\t    key: 'addInteractionControls',\n\t    value: function addInteractionControls() {\n\t      // Add controls for mouse interaction\n\t      if (this.orbitControls) {\n\t        this.controls = new OrbitControls(this.camera, _reactDom2.default.findDOMNode(this.component));\n\t        this.controls.enableKeys = true;\n\t        this.controls.addEventListener('change', this.orbitRender.bind(this));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addToReactComponent',\n\t    value: function addToReactComponent() {\n\t      // Add to the React Component\n\t      _reactDom2.default.findDOMNode(this.component).replaceChild(this.renderer.domElement, _reactDom2.default.findDOMNode(this.component).firstChild);\n\t    }\n\t\n\t    /**\n\t     * Animate the scene\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'animate',\n\t    value: function animate() {\n\t      // note: three.js includes requestAnimationFrame shim\n\t      if (this.rotate) {\n\t        this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n\t      }\n\t\n\t      if (this.orbitControls) {\n\t        this.controls.update();\n\t      }\n\t      this.render();\n\t    }\n\t\n\t    /**\n\t     * Render the scene after turning off the rotation\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'orbitRender',\n\t    value: function orbitRender() {\n\t      if (this.rotate) {\n\t        this.rotate = false;\n\t      }\n\t\n\t      this.render();\n\t    }\n\t\n\t    /**\n\t     * Deallocate Mesh, renderer context.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clean',\n\t    value: function clean() {\n\t      var _this3 = this;\n\t\n\t      if (_typeof(this.meshes) === _typeof([])) {\n\t        this.meshes.forEach(function (mesh) {\n\t          if (_this3.scene) {\n\t            _this3.scene.remove(mesh);\n\t          }\n\t          mesh.geometry.dispose();\n\t          mesh.material.dispose();\n\t        });\n\t        this.meshes = [];\n\t      }\n\t\n\t      if (this.bedMesh) {\n\t        if (this.scene) {\n\t          this.scene.remove(this.bedMesh);\n\t        }\n\t        this.bedMesh.geometry.dispose();\n\t        this.bedMesh.material.dispose();\n\t        this.bedMesh = null;\n\t      }\n\t\n\t      if (this.scene) {\n\t        var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\t        if (directionalLightObj) {\n\t          this.scene.remove(directionalLightObj);\n\t        }\n\t        var directionalLightObj2 = this.scene.getObjectByName(DIRECTIONAL_LIGHT + '2');\n\t        if (directionalLightObj2) {\n\t          this.scene.remove(directionalLightObj2);\n\t        }\n\t      }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t\n\t      if (this.renderer) {\n\t        this.renderer.dispose();\n\t        this.renderer.forceContextLoss();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Render the scene\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      if (_typeof(this.meshes) === _typeof([]) && this.rotate) {\n\t        this.meshes.forEach(function (mesh) {\n\t          mesh.rotation.x += _this4.rotationSpeeds[0];\n\t          mesh.rotation.y += _this4.rotationSpeeds[1];\n\t          mesh.rotation.z += _this4.rotationSpeeds[2];\n\t        });\n\t      }\n\t\n\t      this.renderer.render(this.scene, this.camera);\n\t    }\n\t  }]);\n\t\n\t  return Paint;\n\t}();\n\t\n\texports.default = Paint;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _halogenium = __webpack_require__(21);\n\t\n\tvar _Paint = __webpack_require__(8);\n\t\n\tvar _Paint2 = _interopRequireDefault(_Paint);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar STLViewer = function (_Component) {\n\t  _inherits(STLViewer, _Component);\n\t\n\t  function STLViewer() {\n\t    _classCallCheck(this, STLViewer);\n\t\n\t    return _possibleConstructorReturn(this, (STLViewer.__proto__ || Object.getPrototypeOf(STLViewer)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(STLViewer, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.paint = new _Paint2.default();\n\t      this.paint.init(this);\n\t    }\n\t  }, {\n\t    key: 'shouldComponentUpdate',\n\t    value: function shouldComponentUpdate(nextProps, nextState) {\n\t      return JSON.stringify(nextProps) !== JSON.stringify(this.props);\n\t    }\n\t  }, {\n\t    key: 'componentWillUpdate',\n\t    value: function componentWillUpdate(nextProps, nextState) {\n\t      this.props = nextProps;\n\t      this.paint.init(this);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.paint.clean();\n\t      delete this.paint;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          width = _props.width,\n\t          height = _props.height,\n\t          modelColors = _props.modelColors;\n\t\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        {\n\t          className: this.props.className,\n\t          style: {\n\t            width: width,\n\t            height: height,\n\t            overflow: 'hidden'\n\t          }\n\t        },\n\t        _react2.default.createElement(\n\t          'div',\n\t          {\n\t            style: {\n\t              height: '100%',\n\t              display: 'flex',\n\t              justifyContent: 'center',\n\t              alignItems: 'center'\n\t            }\n\t          },\n\t          _react2.default.createElement(_halogenium.ScaleLoader, { color: modelColors[0], size: '16px' })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return STLViewer;\n\t}(_react.Component);\n\t\n\tSTLViewer.propTypes = {\n\t  className: _propTypes2.default.string,\n\t  urls: _propTypes2.default.arrayOf(_propTypes2.default.string),\n\t  width: _propTypes2.default.number,\n\t  height: _propTypes2.default.number,\n\t  backgroundColor: _propTypes2.default.string,\n\t  modelColors: _propTypes2.default.arrayOf(_propTypes2.default.string),\n\t  rotate: _propTypes2.default.bool,\n\t  orbitControls: _propTypes2.default.bool,\n\t  cameraX: _propTypes2.default.number,\n\t  cameraY: _propTypes2.default.number,\n\t  cameraZ: _propTypes2.default.number,\n\t  lightX: _propTypes2.default.number,\n\t  lightY: _propTypes2.default.number,\n\t  lightZ: _propTypes2.default.number,\n\t  lightColor: _propTypes2.default.string,\n\t  rotationSpeeds: _propTypes2.default.arrayOf(_propTypes2.default.number)\n\t};\n\tSTLViewer.defaultProps = {\n\t  backgroundColor: '#EAEAEA',\n\t  modelColors: ['#FF0000', '#00FF00'],\n\t  height: 400,\n\t  width: 400,\n\t  rotate: true,\n\t  orbitControls: true,\n\t  cameraX: 0,\n\t  cameraY: 0,\n\t  cameraZ: null,\n\t  lightX: 0,\n\t  lightY: -1,\n\t  lightZ: 1,\n\t  lightColor: '#ffffff',\n\t  rotationSpeeds: [0, 0, 0.02]\n\t};\n\t\n\t\n\tmodule.exports = STLViewer;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar THREE = __webpack_require__(39);\n\t\n\t//\n\t// STL Loader added\n\t//\n\t/**\n\t * @author aleeper / http://adamleeper.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author gero3 / https://github.com/gero3\n\t *\n\t * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n\t *\n\t * Supports both binary and ASCII encoded files, with automatic detection of type.\n\t *\n\t * Limitations:\n\t *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n\t *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n\t *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\n\t *\n\t * Usage:\n\t *  var loader = new THREE.STLLoader();\n\t *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n\t *    scene.add( new THREE.Mesh( geometry ) );\n\t *  });\n\t *\n\t * For binary STLs geometry might contain colors for vertices. To use it:\n\t *  // use the same code to load STL as above\n\t *  if (geometry.hasColors) {\n\t *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n\t *  } else { .... }\n\t *  var mesh = new THREE.Mesh( geometry, material );\n\t */\n\t\n\tTHREE.STLLoader = function (manager) {\n\t\n\t\tthis.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n\t};\n\t\n\tTHREE.STLLoader.prototype = {\n\t\n\t\tconstructor: THREE.STLLoader,\n\t\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar loader = new THREE.XHRLoader(scope.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.load(url, function (text) {\n\t\n\t\t\t\tonLoad(scope.parse(text));\n\t\t\t}, onProgress, onError);\n\t\t},\n\t\n\t\tparse: function parse(data) {\n\t\n\t\t\tvar isBinary = function isBinary() {\n\t\n\t\t\t\tvar expect, face_size, n_faces, reader;\n\t\t\t\treader = new DataView(binData);\n\t\t\t\tface_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n\t\t\t\tn_faces = reader.getUint32(80, true);\n\t\t\t\texpect = 80 + 32 / 8 + n_faces * face_size;\n\t\n\t\t\t\tif (expect === reader.byteLength) {\n\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\n\t\t\t\t// some binary files will have different size from expected,\n\t\t\t\t// checking characters higher than ASCII to confirm is binary\n\t\t\t\tvar fileLength = reader.byteLength;\n\t\t\t\tfor (var index = 0; index < fileLength; index++) {\n\t\n\t\t\t\t\tif (reader.getUint8(index, false) > 127) {\n\t\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn false;\n\t\t\t};\n\t\n\t\t\tvar binData = this.ensureBinary(data);\n\t\n\t\t\treturn isBinary() ? this.parseBinary(binData) : this.parseASCII(this.ensureString(data));\n\t\t},\n\t\n\t\tparseBinary: function parseBinary(data) {\n\t\n\t\t\tvar reader = new DataView(data);\n\t\t\tvar faces = reader.getUint32(80, true);\n\t\n\t\t\tvar r,\n\t\t\t    g,\n\t\t\t    b,\n\t\t\t    hasColors = false,\n\t\t\t    colors;\n\t\t\tvar defaultR, defaultG, defaultB, alpha;\n\t\n\t\t\t// process STL header\n\t\t\t// check for default color in header (\"COLOR=rgba\" sequence).\n\t\n\t\t\tfor (var index = 0; index < 80 - 10; index++) {\n\t\n\t\t\t\tif (reader.getUint32(index, false) == 0x434F4C4F /*COLO*/ && reader.getUint8(index + 4) == 0x52 /*'R'*/ && reader.getUint8(index + 5) == 0x3D /*'='*/) {\n\t\n\t\t\t\t\thasColors = true;\n\t\t\t\t\tcolors = new Float32Array(faces * 3 * 3);\n\t\n\t\t\t\t\tdefaultR = reader.getUint8(index + 6) / 255;\n\t\t\t\t\tdefaultG = reader.getUint8(index + 7) / 255;\n\t\t\t\t\tdefaultB = reader.getUint8(index + 8) / 255;\n\t\t\t\t\talpha = reader.getUint8(index + 9) / 255;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar dataOffset = 84;\n\t\t\tvar faceLength = 12 * 4 + 2;\n\t\n\t\t\tvar offset = 0;\n\t\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\t\n\t\t\tvar vertices = new Float32Array(faces * 3 * 3);\n\t\t\tvar normals = new Float32Array(faces * 3 * 3);\n\t\n\t\t\tfor (var face = 0; face < faces; face++) {\n\t\n\t\t\t\tvar start = dataOffset + face * faceLength;\n\t\t\t\tvar normalX = reader.getFloat32(start, true);\n\t\t\t\tvar normalY = reader.getFloat32(start + 4, true);\n\t\t\t\tvar normalZ = reader.getFloat32(start + 8, true);\n\t\n\t\t\t\tif (hasColors) {\n\t\n\t\t\t\t\tvar packedColor = reader.getUint16(start + 48, true);\n\t\n\t\t\t\t\tif ((packedColor & 0x8000) === 0) {\n\t\t\t\t\t\t// facet has its own unique color\n\t\n\t\t\t\t\t\tr = (packedColor & 0x1F) / 31;\n\t\t\t\t\t\tg = (packedColor >> 5 & 0x1F) / 31;\n\t\t\t\t\t\tb = (packedColor >> 10 & 0x1F) / 31;\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tr = defaultR;\n\t\t\t\t\t\tg = defaultG;\n\t\t\t\t\t\tb = defaultB;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfor (var i = 1; i <= 3; i++) {\n\t\n\t\t\t\t\tvar vertexstart = start + i * 12;\n\t\n\t\t\t\t\tvertices[offset] = reader.getFloat32(vertexstart, true);\n\t\t\t\t\tvertices[offset + 1] = reader.getFloat32(vertexstart + 4, true);\n\t\t\t\t\tvertices[offset + 2] = reader.getFloat32(vertexstart + 8, true);\n\t\n\t\t\t\t\tnormals[offset] = normalX;\n\t\t\t\t\tnormals[offset + 1] = normalY;\n\t\t\t\t\tnormals[offset + 2] = normalZ;\n\t\n\t\t\t\t\tif (hasColors) {\n\t\t\t\t\t\tcolors[offset] = r;\n\t\t\t\t\t\tcolors[offset + 1] = g;\n\t\t\t\t\t\tcolors[offset + 2] = b;\n\t\t\t\t\t}\n\t\n\t\t\t\t\toffset += 3;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tgeometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n\t\t\tgeometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n\t\n\t\t\tif (hasColors) {\n\t\t\t\tgeometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n\t\t\t\tgeometry.hasColors = true;\n\t\t\t\tgeometry.alpha = alpha;\n\t\t\t}\n\t\n\t\t\treturn geometry;\n\t\t},\n\t\n\t\tparseASCII: function parseASCII(data) {\n\t\n\t\t\tvar geometry, length, normal, patternFace, patternNormal, patternVertex, result, text;\n\t\t\tgeometry = new THREE.Geometry();\n\t\t\tpatternFace = /facet([\\s\\S]*?)endfacet/g;\n\t\n\t\t\twhile ((result = patternFace.exec(data)) !== null) {\n\t\n\t\t\t\ttext = result[0];\n\t\t\t\tpatternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t\t\t\twhile ((result = patternNormal.exec(text)) !== null) {\n\t\n\t\t\t\t\tnormal = new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5]));\n\t\t\t\t}\n\t\n\t\t\t\tpatternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t\t\t\twhile ((result = patternVertex.exec(text)) !== null) {\n\t\n\t\t\t\t\tgeometry.vertices.push(new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5])));\n\t\t\t\t}\n\t\n\t\t\t\tlength = geometry.vertices.length;\n\t\n\t\t\t\tgeometry.faces.push(new THREE.Face3(length - 3, length - 2, length - 1, normal));\n\t\t\t}\n\t\n\t\t\tgeometry.computeBoundingBox();\n\t\t\tgeometry.computeBoundingSphere();\n\t\n\t\t\treturn geometry;\n\t\t},\n\t\n\t\tensureString: function ensureString(buf) {\n\t\n\t\t\tif (typeof buf !== \"string\") {\n\t\t\t\tvar array_buffer = new Uint8Array(buf);\n\t\t\t\tvar str = '';\n\t\t\t\tfor (var i = 0; i < buf.byteLength; i++) {\n\t\t\t\t\tstr += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n\t\t\t\t}\n\t\t\t\treturn str;\n\t\t\t} else {\n\t\t\t\treturn buf;\n\t\t\t}\n\t\t},\n\t\n\t\tensureBinary: function ensureBinary(buf) {\n\t\n\t\t\tif (typeof buf === \"string\") {\n\t\t\t\tvar array_buffer = new Uint8Array(buf.length);\n\t\t\t\tfor (var i = 0; i < buf.length; i++) {\n\t\t\t\t\tarray_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n\t\t\t\t}\n\t\t\t\treturn array_buffer.buffer || array_buffer;\n\t\t\t} else {\n\t\t\t\treturn buf;\n\t\t\t}\n\t\t}\n\t\n\t};\n\t\n\tif (typeof DataView === 'undefined') {\n\t\n\t\tDataView = function DataView(buffer, byteOffset, byteLength) {\n\t\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.byteOffset = byteOffset || 0;\n\t\t\tthis.byteLength = byteLength || buffer.byteLength || buffer.length;\n\t\t\tthis._isString = typeof buffer === \"string\";\n\t\t};\n\t\n\t\tDataView.prototype = {\n\t\n\t\t\t_getCharCodes: function _getCharCodes(buffer, start, length) {\n\t\t\t\tstart = start || 0;\n\t\t\t\tlength = length || buffer.length;\n\t\t\t\tvar end = start + length;\n\t\t\t\tvar codes = [];\n\t\t\t\tfor (var i = start; i < end; i++) {\n\t\t\t\t\tcodes.push(buffer.charCodeAt(i) & 0xff);\n\t\t\t\t}\n\t\t\t\treturn codes;\n\t\t\t},\n\t\n\t\t\t_getBytes: function _getBytes(length, byteOffset, littleEndian) {\n\t\n\t\t\t\tvar result;\n\t\n\t\t\t\t// Handle the lack of endianness\n\t\t\t\tif (littleEndian === undefined) {\n\t\n\t\t\t\t\tlittleEndian = this._littleEndian;\n\t\t\t\t}\n\t\n\t\t\t\t// Handle the lack of byteOffset\n\t\t\t\tif (byteOffset === undefined) {\n\t\n\t\t\t\t\tbyteOffset = this.byteOffset;\n\t\t\t\t} else {\n\t\n\t\t\t\t\tbyteOffset = this.byteOffset + byteOffset;\n\t\t\t\t}\n\t\n\t\t\t\tif (length === undefined) {\n\t\n\t\t\t\t\tlength = this.byteLength - byteOffset;\n\t\t\t\t}\n\t\n\t\t\t\t// Error Checking\n\t\t\t\tif (typeof byteOffset !== 'number') {\n\t\n\t\t\t\t\tthrow new TypeError('DataView byteOffset is not a number');\n\t\t\t\t}\n\t\n\t\t\t\tif (length < 0 || byteOffset + length > this.byteLength) {\n\t\n\t\t\t\t\tthrow new Error('DataView length or (byteOffset+length) value is out of bounds');\n\t\t\t\t}\n\t\n\t\t\t\tif (this.isString) {\n\t\n\t\t\t\t\tresult = this._getCharCodes(this.buffer, byteOffset, byteOffset + length);\n\t\t\t\t} else {\n\t\n\t\t\t\t\tresult = this.buffer.slice(byteOffset, byteOffset + length);\n\t\t\t\t}\n\t\n\t\t\t\tif (!littleEndian && length > 1) {\n\t\n\t\t\t\t\tif (!(result instanceof Array)) {\n\t\n\t\t\t\t\t\tresult = Array.prototype.slice.call(result);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tresult.reverse();\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\t\t},\n\t\n\t\t\t// Compatibility functions on a String Buffer\n\t\n\t\t\tgetFloat64: function getFloat64(byteOffset, littleEndian) {\n\t\n\t\t\t\tvar b = this._getBytes(8, byteOffset, littleEndian),\n\t\t\t\t    sign = 1 - 2 * (b[7] >> 7),\n\t\t\t\t    exponent = ((b[7] << 1 & 0xff) << 3 | b[6] >> 4) - ((1 << 10) - 1),\n\t\n\t\n\t\t\t\t// Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n\t\t\t\tmantissa = (b[6] & 0x0f) * Math.pow(2, 48) + b[5] * Math.pow(2, 40) + b[4] * Math.pow(2, 32) + b[3] * Math.pow(2, 24) + b[2] * Math.pow(2, 16) + b[1] * Math.pow(2, 8) + b[0];\n\t\n\t\t\t\tif (exponent === 1024) {\n\t\t\t\t\tif (mantissa !== 0) {\n\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn sign * Infinity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (exponent === -1023) {\n\t\t\t\t\t// Denormalized\n\t\t\t\t\treturn sign * mantissa * Math.pow(2, -1022 - 52);\n\t\t\t\t}\n\t\n\t\t\t\treturn sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\n\t\t\t},\n\t\n\t\t\tgetFloat32: function getFloat32(byteOffset, littleEndian) {\n\t\n\t\t\t\tvar b = this._getBytes(4, byteOffset, littleEndian),\n\t\t\t\t    sign = 1 - 2 * (b[3] >> 7),\n\t\t\t\t    exponent = (b[3] << 1 & 0xff | b[2] >> 7) - 127,\n\t\t\t\t    mantissa = (b[2] & 0x7f) << 16 | b[1] << 8 | b[0];\n\t\n\t\t\t\tif (exponent === 128) {\n\t\t\t\t\tif (mantissa !== 0) {\n\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn sign * Infinity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (exponent === -127) {\n\t\t\t\t\t// Denormalized\n\t\t\t\t\treturn sign * mantissa * Math.pow(2, -126 - 23);\n\t\t\t\t}\n\t\n\t\t\t\treturn sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\n\t\t\t},\n\t\n\t\t\tgetInt32: function getInt32(byteOffset, littleEndian) {\n\t\t\t\tvar b = this._getBytes(4, byteOffset, littleEndian);\n\t\t\t\treturn b[3] << 24 | b[2] << 16 | b[1] << 8 | b[0];\n\t\t\t},\n\t\n\t\t\tgetUint32: function getUint32(byteOffset, littleEndian) {\n\t\t\t\treturn this.getInt32(byteOffset, littleEndian) >>> 0;\n\t\t\t},\n\t\n\t\t\tgetInt16: function getInt16(byteOffset, littleEndian) {\n\t\t\t\treturn this.getUint16(byteOffset, littleEndian) << 16 >> 16;\n\t\t\t},\n\t\n\t\t\tgetUint16: function getUint16(byteOffset, littleEndian) {\n\t\t\t\tvar b = this._getBytes(2, byteOffset, littleEndian);\n\t\t\t\treturn b[1] << 8 | b[0];\n\t\t\t},\n\t\n\t\t\tgetInt8: function getInt8(byteOffset) {\n\t\t\t\treturn this.getUint8(byteOffset) << 24 >> 24;\n\t\t\t},\n\t\n\t\t\tgetUint8: function getUint8(byteOffset) {\n\t\t\t\treturn this._getBytes(1, byteOffset)[0];\n\t\t\t}\n\t\n\t\t};\n\t}\n\t\n\tmodule.exports = THREE;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = document.createElement('div').style;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar cssVendorPrefix;\n\t\n\tmodule.exports = function() {\n\t\n\t  if (cssVendorPrefix) return cssVendorPrefix;\n\t\n\t  var styles = window.getComputedStyle(document.documentElement, '');\n\t  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o']))[1];\n\t\n\t  return cssVendorPrefix = '-' + pre + '-';\n\t}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar builtinStyle = __webpack_require__(11);\n\tvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\tvar domVendorPrefix;\n\t\n\t// Helper function to get the proper vendor property name. (transition => WebkitTransition)\n\tmodule.exports = function(prop, isSupportTest) {\n\t\n\t  var vendorProp;\n\t  if (prop in builtinStyle) return prop;\n\t\n\t  var UpperProp = prop.charAt(0).toUpperCase() + prop.substr(1);\n\t\n\t  if (domVendorPrefix) {\n\t\n\t    vendorProp = domVendorPrefix + UpperProp;\n\t    if (vendorProp in builtinStyle) {\n\t      return vendorProp;\n\t    }\n\t  } else {\n\t\n\t    for (var i = 0; i < prefixes.length; ++i) {\n\t      vendorProp = prefixes[i] + UpperProp;\n\t      if (vendorProp in builtinStyle) {\n\t        domVendorPrefix = prefixes[i];\n\t        return vendorProp;\n\t      }\n\t    }\n\t  }\n\t\n\t  // if support test, not fallback to origin prop name\n\t  if (!isSupportTest) {\n\t    return prop;\n\t  }\n\t\n\t}\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar extraSheet;\n\t\n\tmodule.exports = function(css) {\n\t\n\t  if (!extraSheet) {\n\t    // First time, create an extra stylesheet for adding rules\n\t    extraSheet = document.createElement('style');\n\t    document.getElementsByTagName('head')[0].appendChild(extraSheet);\n\t    // Keep reference to actual StyleSheet object (`styleSheet` for IE < 9)\n\t    extraSheet = extraSheet.sheet || extraSheet.styleSheet;\n\t  }\n\t\n\t  var index = (extraSheet.cssRules || extraSheet.rules).length;\n\t  extraSheet.insertRule(css, index);\n\t\n\t  return extraSheet;\n\t}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '50%': {\n\t    transform: 'scale(0.75)',\n\t    opacity: 0.2\n\t  },\n\t  '100%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t};\n\t\n\tvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar BeatLoader = function (_Component) {\n\t  _inherits(BeatLoader, _Component);\n\t\n\t  function BeatLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, BeatLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BeatLoader.__proto__ || Object.getPrototypeOf(BeatLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.7s', (i % 2 ? 0 : 0.35) + 's', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(BeatLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return BeatLoader;\n\t}(_react.Component);\n\t\n\tBeatLoader.propTypes = propTypes;\n\tBeatLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = BeatLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=BeatLoader.js.map\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar keyframes = {\n\t  '0%, 100%': {\n\t    transform: 'scale(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.0)'\n\t  }\n\t};\n\t\n\tvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar BounceLoader = function (_Component) {\n\t  _inherits(BounceLoader, _Component);\n\t\n\t  function BounceLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, BounceLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BounceLoader.__proto__ || Object.getPrototypeOf(BounceLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        borderRadius: '100%',\n\t        opacity: 0.6,\n\t        position: 'absolute',\n\t        top: 0,\n\t        left: 0,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '2s', i === 1 ? '1s' : '0s', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)({\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(BounceLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle() },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return BounceLoader;\n\t}(_react.Component);\n\t\n\tBounceLoader.propTypes = propTypes;\n\tBounceLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px'\n\t};\n\texports.default = BounceLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=BounceLoader.js.map\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'rotate(0deg) scale(1)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotate(180deg) scale(0.8)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotate(360deg) scale(1)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar ClipLoader = function (_Component) {\n\t  _inherits(ClipLoader, _Component);\n\t\n\t  function ClipLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, ClipLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ClipLoader.__proto__ || Object.getPrototypeOf(ClipLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        border: '2px solid',\n\t        borderColor: _this.props.color,\n\t        borderBottomColor: 'transparent',\n\t        borderRadius: '100%',\n\t        background: 'transparent !important',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '0.75s', '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getBallStyle(i), _this.getAnimationStyle(), {\n\t        display: 'inline-block'\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(ClipLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return ClipLoader;\n\t}(_react.Component);\n\t\n\tClipLoader.propTypes = propTypes;\n\tClipLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '35px'\n\t};\n\texports.default = ClipLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=ClipLoader.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar rotateKeyframes = {\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var bounceKeyframes = {\n\t  '0%, 100%': {\n\t    transform: 'scale(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var rotateAnimationName = (0, _insertKeyframesRule2.default)(rotateKeyframes);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar bounceAnimationName = (0, _insertKeyframesRule2.default)(bounceKeyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar DotLoader = function (_Component) {\n\t  _inherits(DotLoader, _Component);\n\t\n\t  function DotLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, DotLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DotLoader.__proto__ || Object.getPrototypeOf(DotLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: size,\n\t        height: size,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i === 0 ? rotateAnimationName : bounceAnimationName, '2s', i === 2 ? '-1s' : '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'forwards';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = _this.props.size | 0;\n\t      var ballSize = size / 2;\n\t\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(ballSize), _this.getAnimationStyle(i), {\n\t          position: 'absolute',\n\t          top: i % 2 ? 0 : 'auto',\n\t          bottom: i % 2 ? 'auto' : 0,\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getAnimationStyle(i), {\n\t        width: size,\n\t        height: size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(DotLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return DotLoader;\n\t}(_react.Component);\n\t\n\tDotLoader.propTypes = propTypes;\n\tDotLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = DotLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=DotLoader.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '50%': {\n\t    opacity: 0.3\n\t  },\n\t  '100%': {\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  radius: _propTypes2.default.string,\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar FadeLoader = function (_Component) {\n\t  _inherits(FadeLoader, _Component);\n\t\n\t  function FadeLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, FadeLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FadeLoader.__proto__ || Object.getPrototypeOf(FadeLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        height: _this.props.height,\n\t        width: _this.props.width,\n\t        margin: _this.props.margin,\n\t        borderRadius: _this.props.radius,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '1.2s', i * 0.12 + 's', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getPosStyle = function (i) {\n\t      var radius = 20;\n\t      var quarter = radius / 2 + radius / 5.5;\n\t\n\t      var lines = {\n\t        l1: {\n\t          top: radius,\n\t          left: 0\n\t        },\n\t        l2: {\n\t          top: quarter,\n\t          left: quarter,\n\t          transform: 'rotate(-45deg)'\n\t        },\n\t        l3: {\n\t          top: 0,\n\t          left: radius,\n\t          transform: 'rotate(90deg)'\n\t        },\n\t        l4: {\n\t          top: -quarter,\n\t          left: quarter,\n\t          transform: 'rotate(45deg)'\n\t        },\n\t        l5: {\n\t          top: -radius,\n\t          left: 0\n\t        },\n\t        l6: {\n\t          top: -quarter,\n\t          left: -quarter,\n\t          transform: 'rotate(-45deg)'\n\t        },\n\t        l7: {\n\t          top: 0,\n\t          left: -radius,\n\t          transform: 'rotate(90deg)'\n\t        },\n\t        l8: {\n\t          top: quarter,\n\t          left: -quarter,\n\t          transform: 'rotate(45deg)'\n\t        }\n\t      };\n\t\n\t      return lines['l' + i];\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getPosStyle(i), _this.getAnimationStyle(i), {\n\t        position: 'absolute',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(FadeLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var style = {\n\t          position: 'relative',\n\t          fontSize: 0\n\t        };\n\t\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(5) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(6) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(7) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(8) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return FadeLoader;\n\t}(_react.Component);\n\t\n\tFadeLoader.propTypes = propTypes;\n\tFadeLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  height: '15px',\n\t  width: '5px',\n\t  margin: '2px',\n\t  radius: '2px'\n\t};\n\texports.default = FadeLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=FadeLoader.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scale(1)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(0.5)',\n\t    opacity: 0.7\n\t  },\n\t  '100%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\t/**\n\t * @param  {Number} top\n\t * @return {Number}\n\t */\n\tfunction random(top) {\n\t  return Math.random() * top;\n\t}\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar GridLoader = function (_Component) {\n\t  _inherits(GridLoader, _Component);\n\t\n\t  function GridLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, GridLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GridLoader.__proto__ || Object.getPrototypeOf(GridLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animationDuration = random(100) / 100 + 0.6 + 's';\n\t      var animationDelay = random(100) / 100 - 0.2 + 's';\n\t\n\t      var animation = [animationName, animationDuration, animationDelay, 'infinite', 'ease'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(GridLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var style = {\n\t          width: parseFloat(this.props.size) * 3 + parseFloat(this.props.margin) * 6,\n\t          fontSize: 0\n\t        };\n\t\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(5) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(6) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(7) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(8) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(9) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return GridLoader;\n\t}(_react.Component);\n\t\n\tGridLoader.propTypes = propTypes;\n\tGridLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px'\n\t};\n\texports.default = GridLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=GridLoader.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.SyncLoader = exports.SquareLoader = exports.SkewLoader = exports.ScaleLoader = exports.RotateLoader = exports.RiseLoader = exports.RingLoader = exports.PulseLoader = exports.PacmanLoader = exports.MoonLoader = exports.GridLoader = exports.FadeLoader = exports.DotLoader = exports.ClipLoader = exports.BounceLoader = exports.BeatLoader = undefined;\n\t\n\tvar _BeatLoader2 = __webpack_require__(15);\n\t\n\tvar _BeatLoader3 = _interopRequireDefault(_BeatLoader2);\n\t\n\tvar _BounceLoader2 = __webpack_require__(16);\n\t\n\tvar _BounceLoader3 = _interopRequireDefault(_BounceLoader2);\n\t\n\tvar _ClipLoader2 = __webpack_require__(17);\n\t\n\tvar _ClipLoader3 = _interopRequireDefault(_ClipLoader2);\n\t\n\tvar _DotLoader2 = __webpack_require__(18);\n\t\n\tvar _DotLoader3 = _interopRequireDefault(_DotLoader2);\n\t\n\tvar _FadeLoader2 = __webpack_require__(19);\n\t\n\tvar _FadeLoader3 = _interopRequireDefault(_FadeLoader2);\n\t\n\tvar _GridLoader2 = __webpack_require__(20);\n\t\n\tvar _GridLoader3 = _interopRequireDefault(_GridLoader2);\n\t\n\tvar _MoonLoader2 = __webpack_require__(22);\n\t\n\tvar _MoonLoader3 = _interopRequireDefault(_MoonLoader2);\n\t\n\tvar _PacmanLoader2 = __webpack_require__(23);\n\t\n\tvar _PacmanLoader3 = _interopRequireDefault(_PacmanLoader2);\n\t\n\tvar _PulseLoader2 = __webpack_require__(24);\n\t\n\tvar _PulseLoader3 = _interopRequireDefault(_PulseLoader2);\n\t\n\tvar _RingLoader2 = __webpack_require__(25);\n\t\n\tvar _RingLoader3 = _interopRequireDefault(_RingLoader2);\n\t\n\tvar _RiseLoader2 = __webpack_require__(26);\n\t\n\tvar _RiseLoader3 = _interopRequireDefault(_RiseLoader2);\n\t\n\tvar _RotateLoader2 = __webpack_require__(27);\n\t\n\tvar _RotateLoader3 = _interopRequireDefault(_RotateLoader2);\n\t\n\tvar _ScaleLoader2 = __webpack_require__(28);\n\t\n\tvar _ScaleLoader3 = _interopRequireDefault(_ScaleLoader2);\n\t\n\tvar _SkewLoader2 = __webpack_require__(29);\n\t\n\tvar _SkewLoader3 = _interopRequireDefault(_SkewLoader2);\n\t\n\tvar _SquareLoader2 = __webpack_require__(30);\n\t\n\tvar _SquareLoader3 = _interopRequireDefault(_SquareLoader2);\n\t\n\tvar _SyncLoader2 = __webpack_require__(31);\n\t\n\tvar _SyncLoader3 = _interopRequireDefault(_SyncLoader2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.BeatLoader = _BeatLoader3.default;\n\texports.BounceLoader = _BounceLoader3.default;\n\texports.ClipLoader = _ClipLoader3.default;\n\texports.DotLoader = _DotLoader3.default;\n\texports.FadeLoader = _FadeLoader3.default;\n\texports.GridLoader = _GridLoader3.default;\n\texports.MoonLoader = _MoonLoader3.default;\n\texports.PacmanLoader = _PacmanLoader3.default;\n\texports.PulseLoader = _PulseLoader3.default;\n\texports.RingLoader = _RingLoader3.default;\n\texports.RiseLoader = _RiseLoader3.default;\n\texports.RotateLoader = _RotateLoader3.default;\n\texports.ScaleLoader = _ScaleLoader3.default;\n\texports.SkewLoader = _SkewLoader3.default;\n\texports.SquareLoader = _SquareLoader3.default;\n\texports.SyncLoader = _SyncLoader3.default;\n\t//# sourceMappingURL=Halogenium.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar MoonLoader = function (_Component) {\n\t  _inherits(MoonLoader, _Component);\n\t\n\t  function MoonLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, MoonLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MoonLoader.__proto__ || Object.getPrototypeOf(MoonLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '0.6s', '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'forwards';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = _this.props.size | 0;\n\t      var moonSize = size / 7;\n\t\n\t      if (i === 1) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getBallStyle(moonSize), _this.getAnimationStyle(i), {\n\t          backgroundColor: _this.props.color,\n\t          opacity: '0.8',\n\t          position: 'absolute',\n\t          top: size / 2 - moonSize / 2\n\t        });\n\t      } else if (i === 2) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getBallStyle(size), {\n\t          border: moonSize + 'px solid ' + _this.props.color,\n\t          opacity: 0.1\n\t        });\n\t      }\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getAnimationStyle(i), {\n\t        position: 'relative'\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(MoonLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return MoonLoader;\n\t}(_react.Component);\n\t\n\tMoonLoader.propTypes = propTypes;\n\tMoonLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = MoonLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=MoonLoader.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar animations = {};\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar PacmanLoader = function (_Component) {\n\t  _inherits(PacmanLoader, _Component);\n\t\n\t  function PacmanLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, PacmanLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PacmanLoader.__proto__ || Object.getPrototypeOf(PacmanLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign,\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var size = _this.props.size;\n\t      var animationName = animations[size];\n\t\n\t      if (!animationName) {\n\t        var keyframes = {\n\t          '75%': {\n\t            opacity: 0.7\n\t          },\n\t          '100%': {\n\t            transform: 'translate(' + -4 * size + 'px, ' + -size / 4 + 'px)'\n\t          }\n\t        };\n\t        animationName = animations[size] = (0, _insertKeyframesRule2.default)(keyframes);\n\t      }\n\t\n\t      var animation = [animationName, '1s', i * 0.25 + 's', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i | 0 === 1) {\n\t        var s1 = _this.props.size + 'px solid transparent';\n\t        var s2 = _this.props.size + 'px solid ' + _this.props.color;\n\t\n\t        return {\n\t          width: 0,\n\t          height: 0,\n\t          borderRight: s1,\n\t          borderTop: s2,\n\t          borderLeft: s2,\n\t          borderBottom: s2,\n\t          borderRadius: _this.props.size\n\t        };\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        width: 10,\n\t        height: 10,\n\t        transform: 'translate(0, ' + -_this.props.size / 4 + 'px)',\n\t        position: 'absolute',\n\t        top: 25,\n\t        left: 100\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var style = {\n\t          position: 'relative',\n\t          fontSize: 0\n\t        };\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(PacmanLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return PacmanLoader;\n\t}(_react.Component);\n\t\n\tPacmanLoader.propTypes = propTypes;\n\tPacmanLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  size: 25,\n\t  margin: 2 };\n\texports.default = PacmanLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=PacmanLoader.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  },\n\t  '45%': {\n\t    transform: 'scale(0.1)',\n\t    opacity: 0.7\n\t  },\n\t  '80%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar PulseLoader = function (_Component) {\n\t  _inherits(PulseLoader, _Component);\n\t\n\t  function PulseLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, PulseLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PulseLoader.__proto__ || Object.getPrototypeOf(PulseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.75s', i * 0.12 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(PulseLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return PulseLoader;\n\t}(_react.Component);\n\t\n\tPulseLoader.propTypes = propTypes;\n\tPulseLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = PulseLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=PulseLoader.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar rightRotateKeyframes = {\n\t  '0%': {\n\t    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\t\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(180deg) rotateY(360deg) rotateZ(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var leftRotateKeyframes = {\n\t  '0%': {\n\t    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(360deg) rotateY(180deg) rotateZ(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var rightRotateAnimationName = (0, _insertKeyframesRule2.default)(rightRotateKeyframes);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar leftRotateAnimationName = (0, _insertKeyframesRule2.default)(leftRotateKeyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RingLoader = function (_Component) {\n\t  _inherits(RingLoader, _Component);\n\t\n\t  function RingLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RingLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RingLoader.__proto__ || Object.getPrototypeOf(RingLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getCircleStyle = function (size) {\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        border: size / 10 + 'px solid ' + _this.props.color,\n\t        opacity: 0.4,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i | 0 === 1 ? rightRotateAnimationName : leftRotateAnimationName, '2s', '0s', 'infinite', 'linear'].join(' ');\n\t\n\t      var animationFillMode = 'forwards';\n\t      var perspective = '800px';\n\t\n\t      return {\n\t        perspective: perspective,\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = parseInt(_this.props.size, 10);\n\t\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getCircleStyle(size), _this.getAnimationStyle(i), {\n\t          position: 'absolute',\n\t          top: 0,\n\t          left: 0\n\t        });\n\t      }\n\t\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      };\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: _this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RingLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RingLoader;\n\t}(_react.Component);\n\t\n\tRingLoader.propTypes = propTypes;\n\tRingLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = RingLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RingLoader.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Number}\n\t */\n\tvar riseAmount = 30;\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframesEven = {\n\t  '0%': {\n\t    transform: 'scale(1.1)'\n\t  },\n\t  '25%': {\n\t    transform: 'translateY(-' + riseAmount + 'px)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(0.4)'\n\t  },\n\t  '75%': {\n\t    transform: 'translateY(' + riseAmount + 'px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0) scale(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var keyframesOdd = {\n\t  '0%': {\n\t    transform: 'scale(0.4)'\n\t  },\n\t  25: {\n\t    transform: 'translateY(' + riseAmount + 'px)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.1)'\n\t  },\n\t  '75%': {\n\t    transform: 'translateY(-' + riseAmount + 'px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0) scale(0.75)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationNameEven = (0, _insertKeyframesRule2.default)(keyframesEven);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar animationNameOdd = (0, _insertKeyframesRule2.default)(keyframesOdd);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RiseLoader = function (_Component) {\n\t  _inherits(RiseLoader, _Component);\n\t\n\t  function RiseLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RiseLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RiseLoader.__proto__ || Object.getPrototypeOf(RiseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i % 2 === 0 ? animationNameEven : animationNameOdd, '1s', '0s', 'infinite', 'cubic-bezier(.15,.46,.9,.6)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RiseLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RiseLoader;\n\t}(_react.Component);\n\t\n\tRiseLoader.propTypes = propTypes;\n\tRiseLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = RiseLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RiseLoader.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'rotate(0deg)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotate(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RotateLoader = function (_Component) {\n\t  _inherits(RotateLoader, _Component);\n\t\n\t  function RotateLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RotateLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RotateLoader.__proto__ || Object.getPrototypeOf(RotateLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '1s', '0s', 'infinite', 'cubic-bezier(.7,-.13,.22,.86)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), {\n\t          opacity: '0.8',\n\t          position: 'absolute',\n\t          top: 0,\n\t          left: i % 2 ? -28 : 25,\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: _this.getStyle() },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RotateLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RotateLoader;\n\t}(_react.Component);\n\t\n\tRotateLoader.propTypes = propTypes;\n\tRotateLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = RotateLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RotateLoader.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scaley(1.0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scaley(0.4)'\n\t  },\n\t  '100%': {\n\t    transform: 'scaley(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  radius: _propTypes2.default.string,\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar ScaleLoader = function (_Component) {\n\t  _inherits(ScaleLoader, _Component);\n\t\n\t  function ScaleLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, ScaleLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScaleLoader.__proto__ || Object.getPrototypeOf(ScaleLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        height: _this.props.height,\n\t        width: _this.props.width,\n\t        margin: _this.props.margin,\n\t        borderRadius: _this.props.radius,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '1s', i * 0.1 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(ScaleLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return ScaleLoader;\n\t}(_react.Component);\n\t\n\tScaleLoader.propTypes = propTypes;\n\tScaleLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  height: '35px',\n\t  width: '4px',\n\t  margin: '2px',\n\t  radius: '2px' };\n\texports.default = ScaleLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=ScaleLoader.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '25%': {\n\t    transform: 'perspective(100px) rotateX(180deg) rotateY(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'perspective(100px) rotateX(180deg) rotateY(180deg)'\n\t  },\n\t  '75%': {\n\t    transform: 'perspective(100px) rotateX(0) rotateY(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'perspective(100px) rotateX(0) rotateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SkewLoader = function (_Component) {\n\t  _inherits(SkewLoader, _Component);\n\t\n\t  function SkewLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SkewLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SkewLoader.__proto__ || Object.getPrototypeOf(SkewLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSharpStyle = function () {\n\t      return {\n\t        width: 0,\n\t        height: 0,\n\t        borderLeft: _this.props.size + ' solid transparent',\n\t        borderRight: _this.props.size + ' solid transparent',\n\t        borderBottom: _this.props.size + ' solid ' + _this.props.color,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getSharpStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block'\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SkewLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SkewLoader;\n\t}(_react.Component);\n\t\n\tSkewLoader.propTypes = propTypes;\n\tSkewLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  size: '20px' };\n\texports.default = SkewLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SkewLoader.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '25%': {\n\t    transform: 'rotateX(180deg) rotateY(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotateX(180deg) rotateY(180deg)'\n\t  },\n\t  '75%': {\n\t    transform: 'rotateX(0) rotateY(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(0) rotateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SquareLoader = function (_Component) {\n\t  _inherits(SquareLoader, _Component);\n\t\n\t  function SquareLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SquareLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SquareLoader.__proto__ || Object.getPrototypeOf(SquareLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSquareStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n\t      var animationFillMode = 'both';\n\t      var perspective = '100px';\n\t\n\t      return {\n\t        perspective: perspective,\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getSquareStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SquareLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SquareLoader;\n\t}(_react.Component);\n\t\n\tSquareLoader.propTypes = propTypes;\n\tSquareLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '50px' };\n\texports.default = SquareLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SquareLoader.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '33%': {\n\t    transform: 'translateY(10px)'\n\t  },\n\t  '66%': {\n\t    transform: 'translateY(-10px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SyncLoader = function (_Component) {\n\t  _inherits(SyncLoader, _Component);\n\t\n\t  function SyncLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SyncLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SyncLoader.__proto__ || Object.getPrototypeOf(SyncLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.6s', i * 0.07 + 's', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SyncLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SyncLoader;\n\t}(_react.Component);\n\t\n\tSyncLoader.propTypes = propTypes;\n\tSyncLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = SyncLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SyncLoader.js.map\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(33);\n\t\n\tfunction emptyFunction() {}\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    var err = new Error(\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t    err.name = 'Invariant Violation';\n\t    throw err;\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim\n\t  };\n\t\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.7.0\n\t * react-dom.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t/*\n\t Modernizr 3.0.0pre (Custom Build) | MIT\n\t*/\n\t'use strict';var aa=__webpack_require__(1),n=__webpack_require__(5),ba=__webpack_require__(37);function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\n\tfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\n\tvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\n\tfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\n\tfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=wa(c);la(d,b,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\n\tfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)xa(a,b[d],c[d]);else b&&xa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\n\tvar Ca={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\n\tfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\n\treturn c}function Ea(a){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(za(a,Ba),Aa?t(\"95\"):void 0,ha))throw a=ia,ha=!1,ia=null,a;}var Fa=Math.random().toString(36).slice(2),Ga=\"__reactInternalInstance$\"+Fa,Ha=\"__reactEventHandlers$\"+Fa;function Ia(a){if(a[Ga])return a[Ga];for(;!a[Ga];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ga];return 5===a.tag||6===a.tag?a:null}function Ja(a){a=a[Ga];return!a||5!==a.tag&&6!==a.tag?null:a}\n\tfunction Ka(a){if(5===a.tag||6===a.tag)return a.stateNode;t(\"33\")}function La(a){return a[Ha]||null}function Ma(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Na(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\n\tfunction Oa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Ma(b);for(b=c.length;0<b--;)Na(c[b],\"captured\",a);for(b=0;b<c.length;b++)Na(c[b],\"bubbled\",a)}}function Pa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Qa(a){a&&a.dispatchConfig.registrationName&&Pa(a._targetInst,null,a)}\n\tfunction Ra(a){za(a,Oa)}var Sa=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Ta(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ua={animationend:Ta(\"Animation\",\"AnimationEnd\"),animationiteration:Ta(\"Animation\",\"AnimationIteration\"),animationstart:Ta(\"Animation\",\"AnimationStart\"),transitionend:Ta(\"Transition\",\"TransitionEnd\")},Va={},Wa={};\n\tSa&&(Wa=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ua.animationend.animation,delete Ua.animationiteration.animation,delete Ua.animationstart.animation),\"TransitionEvent\"in window||delete Ua.transitionend.transition);function Xa(a){if(Va[a])return Va[a];if(!Ua[a])return a;var b=Ua[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Wa)return Va[a]=b[c];return a}\n\tvar Ya=Xa(\"animationend\"),Za=Xa(\"animationiteration\"),$a=Xa(\"animationstart\"),ab=Xa(\"transitionend\"),bb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),cb=null,eb=null,fb=null;\n\tfunction gb(){if(fb)return fb;var a,b=eb,c=b.length,d,e=\"value\"in cb?cb.value:cb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return fb=e.slice(a,1<d?1-d:void 0)}function hb(){return!0}function ib(){return!1}\n\tfunction z(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?hb:ib;this.isPropagationStopped=ib;return this}\n\tn(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=hb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=hb)},persist:function(){this.isPersistent=hb},isPersistent:ib,destructor:function(){var a=this.constructor.Interface,\n\tb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ib;this._dispatchInstances=this._dispatchListeners=null}});z.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\n\tz.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;jb(c);return c};jb(z);function kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function lb(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\n\tfunction jb(a){a.eventPool=[];a.getPooled=kb;a.release=lb}var mb=z.extend({data:null}),nb=z.extend({data:null}),ob=[9,13,27,32],pb=Sa&&\"CompositionEvent\"in window,qb=null;Sa&&\"documentMode\"in document&&(qb=document.documentMode);\n\tvar rb=Sa&&\"TextEvent\"in window&&!qb,sb=Sa&&(!pb||qb&&8<qb&&11>=qb),tb=String.fromCharCode(32),ub={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\n\tcaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},vb=!1;\n\tfunction wb(a,b){switch(a){case \"keyup\":return-1!==ob.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function xb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var yb=!1;function zb(a,b){switch(a){case \"compositionend\":return xb(b);case \"keypress\":if(32!==b.which)return null;vb=!0;return tb;case \"textInput\":return a=b.data,a===tb&&vb?null:a;default:return null}}\n\tfunction Ab(a,b){if(yb)return\"compositionend\"===a||!pb&&wb(a,b)?(a=gb(),fb=eb=cb=null,yb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return sb&&\"ko\"!==b.locale?null:b.data;default:return null}}\n\tvar Bb={eventTypes:ub,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(pb)b:{switch(a){case \"compositionstart\":e=ub.compositionStart;break b;case \"compositionend\":e=ub.compositionEnd;break b;case \"compositionupdate\":e=ub.compositionUpdate;break b}e=void 0}else yb?wb(a,c)&&(e=ub.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=ub.compositionStart);e?(sb&&\"ko\"!==c.locale&&(yb||e!==ub.compositionStart?e===ub.compositionEnd&&yb&&(f=gb()):(cb=d,eb=\"value\"in cb?cb.value:cb.textContent,yb=\n\t!0)),e=mb.getPooled(e,b,c,d),f?e.data=f:(f=xb(c),null!==f&&(e.data=f)),Ra(e),f=e):f=null;(a=rb?zb(a,c):Ab(a,c))?(b=nb.getPooled(ub.beforeInput,b,c,d),b.data=a,Ra(b)):b=null;return null===f?b:null===b?f:[f,b]}},Cb=null,Db=null,Eb=null;function Hb(a){if(a=va(a)){\"function\"!==typeof Cb?t(\"280\"):void 0;var b=ua(a.stateNode);Cb(a.stateNode,a.type,b)}}function Ib(a){Db?Eb?Eb.push(a):Eb=[a]:Db=a}function Jb(){if(Db){var a=Db,b=Eb;Eb=Db=null;Hb(a);if(b)for(a=0;a<b.length;a++)Hb(b[a])}}\n\tfunction Kb(a,b){return a(b)}function Lb(a,b,c){return a(b,c)}function Mb(){}var Nb=!1;function Ob(a,b){if(Nb)return a(b);Nb=!0;try{return Kb(a,b)}finally{if(Nb=!1,null!==Db||null!==Eb)Mb(),Jb()}}var Pb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Pb[a.type]:\"textarea\"===b?!0:!1}\n\tfunction Rb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Sb(a){if(!Sa)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Tb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\n\tfunction Ub(a){var b=Tb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\n\tnull;delete a[b]}}}}function Vb(a){a._valueTracker||(a._valueTracker=Ub(a))}function Wb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Tb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\n\tvar Xb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Yb=/^(.*)[\\\\\\/]/,D=\"function\"===typeof Symbol&&Symbol.for,Zb=D?Symbol.for(\"react.element\"):60103,$b=D?Symbol.for(\"react.portal\"):60106,ac=D?Symbol.for(\"react.fragment\"):60107,bc=D?Symbol.for(\"react.strict_mode\"):60108,cc=D?Symbol.for(\"react.profiler\"):60114,dc=D?Symbol.for(\"react.provider\"):60109,ec=D?Symbol.for(\"react.context\"):60110,fc=D?Symbol.for(\"react.concurrent_mode\"):60111,gc=D?Symbol.for(\"react.forward_ref\"):60112,hc=D?Symbol.for(\"react.suspense\"):\n\t60113,ic=D?Symbol.for(\"react.memo\"):60115,jc=D?Symbol.for(\"react.lazy\"):60116,kc=\"function\"===typeof Symbol&&Symbol.iterator;function lc(a){if(null===a||\"object\"!==typeof a)return null;a=kc&&a[kc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\n\tfunction mc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case fc:return\"ConcurrentMode\";case ac:return\"Fragment\";case $b:return\"Portal\";case cc:return\"Profiler\";case bc:return\"StrictMode\";case hc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ec:return\"Context.Consumer\";case dc:return\"Context.Provider\";case gc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\t\")\":\"ForwardRef\");case ic:return mc(a.type);case jc:if(a=1===a._status?a._result:null)return mc(a)}return null}function nc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=mc(a.type);c=null;d&&(c=mc(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Yb,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\n\tvar oc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\n\tfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(oc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\n\tfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function E(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var F={};\n\t\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){F[a]=new E(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];F[b]=new E(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){F[a]=new E(a,2,!1,a.toLowerCase(),null)});\n\t[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){F[a]=new E(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){F[a]=new E(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){F[a]=new E(a,3,!0,a,null)});\n\t[\"capture\",\"download\"].forEach(function(a){F[a]=new E(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){F[a]=new E(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){F[a]=new E(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function wc(a){return a[1].toUpperCase()}\n\t\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\n\twc);F[b]=new E(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});F.tabIndex=new E(\"tabIndex\",1,!1,\"tabindex\",null);\n\tfunction xc(a,b,c,d){var e=F.hasOwnProperty(b)?F[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\n\tfunction yc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function zc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\n\tfunction Ac(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=yc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Bc(a,b){b=b.checked;null!=b&&xc(a,\"checked\",b,!1)}\n\tfunction Cc(a,b){Bc(a,b);var c=yc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Dc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Dc(a,b.type,yc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\n\tfunction Ec(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\n\tfunction Dc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Fc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Gc(a,b,c){a=z.getPooled(Fc.change,a,b,c);a.type=\"change\";Ib(c);Ra(a);return a}var Jc=null,Kc=null;function Lc(a){Ea(a)}\n\tfunction Mc(a){var b=Ka(a);if(Wb(b))return a}function Nc(a,b){if(\"change\"===a)return b}var Oc=!1;Sa&&(Oc=Sb(\"input\")&&(!document.documentMode||9<document.documentMode));function Pc(){Jc&&(Jc.detachEvent(\"onpropertychange\",Qc),Kc=Jc=null)}function Qc(a){\"value\"===a.propertyName&&Mc(Kc)&&(a=Gc(Kc,a,Rb(a)),Ob(Lc,a))}function Rc(a,b,c){\"focus\"===a?(Pc(),Jc=b,Kc=c,Jc.attachEvent(\"onpropertychange\",Qc)):\"blur\"===a&&Pc()}function Sc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Mc(Kc)}\n\tfunction Tc(a,b){if(\"click\"===a)return Mc(b)}function Uc(a,b){if(\"input\"===a||\"change\"===a)return Mc(b)}\n\tvar Vc={eventTypes:Fc,_isInputEventSupported:Oc,extractEvents:function(a,b,c,d){var e=b?Ka(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Nc:Qb(e)?Oc?f=Uc:(f=Sc,g=Rc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Tc);if(f&&(f=f(a,b)))return Gc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Dc(e,\"number\",e.value)}},Wc=z.extend({view:null,detail:null}),Xc={Alt:\"altKey\",\n\tControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Yc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Xc[a])?!!b[a]:!1}function Zc(){return Yc}\n\tvar $c=0,ad=0,bd=!1,cd=!1,dd=Wc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Zc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=$c;$c=a.screenX;return bd?\"mousemove\"===a.type?a.screenX-b:0:(bd=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\n\tvar b=ad;ad=a.screenY;return cd?\"mousemove\"===a.type?a.screenY-b:0:(cd=!0,0)}}),ed=dd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),fd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\n\tdependencies:[\"pointerout\",\"pointerover\"]}},gd={eventTypes:fd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ia(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=dd,h=fd.mouseLeave,k=fd.mouseEnter,l=\"mouse\";\n\telse if(\"pointerout\"===a||\"pointerover\"===a)g=ed,h=fd.pointerLeave,k=fd.pointerEnter,l=\"pointer\";var m=null==f?e:Ka(f);e=null==b?e:Ka(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Ma(g))l++;g=0;for(k=e;k;k=Ma(k))g++;for(;0<l-g;)b=Ma(b),l--;for(;0<g-l;)e=Ma(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Ma(b);e=Ma(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\n\tf.alternate;if(null!==l&&l===e)break;b.push(f);f=Ma(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Ma(d)}for(d=0;d<b.length;d++)Pa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Pa(f[d],\"captured\",c);return[a,c]}},hd=Object.prototype.hasOwnProperty;function id(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\n\tfunction jd(a,b){if(id(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!hd.call(b,c[d])||!id(a[c[d]],b[c[d]]))return!1;return!0}function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?t(\"188\"):void 0}\n\tfunction md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\n\tvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}3!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\n\tvar od=z.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=z.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=Wc.extend({relatedTarget:null});function rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\n\tvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n\t116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=Wc.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Zc,charCode:function(a){return\"keypress\"===\n\ta.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=dd.extend({dataTransfer:null}),wd=Wc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Zc}),xd=z.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=dd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\n\ta?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[Ya,\"animationEnd\"],[Za,\"animationIteration\"],[$a,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n\t[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n\t[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ab,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n\t[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n\t[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\n\tvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=dd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\n\tvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case Ya:case Za:case $a:a=od;break;case ab:a=xd;break;case \"scroll\":a=Wc;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=ed;break;default:a=z}b=a.getPooled(e,b,c,d);Ra(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\n\tFd=[];function Gd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ia(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Rb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ea(g)}}var Hd=!0;\n\tfunction H(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!1)}function Kd(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!0)}function Id(a,b){Lb(Jd,a,b)}\n\tfunction Jd(a,b){if(Hd){var c=Rb(b);c=Ia(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Ob(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}var Ld={},Md=0,Nd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\n\tfunction Od(a){Object.prototype.hasOwnProperty.call(a,Nd)||(a[Nd]=Md++,Ld[a[Nd]]={});return Ld[a[Nd]]}function Pd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\n\tfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\n\tfunction Td(){for(var a=window,b=Pd();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Pd(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\n\tvar Vd=Sa&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\n\tfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Pd(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&jd(Zd,c)?null:(Zd=c,a=z.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ra(a),a)}\n\tvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Od(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ka(b):window;switch(a){case \"focus\":if(Qb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\n\tcase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=La;va=Ja;wa=Ka;Ca.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:gd,ChangeEventPlugin:Vc,SelectEventPlugin:be,BeforeInputEventPlugin:Bb});function de(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\n\tfunction ee(a,b){a=n({children:void 0},b);if(b=de(b.children))a.children=b;return a}function fe(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+yc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\n\tfunction ge(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function he(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:yc(c)}}\n\tfunction ie(a,b){var c=yc(b.value),d=yc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function je(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var ke={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\n\tfunction le(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function me(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?le(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\n\tvar ne=void 0,oe=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==ke.svg||\"innerHTML\"in a)a.innerHTML=b;else{ne=ne||document.createElement(\"div\");ne.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ne.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\n\tfunction pe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\n\tvar qe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\n\tfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},re=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qe).forEach(function(a){re.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qe[b]=qe[a]})});function se(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qe.hasOwnProperty(a)&&qe[a]?(\"\"+b).trim():b+\"px\"}\n\tfunction te(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=se(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ue=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\n\tfunction ve(a,b){b&&(ue[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\n\tfunction we(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\n\tfunction xe(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Od(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Kd(\"scroll\",a);break;case \"focus\":case \"blur\":Kd(\"focus\",a);Kd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Sb(e)&&Kd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===bb.indexOf(e)&&H(e,a)}c[e]=!0}}}function ye(){}var ze=null,Ae=null;\n\tfunction Be(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ce(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var De=\"function\"===typeof setTimeout?setTimeout:void 0,Ee=\"function\"===typeof clearTimeout?clearTimeout:void 0;\n\tfunction Fe(a,b,c,d,e){a[Ha]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Bc(a,e);we(c,d);d=we(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?te(a,h):\"dangerouslySetInnerHTML\"===g?oe(a,h):\"children\"===g?pe(a,h):xc(a,g,h,d)}switch(c){case \"input\":Cc(a,e);break;case \"textarea\":ie(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?fe(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?fe(a,!!e.multiple,e.defaultValue,\n\t!0):fe(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function Ge(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function He(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Ie=[],Je=-1;function I(a){0>Je||(a.current=Ie[Je],Ie[Je]=null,Je--)}function J(a,b){Je++;Ie[Je]=a.current;a.current=b}var Ke={},K={current:Ke},L={current:!1},Le=Ke;\n\tfunction Me(a,b){var c=a.type.contextTypes;if(!c)return Ke;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function M(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ne(a){I(L,a);I(K,a)}function Oe(a){I(L,a);I(K,a)}\n\tfunction Pe(a,b,c){K.current!==Ke?t(\"168\"):void 0;J(K,b,a);J(L,c,a)}function Qe(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",mc(b)||\"Unknown\",e);return n({},c,d)}function Re(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Ke;Le=K.current;J(K,b,a);J(L,L.current,a);return!0}\n\tfunction Se(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Qe(a,b,Le),d.__reactInternalMemoizedMergedChildContext=b,I(L,a),I(K,a),J(K,b,a)):I(L,a);J(L,c,a)}var Te=null,Ue=null;function Ve(a){return function(b){try{return a(b)}catch(c){}}}\n\tfunction We(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Te=Ve(function(a){return b.onCommitFiberRoot(c,a)});Ue=Ve(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\n\tfunction Xe(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function N(a,b,c,d){return new Xe(a,b,c,d)}\n\tfunction Ye(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Ze(a){if(\"function\"===typeof a)return Ye(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gc)return 11;if(a===ic)return 14}return 2}\n\tfunction $e(a,b){var c=a.alternate;null===c?(c=N(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.firstContextDependency=a.firstContextDependency;c.sibling=a.sibling;\n\tc.index=a.index;c.ref=a.ref;return c}\n\tfunction af(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ye(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ac:return bf(c.children,e,f,b);case fc:return cf(c,e|3,f,b);case bc:return cf(c,e|2,f,b);case cc:return a=N(12,c,b,e|4),a.elementType=cc,a.type=cc,a.expirationTime=f,a;case hc:return a=N(13,c,b,e),a.elementType=hc,a.type=hc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case dc:g=10;break a;case ec:g=9;break a;case gc:g=11;break a;case ic:g=\n\t14;break a;case jc:g=16;d=null;break a}t(\"130\",null==a?a:typeof a,\"\")}b=N(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function bf(a,b,c,d){a=N(7,a,d,b);a.expirationTime=c;return a}function cf(a,b,c,d){a=N(8,a,d,b);b=0===(b&1)?bc:fc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function df(a,b,c){a=N(6,a,null,b);a.expirationTime=c;return a}\n\tfunction ef(a,b,c){b=N(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function ff(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);gf(b,a)}\n\tfunction hf(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);gf(b,a)}function jf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}\n\tfunction gf(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var kf=!1;function lf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\n\tfunction mf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function of(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\n\tfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=lf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=lf(a.memoizedState),e=c.updateQueue=lf(c.memoizedState)):d=a.updateQueue=mf(e):null===e&&(e=c.updateQueue=mf(d));null===e||d===e?of(d,b):null===d.lastUpdate||null===e.lastUpdate?(of(d,b),of(e,b)):(of(d,b),e.lastUpdate=b)}\n\tfunction qf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=lf(a.memoizedState):rf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function rf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=mf(b));return b}\n\tfunction sf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-2049|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:kf=!0}return d}\n\tfunction tf(a,b,c,d,e){kf=!1;b=rf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var r=k.expirationTime;r<e?(null===m&&(m=k,null===g&&(f=l)),h<r&&(h=r)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=\n\t32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\n\tfunction uf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);vf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;vf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function vf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\n\tfunction wf(a,b){return{value:a,source:b,stack:nc(b)}}var xf={current:null},yf=null,zf=null,Af=null;function Bf(a,b){var c=a.type._context;J(xf,c._currentValue,a);c._currentValue=b}function Cf(a){var b=xf.current;I(xf,a);a.type._context._currentValue=b}function Df(a){yf=a;Af=zf=null;a.firstContextDependency=null}\n\tfunction Ef(a,b){if(Af!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Af=a,b=1073741823;b={context:a,observedBits:b,next:null};null===zf?(null===yf?t(\"293\"):void 0,yf.firstContextDependency=zf=b):zf=zf.next=b}return a._currentValue}var Ff={},O={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?t(\"174\"):void 0;return a}\n\tfunction Jf(a,b){J(Hf,b,a);J(Gf,a,a);J(O,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:me(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=me(b,c)}I(O,a);J(O,b,a)}function Kf(a){I(O,a);I(Gf,a);I(Hf,a)}function Lf(a){If(Hf.current);var b=If(O.current);var c=me(b,a.type);b!==c&&(J(Gf,a,a),J(O,c,a))}function Mf(a){Gf.current===a&&(I(O,a),I(Gf,a))}\n\tfunction P(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}function Nf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:throw a._status=0,b=a._ctor,b=b(),b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)}),a._result=b,b;}}var Of=Xb.ReactCurrentOwner,Pf=(new aa.Component).refs;\n\tfunction Qf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\n\tvar Vf={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Rf();c=Sf(c,a);var d=nf(c);d.tag=\n\t2;void 0!==b&&null!==b&&(d.callback=b);Tf();pf(a,d);Uf(a,c)}};function Wf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!jd(c,d)||!jd(e,f):!0}\n\tfunction Xf(a,b,c){var d=!1,e=Ke;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Of.currentDispatcher.readContext(f):(e=M(b)?Le:K.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Me(a,e):Ke);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Vf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\n\tfunction Zf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Vf.enqueueReplaceState(b,b.state,null)}\n\tfunction $f(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Pf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Of.currentDispatcher.readContext(f):(f=M(b)?Le:K.current,e.context=Me(a,f));f=a.updateQueue;null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Qf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\n\t\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Vf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var ag=Array.isArray;\n\tfunction bg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?t(\"289\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Pf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"290\",a)}return a}\n\tfunction cg(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\n\tfunction dg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=$e(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n\t2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=df(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=bg(a,b,c),d.return=a,d;d=af(c.type,c.key,c.props,null,a.mode,d);d.ref=bg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\n\tc.implementation)return b=ef(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,g){if(null===b||7!==b.tag)return b=bf(c,a.mode,d,g),b.return=a,b;b=e(b,c,d);b.return=a;return b}function r(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=df(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Zb:return c=af(b.type,b.key,b.props,null,a.mode,c),c.ref=bg(a,null,b),c.return=a,c;case $b:return b=ef(b,a.mode,c),b.return=a,b}if(ag(b)||\n\tlc(b))return b=bf(b,a.mode,c,null),b.return=a,b;cg(a,b)}return null}function w(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Zb:return c.key===e?c.type===ac?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $b:return c.key===e?l(a,b,c,d):null}if(ag(c)||lc(c))return null!==e?null:m(a,b,c,d,null);cg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\n\ta.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Zb:return a=a.get(null===d.key?c:d.key)||null,d.type===ac?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $b:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(ag(d)||lc(d))return a=a.get(c)||null,m(b,a,d,e,null);cg(b,d)}return null}function B(e,g,h,k){for(var l=null,q=null,m=g,u=g=0,p=null;null!==m&&u<h.length;u++){m.index>u?(p=m,m=null):p=m.sibling;var v=w(e,m,h[u],k);if(null===v){null===m&&(m=p);break}a&&\n\tm&&null===v.alternate&&b(e,m);g=f(v,g,u);null===q?l=v:q.sibling=v;q=v;m=p}if(u===h.length)return c(e,m),l;if(null===m){for(;u<h.length;u++)if(m=r(e,h[u],k))g=f(m,g,u),null===q?l=m:q.sibling=m,q=m;return l}for(m=d(e,m);u<h.length;u++)if(p=y(m,e,u,h[u],k))a&&null!==p.alternate&&m.delete(null===p.key?u:p.key),g=f(p,g,u),null===q?l=p:q.sibling=p,q=p;a&&m.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=lc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;\n\tfor(var m=l=null,q=g,u=g=0,p=null,v=h.next();null!==q&&!v.done;u++,v=h.next()){q.index>u?(p=q,q=null):p=q.sibling;var A=w(e,q,v.value,k);if(null===A){q||(q=p);break}a&&q&&null===A.alternate&&b(e,q);g=f(A,g,u);null===m?l=A:m.sibling=A;m=A;q=p}if(v.done)return c(e,q),l;if(null===q){for(;!v.done;u++,v=h.next())v=r(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(q=d(e,q);!v.done;u++,v=h.next())v=y(q,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&q.delete(null===v.key?u:\n\tv.key),g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ac&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Zb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===ac:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===ac?f.props.children:f.props,h);d.ref=bg(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\n\tk.sibling}f.type===ac?(d=bf(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=af(f.type,f.key,f.props,null,a.mode,h),h.ref=bg(a,d,f),h.return=a,a=h)}return g(a);case $b:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ef(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\t\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=df(f,a.mode,h),d.return=a,a=d),g(a);if(ag(f))return B(a,d,f,h);if(lc(f))return R(a,d,f,h);l&&cg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var eg=dg(!0),fg=dg(!1),gg=null,hg=null,ig=!1;\n\tfunction jg(a,b){var c=N(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function kg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}\n\tfunction lg(a){if(ig){var b=hg;if(b){var c=b;if(!kg(a,b)){b=Ge(c);if(!b||!kg(a,b)){a.effectTag|=2;ig=!1;gg=a;return}jg(gg,c)}gg=a;hg=He(b)}else a.effectTag|=2,ig=!1,gg=a}}function mg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;gg=a}function ng(a){if(a!==gg)return!1;if(!ig)return mg(a),ig=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ce(b,a.memoizedProps))for(b=hg;b;)jg(a,b),b=Ge(b);mg(a);hg=gg?Ge(a.stateNode):null;return!0}function og(){hg=gg=null;ig=!1}var pg=Xb.ReactCurrentOwner;\n\tfunction Q(a,b,c,d){b.child=null===a?fg(b,null,c,d):eg(b,a.child,c,d)}function qg(a,b,c,d,e){c=c.render;var f=b.ref;Df(b,e);d=c(d,f);b.effectTag|=1;Q(a,b,d,e);return b.child}\n\tfunction rg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ye(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,sg(a,b,g,d,e,f);a=af(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:jd,c(e,d)&&a.ref===b.ref))return tg(a,b,f);b.effectTag|=1;a=$e(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\n\tfunction sg(a,b,c,d,e,f){return null!==a&&e<f&&jd(a.memoizedProps,d)&&a.ref===b.ref?tg(a,b,f):ug(a,b,c,d,f)}function vg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function ug(a,b,c,d,e){var f=M(c)?Le:K.current;f=Me(b,f);Df(b,e);c=c(d,f);b.effectTag|=1;Q(a,b,c,e);return b.child}\n\tfunction wg(a,b,c,d,e){if(M(c)){var f=!0;Re(b)}else f=!1;Df(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Xf(b,c,d,e),$f(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l));var m=c.getDerivedStateFromProps,r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;r||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\t\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l);kf=!1;var w=b.memoizedState;k=g.state=w;var y=b.updateQueue;null!==y&&(tf(b,y,d,g,e),k=b.memoizedState);h!==d||w!==k||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),k=b.memoizedState),(h=kf||Wf(b,c,h,d,w,k,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\n\tg.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:P(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l)),m=c.getDerivedStateFromProps,\n\t(r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l),kf=!1,k=b.memoizedState,w=g.state=k,y=b.updateQueue,null!==y&&(tf(b,y,d,g,e),w=b.memoizedState),h!==d||k!==w||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),w=b.memoizedState),(m=kf||Wf(b,c,h,d,k,w,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n\t(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,w,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,w,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\n\td,b.memoizedState=w),g.props=d,g.state=w,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return xg(a,b,c,d,f,e)}\n\tfunction xg(a,b,c,d,e,f){vg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Se(b,c,!1),tg(a,b,f);d=b.stateNode;pg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=eg(b,a.child,null,f),b.child=eg(b,null,h,f)):Q(a,b,h,f);b.memoizedState=d.state;e&&Se(b,c,!0);return b.child}function yg(a){var b=a.stateNode;b.pendingContext?Pe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Pe(a,b.context,!1);Jf(a,b.containerInfo)}\n\tfunction zg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=bf(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=bf(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=fg(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=$e(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\n\tb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=$e(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=eg(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=bf(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=bf(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=eg(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\n\tfunction tg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=$e(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=$e(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\n\tfunction Ag(a,b,c){var d=b.expirationTime;if(null!==a&&a.memoizedProps===b.pendingProps&&!L.current&&d<c){switch(b.tag){case 3:yg(b);og();break;case 5:Lf(b);break;case 1:M(b.type)&&Re(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Bf(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return zg(a,b,c);b=tg(a,b,c);return null!==b?b.sibling:null}}return tg(a,b,c)}b.expirationTime=0;switch(b.tag){case 2:d=b.elementType;null!==\n\ta&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Me(b,K.current);Df(b,c);e=d(a,e);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;if(M(d)){var f=!0;Re(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Qf(b,d,g,a);e.updater=Vf;b.stateNode=e;e._reactInternalFiber=b;$f(b,d,a,c);b=xg(null,b,d,!0,f,c)}else b.tag=0,Q(null,b,e,c),b=b.child;\n\treturn b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=Nf(e);b.type=a;e=b.tag=Ze(a);f=P(a,f);g=void 0;switch(e){case 0:g=ug(null,b,a,f,c);break;case 1:g=wg(null,b,a,f,c);break;case 11:g=qg(null,b,a,f,c);break;case 14:g=rg(null,b,a,P(a.type,f),d,c);break;default:t(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),ug(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),wg(a,b,\n\td,e,c);case 3:yg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;tf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)og(),b=tg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)hg=He(b.stateNode.containerInfo),gg=b,e=ig=!0;e?(b.effectTag|=2,b.child=fg(b,null,d,c)):(Q(a,b,d,c),og());b=b.child}return b;case 5:return Lf(b),null===a&&lg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ce(d,e)?g=null:null!==\n\tf&&Ce(d,f)&&(b.effectTag|=16),vg(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=1,b=null):(Q(a,b,g,c),b=b.child),b;case 6:return null===a&&lg(b),null;case 13:return zg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=eg(b,null,d,c):Q(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),qg(a,b,d,e,c);case 7:return Q(a,b,b.pendingProps,c),b.child;case 8:return Q(a,b,b.pendingProps.children,c),b.child;case 12:return Q(a,b,b.pendingProps.children,\n\tc),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Bf(b,f);if(null!==g){var h=g.value;f=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!L.current){b=tg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(1===g.tag){var k=nf(c);k.tag=2;pf(g,k)}g.expirationTime<\n\tc&&(g.expirationTime=c);k=g.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(l.childExpirationTime<c)l.childExpirationTime=c,null!==k&&k.childExpirationTime<c&&(k.childExpirationTime=c);else if(null!==k&&k.childExpirationTime<c)k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=10===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==k;){if(k===b){k=null;break}g=k.sibling;\n\tif(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}Q(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Df(b,c),e=Ef(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,Q(a,b,d,c),b.child;case 14:return e=b.type,f=P(e,b.pendingProps),f=P(e.type,f),rg(a,b,e,f,d,c);case 15:return sg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,M(d)?(a=\n\t!0,Re(b)):a=!1,Df(b,c),Xf(b,d,e,c),$f(b,d,e,c),xg(null,b,d,!0,a,c);default:t(\"156\")}}function Bg(a){a.effectTag|=4}var Cg=void 0,Gg=void 0,Hg=void 0,Ig=void 0;Cg=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Gg=function(){};\n\tHg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(O.current);a=null;switch(c){case \"input\":f=zc(g,f);d=zc(g,d);a=[];break;case \"option\":f=ee(g,f);d=ee(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=ge(g,f);d=ge(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ye)}ve(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\n\tc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n\t(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&xe(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&Bg(b)}};Ig=function(a,b,c,d){c!==d&&Bg(b)};\n\tvar Jg=\"function\"===typeof WeakSet?WeakSet:Set;function Kg(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=nc(c));null!==c&&mc(c.type);b=b.value;null!==a&&1===a.tag&&mc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Lg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Mg(a,c)}else b.current=null}\n\tfunction Ng(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=se(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\n\tc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\n\tfunction Og(a){\"function\"===typeof Ue&&Ue(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(null!==d){var e=a;try{d()}catch(f){Mg(e,f)}}c=c.next}while(c!==b)}break;case 1:Lg(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){Mg(a,f)}break;case 5:Lg(a);break;case 4:Pg(a)}}\n\tfunction Qg(a){return 5===a.tag||3===a.tag||4===a.tag}\n\tfunction Rg(a){a:{for(var b=a.return;null!==b;){if(Qg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(pe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Qg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\n\tif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=ye)):b.appendChild(e.stateNode);\n\telse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\n\tfunction Pg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(Og(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n\t(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?(d=b.stateNode.containerInfo,e=!0):Og(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\n\tfunction Sg(a,b){switch(b.tag){case 0:case 11:case 14:case 15:break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Fe(c,f,e,a,d,b)}break;case 6:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=Rf()));null!==a&&Ng(a,d);c=b.updateQueue;\n\tif(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new Jg);c.forEach(function(a){var c=Tg.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:t(\"163\")}}var Ug=\"function\"===typeof WeakMap?WeakMap:Map;function Vg(a,b,c){c=nf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Wg(d);Kg(a,b)};return c}\n\tfunction Xg(a,b,c){c=nf(c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Yg?Yg=new Set([this]):Yg.add(this));var c=b.value,e=b.stack;Kg(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\n\tfunction Zg(a){switch(a.tag){case 1:M(a.type)&&Ne(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Oe(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 4:return Kf(a),null;case 10:return Cf(a),null;default:return null}}\n\tvar $g={readContext:Ef},ah=Xb.ReactCurrentOwner,bh=1073741822,ch=0,dh=!1,S=null,T=null,U=0,eh=-1,fh=!1,V=null,gh=!1,hh=null,ih=null,Yg=null;function jh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ne(b);break;case 3:Kf(b);Oe(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Cf(b)}a=a.return}T=null;U=0;eh=-1;fh=!1;S=null}function Tf(){null!==ih&&(ba.unstable_cancelCallback(hh),ih())}\n\tfunction kh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){S=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:M(b.type)&&Ne(b);break;case 3:Kf(b);Oe(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)ng(b),b.effectTag&=-3;Gg(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)Hg(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n\t128);else if(g){var k=If(O.current);if(ng(b)){g=b;e=g.stateNode;var l=g.type,m=g.memoizedProps,r=h;e[Ga]=g;e[Ha]=m;f=void 0;h=l;switch(h){case \"iframe\":case \"object\":H(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<bb.length;l++)H(bb[l],e);break;case \"source\":H(\"error\",e);break;case \"img\":case \"image\":case \"link\":H(\"error\",e);H(\"load\",e);break;case \"form\":H(\"reset\",e);H(\"submit\",e);break;case \"details\":H(\"toggle\",e);break;case \"input\":Ac(e,m);H(\"invalid\",e);xe(r,\"onChange\");break;case \"select\":e._wrapperState=\n\t{wasMultiple:!!m.multiple};H(\"invalid\",e);xe(r,\"onChange\");break;case \"textarea\":he(e,m),H(\"invalid\",e),xe(r,\"onChange\")}ve(h,m);l=null;for(f in m)m.hasOwnProperty(f)&&(k=m[f],\"children\"===f?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(f)&&null!=k&&xe(r,f));switch(h){case \"input\":Vb(e);Ec(e,m,!0);break;case \"textarea\":Vb(e);je(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n\t(e.onclick=ye)}f=l;g.updateQueue=f;g=null!==f?!0:!1;g&&Bg(b)}else{m=b;e=f;r=g;l=9===h.nodeType?h:h.ownerDocument;k===ke.html&&(k=le(e));k===ke.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof r.is?l=l.createElement(e,{is:r.is}):(l=l.createElement(e),\"select\"===e&&r.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ga]=m;e[Ha]=g;Cg(e,b,!1,!1);r=e;l=f;m=g;var w=h,y=we(l,m);switch(l){case \"iframe\":case \"object\":H(\"load\",\n\tr);h=m;break;case \"video\":case \"audio\":for(h=0;h<bb.length;h++)H(bb[h],r);h=m;break;case \"source\":H(\"error\",r);h=m;break;case \"img\":case \"image\":case \"link\":H(\"error\",r);H(\"load\",r);h=m;break;case \"form\":H(\"reset\",r);H(\"submit\",r);h=m;break;case \"details\":H(\"toggle\",r);h=m;break;case \"input\":Ac(r,m);h=zc(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;case \"option\":h=ee(r,m);break;case \"select\":r._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});H(\"invalid\",r);xe(w,\"onChange\");break;case \"textarea\":he(r,\n\tm);h=ge(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;default:h=m}ve(l,h);k=void 0;var B=l,R=r,v=h;for(k in v)if(v.hasOwnProperty(k)){var q=v[k];\"style\"===k?te(R,q):\"dangerouslySetInnerHTML\"===k?(q=q?q.__html:void 0,null!=q&&oe(R,q)):\"children\"===k?\"string\"===typeof q?(\"textarea\"!==B||\"\"!==q)&&pe(R,q):\"number\"===typeof q&&pe(R,\"\"+q):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=q&&xe(w,k):null!=q&&xc(R,k,q,y))}switch(l){case \"input\":Vb(r);\n\tEc(r,m,!1);break;case \"textarea\":Vb(r);je(r,m);break;case \"option\":null!=m.value&&r.setAttribute(\"value\",\"\"+yc(m.value));break;case \"select\":h=r;h.multiple=!!m.multiple;r=m.value;null!=r?fe(h,!!m.multiple,r,!1):null!=m.defaultValue&&fe(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(r.onclick=ye)}(g=Be(f,g))&&Bg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?Ig(e,b,e.memoizedProps,g):(\"string\"!==\n\ttypeof g&&(null===b.stateNode?t(\"166\"):void 0),e=If(Hf.current),If(O.current),ng(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Ga]=g,(g=f.nodeValue!==e)&&Bg(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Ga]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;S=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\n\tb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g!==f||0===(b.effectTag&1)&&g)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);Gg(b);break;case 10:Cf(b);break;case 9:break;case 14:break;case 17:M(b.type)&&Ne(b);break;default:t(\"156\")}S=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==S)return S;null!==c&&0===(c.effectTag&1024)&&(null===\n\tc.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Zg(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\n\tfunction lh(a){var b=Ag(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=kh(a));ah.current=null;return b}\n\tfunction mh(a,b){dh?t(\"243\"):void 0;Tf();dh=!0;ah.currentDispatcher=$g;var c=a.nextExpirationTimeToWorkOn;if(c!==U||a!==T||null===S)jh(),T=a,U=c,S=$e(T.current,null,U),a.pendingCommitExpirationTime=0;var d=!1;do{try{if(b)for(;null!==S&&!nh();)S=lh(S);else for(;null!==S;)S=lh(S)}catch(B){if(Af=zf=yf=null,null===S)d=!0,Wg(B);else{null===S?t(\"271\"):void 0;var e=S,f=e.return;if(null===f)d=!0,Wg(B);else{a:{var g=a,h=f,k=e,l=B;f=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==l&&\"object\"===\n\ttypeof l&&\"function\"===typeof l.then){var m=l;l=h;var r=-1,w=-1;do{if(13===l.tag){var y=l.alternate;if(null!==y&&(y=y.memoizedState,null!==y)){w=10*(1073741822-y.timedOutAt);break}y=l.pendingProps.maxDuration;if(\"number\"===typeof y)if(0>=y)r=0;else if(-1===r||y<r)r=y}l=l.return}while(null!==l);l=h;do{if(y=13===l.tag)y=void 0===l.memoizedProps.fallback?!1:null===l.memoizedState;if(y){h=l.updateQueue;null===h?l.updateQueue=new Set([m]):h.add(m);if(0===(l.mode&1)){l.effectTag|=64;k.effectTag&=-1957;\n\t1===k.tag&&(null===k.alternate?k.tag=17:(f=nf(1073741823),f.tag=2,pf(k,f)));k.expirationTime=1073741823;break a}k=g.pingCache;null===k?(k=g.pingCache=new Ug,h=new Set,k.set(m,h)):(h=k.get(m),void 0===h&&(h=new Set,k.set(m,h)));h.has(f)||(h.add(f),k=oh.bind(null,g,m,f),m.then(k,k));-1===r?g=1073741823:(-1===w&&(w=10*(1073741822-jf(g,f))-5E3),g=w+r);0<=g&&eh<g&&(eh=g);l.effectTag|=2048;l.expirationTime=f;break a}l=l.return}while(null!==l);l=Error((mc(k.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+\n\tnc(k))}fh=!0;l=wf(l,k);g=h;do{switch(g.tag){case 3:g.effectTag|=2048;g.expirationTime=f;f=Vg(g,l,f);qf(g,f);break a;case 1:if(m=l,r=g.type,w=g.stateNode,0===(g.effectTag&64)&&(\"function\"===typeof r.getDerivedStateFromError||null!==w&&\"function\"===typeof w.componentDidCatch&&(null===Yg||!Yg.has(w)))){g.effectTag|=2048;g.expirationTime=f;f=Xg(g,m,f);qf(g,f);break a}}g=g.return}while(null!==g)}S=kh(e);continue}}}break}while(1);dh=!1;Af=zf=yf=ah.currentDispatcher=null;if(d)T=null,a.finishedWork=null;\n\telse if(null!==S)a.finishedWork=null;else{d=a.current.alternate;null===d?t(\"281\"):void 0;T=null;if(fh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<c||0!==f&&f<c||0!==g&&g<c){hf(a,c);ph(a,d,c,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;c=a.nextExpirationTimeToWorkOn=c;b=a.expirationTime=1073741823;ph(a,d,c,b,-1);return}}b&&-1!==eh?(hf(a,c),b=10*(1073741822-jf(a,c)),b<eh&&(eh=b),b=10*(1073741822-Rf()),b=eh-b,ph(a,d,c,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=\n\tc,a.finishedWork=d)}}function Mg(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Yg||!Yg.has(d))){a=wf(b,a);a=Xg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}break;case 3:a=wf(b,a);a=Vg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}c=c.return}3===a.tag&&(c=wf(b,a),c=Vg(a,c,1073741823),pf(a,c),Uf(a,1073741823))}\n\tfunction Sf(a,b){0!==ch?a=ch:dh?a=gh?1073741823:U:b.mode&1?(a=qh?1073741822-10*(((1073741822-a+15)/10|0)+1):1073741822-25*(((1073741822-a+500)/25|0)+1),null!==T&&a===U&&--a):a=1073741823;qh&&(0===rh||a<rh)&&(rh=a);return a}function oh(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==T&&U===c)T=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;gf(c,a);c=a.expirationTime;0!==c&&sh(a,c)}}\n\tfunction Tg(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=Rf();b=Sf(b,a);a=th(a,b);null!==a&&(ff(a,b),b=a.expirationTime,0!==b&&sh(a,b))}\n\tfunction th(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\n\tfunction Uf(a,b){a=th(a,b);null!==a&&(!dh&&0!==U&&b>U&&jh(),ff(a,b),dh&&!gh&&T===a||sh(a,a.expirationTime),uh>vh&&(uh=0,t(\"185\")))}function wh(a,b,c,d,e){var f=ch;ch=1073741823;try{return a(b,c,d,e)}finally{ch=f}}var xh=null,W=null,yh=0,zh=void 0,X=!1,Ah=null,Y=0,rh=0,Bh=!1,Ch=null,Z=!1,Dh=!1,qh=!1,Eh=null,Fh=ba.unstable_now(),Gh=1073741822-(Fh/10|0),Hh=Gh,vh=50,uh=0,Ih=null;function Jh(){Gh=1073741822-((ba.unstable_now()-Fh)/10|0)}\n\tfunction Kh(a,b){if(0!==yh){if(b<yh)return;null!==zh&&ba.unstable_cancelCallback(zh)}yh=b;a=ba.unstable_now()-Fh;zh=ba.unstable_scheduleCallback(Lh,{timeout:10*(1073741822-b)-a})}function ph(a,b,c,d,e){a.expirationTime=d;0!==e||nh()?0<e&&(a.timeoutHandle=De(Mh.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Mh(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;Jh();Hh=Gh;Nh(a,c)}function Rf(){if(X)return Hh;Oh();if(0===Y||1===Y)Jh(),Hh=Gh;return Hh}\n\tfunction sh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===W?(xh=W=a,a.nextScheduledRoot=a):(W=W.nextScheduledRoot=a,W.nextScheduledRoot=xh)):b>a.expirationTime&&(a.expirationTime=b);X||(Z?Dh&&(Ah=a,Y=1073741823,Ph(a,1073741823,!1)):1073741823===b?Qh(1073741823,!1):Kh(a,b))}\n\tfunction Oh(){var a=0,b=null;if(null!==W)for(var c=W,d=xh;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===W?t(\"244\"):void 0;if(d===d.nextScheduledRoot){xh=W=d.nextScheduledRoot=null;break}else if(d===xh)xh=e=d.nextScheduledRoot,W.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===W){W=c;W.nextScheduledRoot=xh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===W)break;if(1073741823===\n\ta)break;c=d;d=d.nextScheduledRoot}}Ah=b;Y=a}var Rh=!1;function nh(){return Rh?!0:ba.unstable_shouldYield()?Rh=!0:!1}function Lh(){try{if(!nh()&&null!==xh){Jh();var a=xh;do{var b=a.expirationTime;0!==b&&Gh<=b&&(a.nextExpirationTimeToWorkOn=Gh);a=a.nextScheduledRoot}while(a!==xh)}Qh(0,!0)}finally{Rh=!1}}\n\tfunction Qh(a,b){Oh();if(b)for(Jh(),Hh=Gh;null!==Ah&&0!==Y&&a<=Y&&!(Rh&&Gh>Y);)Ph(Ah,Y,Gh>Y),Oh(),Jh(),Hh=Gh;else for(;null!==Ah&&0!==Y&&a<=Y;)Ph(Ah,Y,!1),Oh();b&&(yh=0,zh=null);0!==Y&&Kh(Ah,Y);uh=0;Ih=null;if(null!==Eh)for(a=Eh,Eh=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Bh||(Bh=!0,Ch=d)}}if(Bh)throw a=Ch,Ch=null,Bh=!1,a;}function Nh(a,b){X?t(\"253\"):void 0;Ah=a;Y=b;Ph(a,b,!1);Qh(1073741823,!1)}\n\tfunction Ph(a,b,c){X?t(\"245\"):void 0;X=!0;if(c){var d=a.finishedWork;null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&(nh()?a.finishedWork=d:Sh(a,d,b)))}else d=a.finishedWork,null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&Sh(a,d,b));X=!1}\n\tfunction Sh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===Eh?Eh=[d]:Eh.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===Ih?uh++:(Ih=a,uh=0);gh=dh=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=e>d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=\n\t0):(d<a.latestPingedTime&&(a.latestPingedTime=0),e=a.latestPendingTime,0!==e&&(e>d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?ff(a,d):d<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,ff(a,d)):d>e&&ff(a,d));gf(0,a);ah.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ze=Hd;e=Td();if(Ud(e)){if(\"selectionStart\"in\n\te)var f={start:e.selectionStart,end:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(db){f=null;break a}var l=0,m=-1,r=-1,w=0,y=0,B=e,R=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(r=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;R=B;B=v}for(;;){if(B===\n\te)break b;R===f&&++w===h&&(m=l);R===k&&++y===g&&(r=l);if(null!==(v=B.nextSibling))break;B=R;R=B.parentNode}B=v}f=-1===m||-1===r?null:{start:m,end:r}}else f=null}f=f||{start:0,end:0}}else f=null;Ae={focusedElem:e,selectionRange:f};Hd=!1;for(V=d;null!==V;){e=!1;f=void 0;try{for(;null!==V;){if(V.effectTag&256)a:{var q=V.alternate;h=V;switch(h.tag){case 0:case 11:case 15:break a;case 1:if(h.effectTag&256&&null!==q){var u=q.memoizedProps,A=q.memoizedState,Yf=h.stateNode,Vh=Yf.getSnapshotBeforeUpdate(h.elementType===\n\th.type?u:P(h.type,u),A);Yf.__reactInternalSnapshotBeforeUpdate=Vh}break a;case 3:case 5:case 6:case 4:case 17:break a;default:t(\"163\")}}V=V.nextEffect}}catch(db){e=!0,f=db}e&&(null===V?t(\"178\"):void 0,Mg(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){q=!1;u=void 0;try{for(;null!==V;){var x=V.effectTag;x&16&&pe(V.stateNode,\"\");if(x&128){var C=V.alternate;if(null!==C){var p=C.ref;null!==p&&(\"function\"===typeof p?p(null):p.current=null)}}switch(x&14){case 2:Rg(V);V.effectTag&=-3;break;case 6:Rg(V);\n\tV.effectTag&=-3;Sg(V.alternate,V);break;case 4:Sg(V.alternate,V);break;case 8:A=V;Pg(A);A.return=null;A.child=null;A.memoizedState=null;A.updateQueue=null;var G=A.alternate;null!==G&&(G.return=null,G.child=null,G.memoizedState=null,G.updateQueue=null)}V=V.nextEffect}}catch(db){q=!0,u=db}q&&(null===V?t(\"178\"):void 0,Mg(V,u),null!==V&&(V=V.nextEffect))}p=Ae;C=Td();x=p.focusedElem;q=p.selectionRange;if(C!==x&&x&&x.ownerDocument&&Sd(x.ownerDocument.documentElement,x)){null!==q&&Ud(x)&&(C=q.start,p=q.end,\n\tvoid 0===p&&(p=C),\"selectionStart\"in x?(x.selectionStart=C,x.selectionEnd=Math.min(p,x.value.length)):(p=(C=x.ownerDocument||document)&&C.defaultView||window,p.getSelection&&(p=p.getSelection(),u=x.textContent.length,G=Math.min(q.start,u),q=void 0===q.end?G:Math.min(q.end,u),!p.extend&&G>q&&(u=q,q=G,G=u),u=Rd(x,G),A=Rd(x,q),u&&A&&(1!==p.rangeCount||p.anchorNode!==u.node||p.anchorOffset!==u.offset||p.focusNode!==A.node||p.focusOffset!==A.offset)&&(C=C.createRange(),C.setStart(u.node,u.offset),p.removeAllRanges(),\n\tG>q?(p.addRange(C),p.extend(A.node,A.offset)):(C.setEnd(A.node,A.offset),p.addRange(C))))));C=[];for(p=x;p=p.parentNode;)1===p.nodeType&&C.push({element:p,left:p.scrollLeft,top:p.scrollTop});\"function\"===typeof x.focus&&x.focus();for(x=0;x<C.length;x++)p=C[x],p.element.scrollLeft=p.left,p.element.scrollTop=p.top}Ae=null;Hd=!!ze;ze=null;a.current=b;for(V=d;null!==V;){d=!1;x=void 0;try{for(C=c;null!==V;){var Fb=V.effectTag;if(Fb&36){var Gb=V.alternate;p=V;G=C;switch(p.tag){case 0:case 11:case 15:break;\n\tcase 1:var Hc=p.stateNode;if(p.effectTag&4)if(null===Gb)Hc.componentDidMount();else{var ii=p.elementType===p.type?Gb.memoizedProps:P(p.type,Gb.memoizedProps);Hc.componentDidUpdate(ii,Gb.memoizedState,Hc.__reactInternalSnapshotBeforeUpdate)}var Dg=p.updateQueue;null!==Dg&&uf(p,Dg,Hc,G);break;case 3:var Eg=p.updateQueue;if(null!==Eg){q=null;if(null!==p.child)switch(p.child.tag){case 5:q=p.child.stateNode;break;case 1:q=p.child.stateNode}uf(p,Eg,q,G)}break;case 5:var ji=p.stateNode;null===Gb&&p.effectTag&\n\t4&&Be(p.type,p.memoizedProps)&&ji.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:t(\"163\")}}if(Fb&128){var Ic=V.ref;if(null!==Ic){var Fg=V.stateNode;switch(V.tag){case 5:var ce=Fg;break;default:ce=Fg}\"function\"===typeof Ic?Ic(ce):Ic.current=ce}}V=V.nextEffect}}catch(db){d=!0,x=db}d&&(null===V?t(\"178\"):void 0,Mg(V,x),null!==V&&(V=V.nextEffect))}dh=gh=!1;\"function\"===typeof Te&&Te(b.stateNode);Fb=b.expirationTime;b=b.childExpirationTime;b=b>Fb?b:Fb;0===b&&(Yg=\n\tnull);a.expirationTime=b;a.finishedWork=null}function Wg(a){null===Ah?t(\"246\"):void 0;Ah.expirationTime=0;Bh||(Bh=!0,Ch=a)}function Th(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||X||Qh(1073741823,!1)}}function Uh(a,b){if(Z&&!Dh){Dh=!0;try{return a(b)}finally{Dh=!1}}return a(b)}function Wh(a,b,c){if(qh)return a(b,c);Z||X||0===rh||(Qh(rh,!1),rh=0);var d=qh,e=Z;Z=qh=!0;try{return a(b,c)}finally{qh=d,(Z=e)||X||Qh(1073741823,!1)}}\n\tfunction Xh(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===kd(c)&&1===c.tag?void 0:t(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(M(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);t(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(M(h)){c=Qe(c,h,g);break a}}c=g}else c=Ke;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\n\tTf();pf(f,e);Uf(f,d);return d}function Yh(a,b,c,d){var e=b.current,f=Rf();e=Sf(f,e);return Xh(a,b,c,e,d)}function Zh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function $h(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$b,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\n\tCb=function(a,b,c){switch(b){case \"input\":Cc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=La(d);e?void 0:t(\"90\");Wb(d);Cc(d,e)}}}break;case \"textarea\":ie(a,c);break;case \"select\":b=c.value,null!=b&&fe(a,!!c.multiple,b,!1)}};\n\tfunction ai(a){var b=1073741822-25*(((1073741822-Rf()+500)/25|0)+1);b>=bh&&(b=bh-1);this._expirationTime=bh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}ai.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new bi;Xh(a,b,null,c,d._onCommit);return d};\n\tai.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\n\tai.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Nh(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\n\tnull,this._defer=!1};ai.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function bi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}bi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\n\tbi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\n\tfunction ci(a,b,c){b=N(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\n\tci.prototype.render=function(a,b){var c=this._internalRoot,d=new bi;b=void 0===b?null:b;null!==b&&d.then(b);Yh(a,c,null,d._onCommit);return d};ci.prototype.unmount=function(a){var b=this._internalRoot,c=new bi;a=void 0===a?null:a;null!==a&&c.then(a);Yh(null,b,null,c._onCommit);return c};ci.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new bi;c=void 0===c?null:c;null!==c&&e.then(c);Yh(b,d,a,e._onCommit);return e};\n\tci.prototype.createBatch=function(){var a=new ai(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function di(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Kb=Th;Lb=Wh;Mb=function(){X||0===rh||(Qh(rh,!1),rh=0)};\n\tfunction ei(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new ci(a,!1,b)}\n\tfunction fi(a,b,c,d,e){di(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Zh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=ei(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Zh(f._internalRoot);h.call(a)}}Uh(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Zh(f._internalRoot)}\n\tfunction gi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;di(b)?void 0:t(\"200\");return $h(a,b,null,c)}\n\tvar ki={createPortal:gi,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=nd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return fi(null,a,b,!0,c)},render:function(a,b,c){return fi(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return fi(a,b,c,!1,d)},unmountComponentAtNode:function(a){di(a)?\n\tvoid 0:t(\"40\");return a._reactRootContainer?(Uh(function(){fi(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return gi.apply(void 0,arguments)},unstable_batchedUpdates:Th,unstable_interactiveUpdates:Wh,flushSync:function(a,b){X?t(\"187\"):void 0;var c=Z;Z=!0;try{return wh(a,b)}finally{Z=c,Qh(1073741823,!1)}},unstable_createRoot:hi,unstable_flushControlled:function(a){var b=Z;Z=!0;try{wh(a)}finally{(Z=b)||X||Qh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ja,\n\tKa,La,Ca.injectEventPluginsByName,qa,Ra,function(a){za(a,Qa)},Ib,Jb,Jd,Ea]}};function hi(a,b){di(a)?void 0:t(\"299\",\"unstable_createRoot\");return new ci(a,!0,null!=b&&!0===b.hydrate)}(function(a){var b=a.findFiberByHostInstance;return We(n({},a,{overrideProps:null,findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ia,bundleType:0,version:\"16.7.0\",rendererPackageName:\"react-dom\"});\n\tvar li={default:ki},mi=li&&ki||li;module.exports=mi.default||mi;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.7.0\n\t * react.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';var k=__webpack_require__(5),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,A=n?Symbol.for(\"react.memo\"):\n\t60115,B=n?Symbol.for(\"react.lazy\"):60116,C=\"function\"===typeof Symbol&&Symbol.iterator;function aa(a,b,e,c,d,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[e,c,d,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\n\tfunction D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},F={};\n\tfunction G(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}G.prototype.isReactComponent={};G.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};G.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function H(){}H.prototype=G.prototype;function I(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}var J=I.prototype=new H;\n\tJ.constructor=I;k(J,G.prototype);J.isPureReactComponent=!0;var K={current:null,currentDispatcher:null},L=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};\n\tfunction N(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:d,_owner:K.current}}\n\tfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,e,c){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}\n\tfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\n\tfunction T(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+U(d,h);g+=T(d,f,e,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n\t0;!(d=a.next()).done;)d=d.value,f=b+U(d,h++),g+=T(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function V(a,b,e){return null==a?0:T(a,\"\",b,e)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\n\tfunction da(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,function(a){return a}):null!=a&&(O(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+e)),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(P,\"$&/\")+\"/\");b=R(b,g,c,d);V(a,da,b);S(b)}\n\tvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=R(null,null,b,e);V(a,ca,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){O(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:G,PureComponent:I,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n\t_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:B,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:A,type:a,compare:void 0===b?null:b}},Fragment:r,StrictMode:t,Suspense:z,createElement:N,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;\n\tif(null!=b){void 0!==b.ref&&(h=b.ref,f=K.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=N.bind(null,a);b.type=a;return b},isValidElement:O,version:\"16.7.0\",\n\tunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:K,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/** @license React v0.12.0\n\t * scheduler.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var c=null,f=!1,h=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=c.expirationTime;n?q():n=!0;r(t,a)}}\n\tfunction u(){var a=c,b=c.next;if(c===b)c=null;else{var d=c.previous;c=d.next=b;b.previous=d}a.next=a.previous=null;d=a.callback;b=a.expirationTime;a=a.priorityLevel;var e=h,Q=l;h=a;l=b;try{var g=d()}finally{h=e,l=Q}if(\"function\"===typeof g)if(g={callback:g,priorityLevel:a,expirationTime:b,next:null,previous:null},null===c)c=g.next=g.previous=g;else{d=null;a=c;do{if(a.expirationTime>=b){d=a;break}a=a.next}while(a!==c);null===d?d=c:d===c&&(c=g,p());b=d.previous;b.next=d.previous=g;g.next=d;g.previous=\n\tb}}function v(){if(-1===k&&null!==c&&1===c.priorityLevel){m=!0;try{do u();while(null!==c&&1===c.priorityLevel)}finally{m=!1,null!==c?p():n=!1}}}function t(a){m=!0;var b=f;f=a;try{if(a)for(;null!==c;){var d=exports.unstable_now();if(c.expirationTime<=d){do u();while(null!==c&&c.expirationTime<=d)}else break}else if(null!==c){do u();while(null!==c&&!w())}}finally{m=!1,f=b,null!==c?p():n=!1,v()}}\n\tvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\n\tif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\n\tif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\t\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var d=exports.unstable_now(),e=!1;if(0>=P-d)if(-1!==b&&b<=d)e=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(e)}finally{O=!1}}};\n\tvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\n\texports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var d=h,e=k;h=a;k=exports.unstable_now();try{return b()}finally{h=d,k=e,v()}};\n\texports.unstable_scheduleCallback=function(a,b){var d=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=d+b.timeout;else switch(h){case 1:b=d+-1;break;case 2:b=d+250;break;case 5:b=d+1073741823;break;case 4:b=d+1E4;break;default:b=d+5E3}a={callback:a,priorityLevel:h,expirationTime:b,next:null,previous:null};if(null===c)c=a.next=a.previous=a,p();else{d=null;var e=c;do{if(e.expirationTime>b){d=e;break}e=e.next}while(e!==c);null===d?d=c:d===c&&(c=a,p());\n\tb=d.previous;b.next=d.previous=a;a.next=d;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)c=null;else{a===c&&(c=b);var d=a.previous;d.next=b;b.previous=d}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=h;return function(){var d=h,e=k;h=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{h=d,k=e,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return h};\n\texports.unstable_shouldYield=function(){return!f&&(null!==c&&c.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==c&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return c};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(36);\n\t} else {\n\t  module.exports = require('./cjs/scheduler.development.js');\n\t}\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(THREE) {\n\t\tvar MOUSE = THREE.MOUSE\n\t\tif (!MOUSE)\n\t\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\t\n\t\t/**\n\t\t * @author qiao / https://github.com/qiao\n\t\t * @author mrdoob / http://mrdoob.com\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author erich666 / http://erichaines.com\n\t\t */\n\t\t/*global THREE, console */\n\t\n\t\tfunction OrbitConstraint ( object ) {\n\t\n\t\t\tthis.object = object;\n\t\n\t\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t\t// and where it pans with respect to.\n\t\t\tthis.target = new THREE.Vector3();\n\t\n\t\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\t\tthis.minDistance = 0;\n\t\t\tthis.maxDistance = Infinity;\n\t\n\t\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\t\tthis.minZoom = 0;\n\t\t\tthis.maxZoom = Infinity;\n\t\n\t\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t\t// Range is 0 to Math.PI radians.\n\t\t\tthis.minPolarAngle = 0; // radians\n\t\t\tthis.maxPolarAngle = Math.PI; // radians\n\t\n\t\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\t\tthis.maxAzimuthAngle = Infinity; // radians\n\t\n\t\t\t// Set to true to enable damping (inertia)\n\t\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.enableDamping = false;\n\t\t\tthis.dampingFactor = 0.25;\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar EPS = 0.000001;\n\t\n\t\t\t// Current position in spherical coordinate system.\n\t\t\tvar theta;\n\t\t\tvar phi;\n\t\n\t\t\t// Pending changes\n\t\t\tvar phiDelta = 0;\n\t\t\tvar thetaDelta = 0;\n\t\t\tvar scale = 1;\n\t\t\tvar panOffset = new THREE.Vector3();\n\t\t\tvar zoomChanged = false;\n\t\n\t\t\t// API\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn phi;\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn theta;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateLeft = function ( angle ) {\n\t\n\t\t\t\tthetaDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateUp = function ( angle ) {\n\t\n\t\t\t\tphiDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\t// pass in distance in world space to move left\n\t\t\tthis.panLeft = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panLeft ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get X column of matrix\n\t\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\t\tv.multiplyScalar( - distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in distance in world space to move up\n\t\t\tthis.panUp = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panUp ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get Y column of matrix\n\t\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\t\tv.multiplyScalar( distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\t// perspective\n\t\t\t\t\tvar position = scope.object.position;\n\t\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\t\tvar targetDistance = offset.length();\n\t\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\t\n\t\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\t// orthographic\n\t\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyIn = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale /= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyOut = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale *= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.update = function() {\n\t\n\t\t\t\tvar offset = new THREE.Vector3();\n\t\n\t\t\t\t// so camera.up is the orbit axis\n\t\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\t\tvar quatInverse = quat.clone().inverse();\n\t\n\t\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\t\n\t\t\t\treturn function () {\n\t\n\t\t\t\t\tvar position = this.object.position;\n\t\n\t\t\t\t\toffset.copy( position ).sub( this.target );\n\t\n\t\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quat );\n\t\n\t\t\t\t\t// angle from z-axis around y-axis\n\t\n\t\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\t\n\t\t\t\t\t// angle from y-axis\n\t\n\t\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\t\n\t\t\t\t\ttheta += thetaDelta;\n\t\t\t\t\tphi += phiDelta;\n\t\n\t\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\t\n\t\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\t\n\t\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\t\n\t\t\t\t\tvar radius = offset.length() * scale;\n\t\n\t\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\t\n\t\t\t\t\t// move target to panned location\n\t\t\t\t\tthis.target.add( panOffset );\n\t\n\t\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\t\n\t\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quatInverse );\n\t\n\t\t\t\t\tposition.copy( this.target ).add( offset );\n\t\n\t\t\t\t\tthis.object.lookAt( this.target );\n\t\n\t\t\t\t\tif ( this.enableDamping === true ) {\n\t\n\t\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\t\tphiDelta = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tscale = 1;\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\t\n\t\t\t\t\t// update condition is:\n\t\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\t\n\t\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\t\n\t\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\t\tzoomChanged = false;\n\t\n\t\t\t\t\t\treturn true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t};\n\t\n\t\n\t\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t\t// supported.\n\t\t//\n\t\t//    Orbit - left mouse / touch: one finger move\n\t\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\t\n\t\tfunction OrbitControls ( object, domElement ) {\n\t\n\t\t\tvar constraint = new OrbitConstraint( object );\n\t\n\t\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\t\n\t\t\t// API\n\t\n\t\t\tObject.defineProperty( this, 'constraint', {\n\t\n\t\t\t\tget: function() {\n\t\n\t\t\t\t\treturn constraint;\n\t\n\t\t\t\t}\n\t\n\t\t\t} );\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn constraint.getPolarAngle();\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn constraint.getAzimuthalAngle();\n\t\n\t\t\t};\n\t\n\t\t\t// Set to false to disable this control\n\t\t\tthis.enabled = true;\n\t\n\t\t\t// center is old, deprecated; use \"target\" instead\n\t\t\tthis.center = this.target;\n\t\n\t\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t\t// backwards compatibility.\n\t\t\t// Set to false to disable zooming\n\t\t\tthis.enableZoom = true;\n\t\t\tthis.zoomSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable rotating\n\t\t\tthis.enableRotate = true;\n\t\t\tthis.rotateSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable panning\n\t\t\tthis.enablePan = true;\n\t\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\n\t\t\t// Set to true to automatically rotate around the target\n\t\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.autoRotate = false;\n\t\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\t\n\t\t\t// Set to false to disable use of the keys\n\t\t\tthis.enableKeys = true;\n\t\n\t\t\t// The four arrow keys\n\t\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\t\n\t\t\t// Mouse buttons\n\t\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar rotateStart = new THREE.Vector2();\n\t\t\tvar rotateEnd = new THREE.Vector2();\n\t\t\tvar rotateDelta = new THREE.Vector2();\n\t\n\t\t\tvar panStart = new THREE.Vector2();\n\t\t\tvar panEnd = new THREE.Vector2();\n\t\t\tvar panDelta = new THREE.Vector2();\n\t\n\t\t\tvar dollyStart = new THREE.Vector2();\n\t\t\tvar dollyEnd = new THREE.Vector2();\n\t\t\tvar dollyDelta = new THREE.Vector2();\n\t\n\t\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\t\n\t\t\tvar state = STATE.NONE;\n\t\n\t\t\t// for reset\n\t\n\t\t\tthis.target0 = this.target.clone();\n\t\t\tthis.position0 = this.object.position.clone();\n\t\t\tthis.zoom0 = this.object.zoom;\n\t\n\t\t\t// events\n\t\n\t\t\tvar changeEvent = { type: 'change' };\n\t\t\tvar startEvent = { type: 'start' };\n\t\t\tvar endEvent = { type: 'end' };\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tfunction pan( deltaX, deltaY ) {\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\t\n\t\t\t}\n\t\n\t\t\tthis.update = function () {\n\t\n\t\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\t\n\t\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( constraint.update() === true ) {\n\t\n\t\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.reset = function () {\n\t\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\tthis.target.copy( this.target0 );\n\t\t\t\tthis.object.position.copy( this.position0 );\n\t\t\t\tthis.object.zoom = this.zoom0;\n\t\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\tthis.update();\n\t\n\t\t\t};\n\t\n\t\t\tfunction getAutoRotationAngle() {\n\t\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\t\n\t\t\t}\n\t\n\t\t\tfunction getZoomScale() {\n\t\n\t\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\tstate = STATE.ROTATE;\n\t\n\t\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tstate = STATE.DOLLY;\n\t\n\t\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tstate = STATE.PAN;\n\t\n\t\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) {\n\t\n\t\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\t\tscope.dispatchEvent( startEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseMove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tif ( state === STATE.ROTATE ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t} else if ( state === STATE.DOLLY ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t} else if ( state === STATE.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.update();\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseUp( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseWheel( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar delta = 0;\n\t\n\t\t\t\tif ( event.wheelDelta !== undefined ) {\n\t\n\t\t\t\t\t// WebKit / Opera / Explorer 9\n\t\n\t\t\t\t\tdelta = event.wheelDelta;\n\t\n\t\t\t\t} else if ( event.detail !== undefined ) {\n\t\n\t\t\t\t\t// Firefox\n\t\n\t\t\t\t\tdelta = - event.detail;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( delta > 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t} else if ( delta < 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.update();\n\t\t\t\tscope.dispatchEvent( startEvent );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onKeyDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\t\n\t\t\t\tswitch ( event.keyCode ) {\n\t\n\t\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchstart( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\t\n\t\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\t\n\t\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchmove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1: // one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\t\n\t\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2: // two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\n\t\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\t\n\t\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchend( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction contextmenu( event ) {\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t}\n\t\n\t\t\tthis.dispose = function() {\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\n\t\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t}\n\t\n\t\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\t\n\t\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t// force an update at start\n\t\t\tthis.update();\n\t\n\t\t};\n\t\n\t\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\t\tOrbitControls.prototype.constructor = OrbitControls;\n\t\n\t\tObject.defineProperties( OrbitControls.prototype, {\n\t\n\t\t\tobject: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.object;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttarget: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.target;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\t\tthis.constraint.target.copy( value );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tenableDamping : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.enableDamping = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// backward compatibility\n\t\n\t\t\tnoZoom: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\treturn ! this.enableZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\tthis.enableZoom = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoRotate: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\treturn ! this.enableRotate;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\tthis.enableRotate = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoPan: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\treturn ! this.enablePan;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\tthis.enablePan = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoKeys: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\treturn ! this.enableKeys;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\tthis.enableKeys = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tstaticMoving : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\treturn ! this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\tthis.constraint.enableDamping = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdynamicDampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\treturn OrbitControls;\n\t}\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var self = self || {};// File:src/Three.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tvar THREE = { REVISION: '72' };\r\n\t\r\n\t//\r\n\t\r\n\tif ( true ) {\r\n\t\r\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (THREE), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\t\r\n\t\t\tmodule.exports = THREE;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t// polyfills\r\n\t\r\n\tif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\t\r\n\t\t// Missing in Android stock browser.\r\n\t\r\n\t\t( function () {\r\n\t\r\n\t\t\tvar lastTime = 0;\r\n\t\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\t\r\n\t\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\t\r\n\t\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\t\tvar id = self.setTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tcallback( currTime + timeToCall );\r\n\t\r\n\t\t\t\t\t}, timeToCall );\r\n\t\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\t\treturn id;\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\t\r\n\t\t\t\t\tself.clearTimeout( id );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}() );\r\n\t\r\n\t}\r\n\t\r\n\tif ( Math.sign === undefined ) {\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\t\r\n\t\tMath.sign = function ( x ) {\r\n\t\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\t\r\n\t\t};\r\n\t\r\n\t}\r\n\t\r\n\tif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\t\r\n\t\t// Missing in IE9-11.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\t\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\t\r\n\t\t\tget: function () {\r\n\t\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} );\r\n\t\r\n\t}\r\n\t\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\t\r\n\tTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\t\r\n\t// GL STATE CONSTANTS\r\n\t\r\n\tTHREE.CullFaceNone = 0;\r\n\tTHREE.CullFaceBack = 1;\r\n\tTHREE.CullFaceFront = 2;\r\n\tTHREE.CullFaceFrontBack = 3;\r\n\t\r\n\tTHREE.FrontFaceDirectionCW = 0;\r\n\tTHREE.FrontFaceDirectionCCW = 1;\r\n\t\r\n\t// SHADOWING TYPES\r\n\t\r\n\tTHREE.BasicShadowMap = 0;\r\n\tTHREE.PCFShadowMap = 1;\r\n\tTHREE.PCFSoftShadowMap = 2;\r\n\t\r\n\t// MATERIAL CONSTANTS\r\n\t\r\n\t// side\r\n\t\r\n\tTHREE.FrontSide = 0;\r\n\tTHREE.BackSide = 1;\r\n\tTHREE.DoubleSide = 2;\r\n\t\r\n\t// shading\r\n\t\r\n\tTHREE.FlatShading = 1;\r\n\tTHREE.SmoothShading = 2;\r\n\t\r\n\t// colors\r\n\t\r\n\tTHREE.NoColors = 0;\r\n\tTHREE.FaceColors = 1;\r\n\tTHREE.VertexColors = 2;\r\n\t\r\n\t// blending modes\r\n\t\r\n\tTHREE.NoBlending = 0;\r\n\tTHREE.NormalBlending = 1;\r\n\tTHREE.AdditiveBlending = 2;\r\n\tTHREE.SubtractiveBlending = 3;\r\n\tTHREE.MultiplyBlending = 4;\r\n\tTHREE.CustomBlending = 5;\r\n\t\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\t\r\n\tTHREE.AddEquation = 100;\r\n\tTHREE.SubtractEquation = 101;\r\n\tTHREE.ReverseSubtractEquation = 102;\r\n\tTHREE.MinEquation = 103;\r\n\tTHREE.MaxEquation = 104;\r\n\t\r\n\t// custom blending destination factors\r\n\t\r\n\tTHREE.ZeroFactor = 200;\r\n\tTHREE.OneFactor = 201;\r\n\tTHREE.SrcColorFactor = 202;\r\n\tTHREE.OneMinusSrcColorFactor = 203;\r\n\tTHREE.SrcAlphaFactor = 204;\r\n\tTHREE.OneMinusSrcAlphaFactor = 205;\r\n\tTHREE.DstAlphaFactor = 206;\r\n\tTHREE.OneMinusDstAlphaFactor = 207;\r\n\t\r\n\t// custom blending source factors\r\n\t\r\n\t//THREE.ZeroFactor = 200;\r\n\t//THREE.OneFactor = 201;\r\n\t//THREE.SrcAlphaFactor = 204;\r\n\t//THREE.OneMinusSrcAlphaFactor = 205;\r\n\t//THREE.DstAlphaFactor = 206;\r\n\t//THREE.OneMinusDstAlphaFactor = 207;\r\n\tTHREE.DstColorFactor = 208;\r\n\tTHREE.OneMinusDstColorFactor = 209;\r\n\tTHREE.SrcAlphaSaturateFactor = 210;\r\n\t\r\n\t// depth modes\r\n\t\r\n\tTHREE.NeverDepth = 0;\r\n\tTHREE.AlwaysDepth = 1;\r\n\tTHREE.LessDepth = 2;\r\n\tTHREE.LessEqualDepth = 3;\r\n\tTHREE.EqualDepth = 4;\r\n\tTHREE.GreaterEqualDepth = 5;\r\n\tTHREE.GreaterDepth = 6;\r\n\tTHREE.NotEqualDepth = 7;\r\n\t\r\n\t\r\n\t// TEXTURE CONSTANTS\r\n\t\r\n\tTHREE.MultiplyOperation = 0;\r\n\tTHREE.MixOperation = 1;\r\n\tTHREE.AddOperation = 2;\r\n\t\r\n\t// Mapping modes\r\n\t\r\n\tTHREE.UVMapping = 300;\r\n\t\r\n\tTHREE.CubeReflectionMapping = 301;\r\n\tTHREE.CubeRefractionMapping = 302;\r\n\t\r\n\tTHREE.EquirectangularReflectionMapping = 303;\r\n\tTHREE.EquirectangularRefractionMapping = 304;\r\n\t\r\n\tTHREE.SphericalReflectionMapping = 305;\r\n\t\r\n\t// Wrapping modes\r\n\t\r\n\tTHREE.RepeatWrapping = 1000;\r\n\tTHREE.ClampToEdgeWrapping = 1001;\r\n\tTHREE.MirroredRepeatWrapping = 1002;\r\n\t\r\n\t// Filters\r\n\t\r\n\tTHREE.NearestFilter = 1003;\r\n\tTHREE.NearestMipMapNearestFilter = 1004;\r\n\tTHREE.NearestMipMapLinearFilter = 1005;\r\n\tTHREE.LinearFilter = 1006;\r\n\tTHREE.LinearMipMapNearestFilter = 1007;\r\n\tTHREE.LinearMipMapLinearFilter = 1008;\r\n\t\r\n\t// Data types\r\n\t\r\n\tTHREE.UnsignedByteType = 1009;\r\n\tTHREE.ByteType = 1010;\r\n\tTHREE.ShortType = 1011;\r\n\tTHREE.UnsignedShortType = 1012;\r\n\tTHREE.IntType = 1013;\r\n\tTHREE.UnsignedIntType = 1014;\r\n\tTHREE.FloatType = 1015;\r\n\tTHREE.HalfFloatType = 1025;\r\n\t\r\n\t// Pixel types\r\n\t\r\n\t//THREE.UnsignedByteType = 1009;\r\n\tTHREE.UnsignedShort4444Type = 1016;\r\n\tTHREE.UnsignedShort5551Type = 1017;\r\n\tTHREE.UnsignedShort565Type = 1018;\r\n\t\r\n\t// Pixel formats\r\n\t\r\n\tTHREE.AlphaFormat = 1019;\r\n\tTHREE.RGBFormat = 1020;\r\n\tTHREE.RGBAFormat = 1021;\r\n\tTHREE.LuminanceFormat = 1022;\r\n\tTHREE.LuminanceAlphaFormat = 1023;\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\t\r\n\t// DDS / ST3C Compressed texture formats\r\n\t\r\n\tTHREE.RGB_S3TC_DXT1_Format = 2001;\r\n\tTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\n\tTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\n\tTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\t\r\n\t\r\n\t// PVRTC compressed texture formats\r\n\t\r\n\tTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\n\tTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\n\tTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\n\tTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\t\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.Projector = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\t\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.pickingRay = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasRenderer = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\t\r\n\t\tthis.domElement = document.createElement( 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Color.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Color = function ( color ) {\r\n\t\r\n\t\tif ( arguments.length === 3 ) {\r\n\t\r\n\t\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.set( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Color.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Color,\r\n\t\r\n\t\tr: 1, g: 1, b: 1,\r\n\t\r\n\t\tset: function ( value ) {\r\n\t\r\n\t\t\tif ( value instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\tthis.copy( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\t\r\n\t\t\t\tthis.setHex( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\t\r\n\t\t\t\tthis.setStyle( value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHex: function ( hex ) {\r\n\t\r\n\t\t\thex = Math.floor( hex );\r\n\t\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\t\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHSL: function () {\r\n\t\r\n\t\t\tfunction hue2rgb ( p, q, t ) {\r\n\t\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( h, s, l ) {\r\n\t\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\t\r\n\t\t\t\tif ( s === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\t\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetStyle: function ( style ) {\r\n\t\r\n\t\t\tvar parseAlpha = function ( strAlpha ) {\r\n\t\r\n\t\t\t\tvar alpha = parseFloat( strAlpha );\r\n\t\r\n\t\t\t\tif ( alpha < 1 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn alpha;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar m;\r\n\t\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// rgb / hsl\r\n\t\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\t\r\n\t\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\t\tcase 'rgb':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'rgba':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsl':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsla':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// hex color\r\n\t\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\t\r\n\t\t\t\tif ( size === 3 ) {\r\n\t\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\t\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\t\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\t\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\t\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( color ) {\r\n\t\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertGammaToLinear: function () {\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tthis.r = r * r;\r\n\t\t\tthis.g = g * g;\r\n\t\t\tthis.b = b * b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertLinearToGamma: function () {\r\n\t\r\n\t\t\tthis.r = Math.sqrt( this.r );\r\n\t\t\tthis.g = Math.sqrt( this.g );\r\n\t\t\tthis.b = Math.sqrt( this.b );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHex: function () {\r\n\t\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHexString: function () {\r\n\t\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHSL: function ( optionalTarget ) {\r\n\t\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\r\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\t\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\t\r\n\t\t\tif ( min === max ) {\r\n\t\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar delta = max - min;\r\n\t\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\t\r\n\t\t\t\tswitch ( max ) {\r\n\t\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thue /= 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\thsl.h = hue;\r\n\t\t\thsl.s = saturation;\r\n\t\t\thsl.l = lightness;\r\n\t\r\n\t\t\treturn hsl;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetStyle: function () {\r\n\t\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\t\r\n\t\t},\r\n\t\r\n\t\toffsetHSL: function ( h, s, l ) {\r\n\t\r\n\t\t\tvar hsl = this.getHSL();\r\n\t\r\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\t\r\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( color ) {\r\n\t\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddColors: function ( color1, color2 ) {\r\n\t\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( color ) {\r\n\t\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( color, alpha ) {\r\n\t\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( c ) {\r\n\t\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.r = array[ 0 ];\r\n\t\t\tthis.g = array[ 1 ];\r\n\t\t\tthis.b = array[ 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\t\r\n\t// File:src/math/Quaternion.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Quaternion = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Quaternion,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget w () {\r\n\t\r\n\t\t\treturn this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset w ( value ) {\r\n\t\r\n\t\t\tthis._w = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( quaternion ) {\r\n\t\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\t\r\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\t\r\n\t\t\tvar order = euler.order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\t\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\t\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\t\r\n\t\t\tif ( trace > 0 ) {\r\n\t\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\t\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\t\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\t\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\t\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromUnitVectors: function () {\r\n\t\r\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\t\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\r\n\t\t\tvar v1, r;\r\n\t\r\n\t\t\tvar EPS = 0.000001;\r\n\t\r\n\t\t\treturn function ( vFrom, vTo ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\t\r\n\t\t\t\tif ( r < EPS ) {\r\n\t\r\n\t\t\t\t\tr = 0;\r\n\t\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\t\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\t\r\n\t\t\t\tthis.normalize();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tinverse: function () {\r\n\t\r\n\t\t\tthis.conjugate().normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconjugate: function () {\r\n\t\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tvar l = this.length();\r\n\t\r\n\t\t\tif ( l === 0 ) {\r\n\t\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tl = 1 / l;\r\n\t\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( q, p ) {\r\n\t\r\n\t\t\tif ( p !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\t\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\t\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\t\treturn vector.applyQuaternion( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tslerp: function ( qb, t ) {\r\n\t\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\t\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\t\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\t\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\t\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.copy( qb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\t\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\t\r\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\t\r\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\t\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( quaternion ) {\r\n\t\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\t\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.Vector2 = function ( x, y ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector2,\r\n\t\r\n\t\tset: function ( x, y ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v ) {\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x *= s;\r\n\t\t\tthis.y *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\t\tmax = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function() {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author *kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector3 = function ( x, y, z ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector3,\r\n\t\r\n\t\tset: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyEuler: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyEuler( euler ) {\r\n\t\r\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyAxisAngle: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix3: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyProjection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 projection matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\t\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar qx = q.x;\r\n\t\t\tvar qy = q.y;\r\n\t\t\tvar qz = q.z;\r\n\t\t\tvar qw = q.w;\r\n\t\r\n\t\t\t// calculate quat * vector\r\n\t\r\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\r\n\t\t\t// calculate result * inverse quat\r\n\t\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function project( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tunproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function unproject( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttransformDirection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\t\r\n\t\t\tthis.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\t\tmax = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcross: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tthis.x = y * v.z - z * v.y;\r\n\t\t\tthis.y = z * v.x - x * v.z;\r\n\t\t\tthis.z = x * v.y - y * v.x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVectors: function ( a, b ) {\r\n\t\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectOnVector: function () {\r\n\t\r\n\t\t\tvar v1, dot;\r\n\t\r\n\t\t\treturn function projectOnVector( vector ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( vector ).normalize();\r\n\t\r\n\t\t\t\tdot = this.dot( v1 );\r\n\t\r\n\t\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tprojectOnPlane: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\t\r\n\t\t\t\treturn this.sub( v1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\treflect: function () {\r\n\t\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function reflect( normal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tangleTo: function ( v ) {\r\n\t\r\n\t\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\t\r\n\t\t\t// clamp, to handle numerical problems\r\n\t\r\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x;\r\n\t\t\tvar dy = this.y - v.y;\r\n\t\t\tvar dz = this.z - v.z;\r\n\t\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromQuaternion: function ( q, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\t\r\n\t\t\tthis.x = m.elements[ 12 ];\r\n\t\t\tthis.y = m.elements[ 13 ];\r\n\t\t\tthis.z = m.elements[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\t\r\n\t\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\t\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\t\r\n\t\t\tvar offset = index * 4;\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tthis.x = me[ offset ];\r\n\t\t\tthis.y = me[ offset + 1 ];\r\n\t\t\tthis.z = me[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector4.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector4 = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector4,\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( w ) {\r\n\t\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\t\tvar w = this.w;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\t\t\tthis.w *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t\tthis.w = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\r\n\t\t\t// q is assumed to be normalized\r\n\t\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\t\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\t\r\n\t\t\tif ( s < 0.0001 ) {\r\n\t\r\n\t\t\t\t this.x = 1;\r\n\t\t\t\t this.y = 0;\r\n\t\t\t\t this.z = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t this.x = q.x / s;\r\n\t\t\t\t this.y = q.y / s;\r\n\t\t\t\t this.z = q.z / s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\r\n\t\t\t\tte = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\t\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\t\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\t\r\n\t\t\t\tangle = Math.PI;\r\n\t\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\t\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\t\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\t\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\t\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\t\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\t\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\t\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\t\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w > v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < min.w ) {\r\n\t\r\n\t\t\t\tthis.w = min.w;\r\n\t\r\n\t\t\t} else if ( this.w > max.w ) {\r\n\t\r\n\t\t\t\tthis.w = max.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\t\tmax = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\t\tthis.w = attribute.array[ index + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Euler.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Euler = function ( x, y, z, order ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\t\r\n\tTHREE.Euler.DefaultOrder = 'XYZ';\r\n\t\r\n\tTHREE.Euler.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Euler,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget order () {\r\n\t\r\n\t\t\treturn this._order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset order ( value ) {\r\n\t\r\n\t\t\tthis._order = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, order ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( euler ) {\r\n\t\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\t\r\n\t\t\tvar clamp = THREE.Math.clamp;\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\torder = order || this._order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._order = order;\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromQuaternion: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function ( q, order, update ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\t\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treorder: function () {\r\n\t\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\r\n\t\t\tvar q = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( newOrder ) {\r\n\t\r\n\t\t\t\tq.setFromEuler( this );\r\n\t\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tequals: function ( euler ) {\r\n\t\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\t\r\n\t\t\tif ( optionalResult ) {\r\n\t\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Line3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Line3 = function ( start, end ) {\r\n\t\r\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Line3,\r\n\t\r\n\t\tset: function ( start, end ) {\r\n\t\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( line ) {\r\n\t\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdelta: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.end, this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSq: function () {\r\n\t\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistance: function () {\r\n\t\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclosestPointToPointParameter: function () {\r\n\t\r\n\t\t\tvar startP = new THREE.Vector3();\r\n\t\t\tvar startEnd = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point, clampToLine ) {\r\n\t\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\t\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\t\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\t\r\n\t\t\t\tif ( clampToLine ) {\r\n\t\r\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( line ) {\r\n\t\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box2.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Box2 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box2,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Box3 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box3,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromObject: function () {\r\n\t\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\t\tobject.traverse( function ( node ) {\r\n\t\r\n\t\t\t\t\tvar geometry = node.geometry;\r\n\t\r\n\t\t\t\t\tif ( geometry !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetBoundingSphere: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\t\r\n\t\t\t\tresult.center = this.center();\r\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar points = [\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3()\r\n\t\t\t];\r\n\t\r\n\t\t\treturn function ( matrix ) {\r\n\t\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\t\t\tthis.setFromPoints( points );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix3.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Matrix3 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix3,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\t\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\t\r\n\t\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\t\r\n\t\t\t// no inverse\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1.0 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar tmp, m = this.elements;\r\n\t\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMatrix: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\r\n\t\t\tthis.getInverse( m ).transpose();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\t\r\n\t\t\tvar m = this.elements;\r\n\t\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Matrix4 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix4,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tthis.elements.set( m.elements );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractPosition: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyPosition: function ( m ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0,       0,       0,       1\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractRotation: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( m ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\t\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\t\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\t\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\t\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\t\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\t\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\t\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\t\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\t\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\t\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\t\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\t\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\t\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\t\r\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\t\tte[ 4 ] = xy - wz;\r\n\t\t\tte[ 8 ] = xz + wy;\r\n\t\r\n\t\t\tte[ 1 ] = xy + wz;\r\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\t\tte[ 9 ] = yz - wx;\r\n\t\r\n\t\t\tte[ 2 ] = xz - wy;\r\n\t\t\tte[ 6 ] = yz + wx;\r\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar x, y, z;\r\n\t\r\n\t\t\treturn function ( eye, target, up ) {\r\n\t\r\n\t\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tz.subVectors( eye, target ).normalize();\r\n\t\r\n\t\t\t\tif ( z.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.z = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\tif ( x.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.x += 0.0001;\r\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ty.crossVectors( z, x );\r\n\t\r\n\t\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiply: function ( m, n ) {\r\n\t\r\n\t\t\tif ( n !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\t\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\t\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyToArray: function ( a, b, r ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tthis.multiplyMatrices( a, b );\r\n\t\r\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\t\treturn vector.applyProjection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateAxis: function ( v ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\r\n\t\t\tv.transformDirection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVector: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\t\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\t\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\t\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\t\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPosition: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetPosition: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( m, throwOnInvertible ) {\r\n\t\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\t\r\n\t\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( v ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateY: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateZ: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateByAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tscale: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\t\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\t\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationX: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0,  0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s,  c, 0,\r\n\t\t\t\t0, 0,  0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationY: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts,  c, 0, 0,\r\n\t\t\t\t0,  0, 1, 0,\r\n\t\t\t\t0,  0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\t return this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\t\tthis.scale( scale );\r\n\t\t\tthis.setPosition( position );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdecompose: function () {\r\n\t\r\n\t\t\tvar vector, matrix;\r\n\t\r\n\t\t\treturn function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\t\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) {\r\n\t\r\n\t\t\t\t\tsx = - sx;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\t\r\n\t\t\t\t// scale the rotation part\r\n\t\r\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\t\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\t\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\t\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\t\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\t\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\t\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\t\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\t\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\t\r\n\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\tvar ymin = - ymax;\r\n\t\t\tvar xmin = ymin * aspect;\r\n\t\t\tvar xmax = ymax * aspect;\r\n\t\r\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = right - left;\r\n\t\t\tvar h = top - bottom;\r\n\t\t\tvar p = far - near;\r\n\t\r\n\t\t\tvar x = ( right + left ) / w;\r\n\t\t\tvar y = ( top + bottom ) / h;\r\n\t\t\tvar z = ( far + near ) / p;\r\n\t\r\n\t\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( matrix ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\t\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Ray.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Ray = function ( origin, direction ) {\r\n\t\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Ray.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Ray,\r\n\t\r\n\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( ray ) {\r\n\t\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trecast: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( t ) {\r\n\t\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.subVectors( point, this.origin );\r\n\t\t\tvar directionDistance = result.dot( this.direction );\r\n\t\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\treturn result.copy( this.origin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSqToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\t\r\n\t\t\t\t// point behind the ray\r\n\t\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tdistanceSqToSegment: function () {\r\n\t\r\n\t\t\tvar segCenter = new THREE.Vector3();\r\n\t\t\tvar segDir = new THREE.Vector3();\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\t\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\t\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\t\r\n\t\t\t\tif ( det > 0 ) {\r\n\t\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\t\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\t\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 1\r\n\t\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 5\r\n\t\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 4\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 3\r\n\t\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 2\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\t\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn sqrDist;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectSphere: function () {\r\n\t\r\n\t\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( sphere, optionalTarget ) {\r\n\t\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\t\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\t\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\t\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\t\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\t\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\t\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\t\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, optionalTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\t\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\t\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\t\r\n\t\t\t\t\treturn 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\t\r\n\t\t\t// Return if the ray never intersects the plane\r\n\t\r\n\t\t\treturn t >= 0 ? t :  null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectPlane: function ( plane, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\t\r\n\t\t\tif ( t === null ) {\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.at( t, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function () {\r\n\t\r\n\t\t\tvar v = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectBox: function ( box, optionalTarget ) {\r\n\t\r\n\t\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\t\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\r\n\t\t\tvar origin = this.origin;\r\n\t\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\t\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\t\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\t\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\t\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\t\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\t\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\t\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\t\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\t\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\t\r\n\t\t\t//return point closest to the ray (positive side)\r\n\t\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\t\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectTriangle: function () {\r\n\t\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\t\tvar edge1 = new THREE.Vector3();\r\n\t\t\tvar edge2 = new THREE.Vector3();\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\t\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\t\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\t\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\t\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\t\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\t\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\t\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\t\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\t\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\t\r\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.sub( this.origin );\r\n\t\t\tthis.direction.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( ray ) {\r\n\t\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Sphere.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Sphere = function ( center, radius ) {\r\n\t\r\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sphere.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Sphere,\r\n\t\r\n\t\tset: function ( center, radius ) {\r\n\t\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\t\treturn function ( points, optionalCenter ) {\r\n\t\r\n\t\t\t\tvar center = this.center;\r\n\t\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( sphere ) {\r\n\t\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\treturn ( this.radius <= 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\t\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.copy( point );\r\n\t\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\t\r\n\t\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetBoundingBox: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar box = optionalTarget || new THREE.Box3();\r\n\t\r\n\t\t\tbox.set( this.center, this.center );\r\n\t\t\tbox.expandByScalar( this.radius );\r\n\t\r\n\t\t\treturn box;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.center.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( sphere ) {\r\n\t\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Frustum.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\tthis.planes = [\r\n\t\r\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\t\r\n\t\t];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Frustum.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Frustum,\r\n\t\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( frustum ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\t\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsObject: function () {\r\n\t\r\n\t\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\t\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function () {\r\n\t\r\n\t\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\t\tp2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\t\r\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\t\r\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\t\r\n\t\t\t\t\t// if both outside plane, no intersection\r\n\t\r\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Plane.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Plane = function ( normal, constant ) {\r\n\t\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Plane.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Plane,\r\n\t\r\n\t\tset: function ( normal, constant ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCoplanarPoints: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\t\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( plane ) {\r\n\t\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\t\r\n\t\t},\r\n\t\r\n\t\torthoPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionLine: function ( line ) {\r\n\t\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\t\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectLine: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( line, optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\t\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\t\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn result.copy( line.start );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\t\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\t\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcoplanarPoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\t\tvar m1 = new THREE.Matrix3();\r\n\t\r\n\t\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\t\r\n\t\t\t\t// compute new normal based on theory here:\r\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\t\r\n\t\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( plane ) {\r\n\t\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Math.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Math = {\r\n\t\r\n\t\tgenerateUUID: function () {\r\n\t\r\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\t\r\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\t\tvar uuid = new Array( 36 );\r\n\t\t\tvar rnd = 0, r;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '-';\r\n\t\r\n\t\t\t\t\t} else if ( i === 14 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '4';\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn uuid.join( '' );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\t// Clamp value to range <a, b>\r\n\t\r\n\t\tclamp: function ( x, a, b ) {\r\n\t\r\n\t\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Clamp value to range <a, inf)\r\n\t\r\n\t\tclampBottom: function ( x, a ) {\r\n\t\r\n\t\t\treturn x < a ? a : x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\t\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\t\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\t\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\t\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\t\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <0, 1> with 16 bits of randomness\r\n\t\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\t\r\n\t\trandom16: function () {\r\n\t\r\n\t\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random integer from <low, high> interval\r\n\t\r\n\t\trandInt: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <low, high> interval\r\n\t\r\n\t\trandFloat: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\t\r\n\t\trandFloatSpread: function ( range ) {\r\n\t\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdegToRad: function () {\r\n\t\r\n\t\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\t\r\n\t\t\treturn function ( degrees ) {\r\n\t\r\n\t\t\t\treturn degrees * degreeToRadiansFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tradToDeg: function () {\r\n\t\r\n\t\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\t\r\n\t\t\treturn function ( radians ) {\r\n\t\r\n\t\t\t\treturn radians * radianToDegreesFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\tvalue --;\r\n\t\t\tvalue |= value >> 1;\r\n\t\t\tvalue |= value >> 2;\r\n\t\t\tvalue |= value >> 4;\r\n\t\t\tvalue |= value >> 8;\r\n\t\t\tvalue |= value >> 16;\r\n\t\t\tvalue ++;\r\n\t\r\n\t\t\treturn value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Spline.js\r\n\t\r\n\t/**\r\n\t * Spline from Tween.js, slightly optimized (and trashed)\r\n\t * http://sole.github.com/tween.js/examples/05_spline.html\r\n\t *\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Spline = function ( points ) {\r\n\t\r\n\t\tthis.points = points;\r\n\t\r\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\t\r\n\t\tthis.initFromArray = function ( a ) {\r\n\t\r\n\t\t\tthis.points = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPoint = function ( k ) {\r\n\t\r\n\t\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\t\r\n\t\t\tpa = this.points[ c[ 0 ] ];\r\n\t\t\tpb = this.points[ c[ 1 ] ];\r\n\t\t\tpc = this.points[ c[ 2 ] ];\r\n\t\t\tpd = this.points[ c[ 3 ] ];\r\n\t\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\t\r\n\t\t\treturn v3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getControlPointsArray = function () {\r\n\t\r\n\t\t\tvar i, p, l = this.points.length,\r\n\t\t\t\tcoords = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tp = this.points[ i ];\r\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn coords;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// approximate length by summing linear segments\r\n\t\r\n\t\tthis.getLength = function ( nSubDivisions ) {\r\n\t\r\n\t\t\tvar i, index, nSamples, position,\r\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tchunkLengths = [],\r\n\t\t\t\ttotalLength = 0;\r\n\t\r\n\t\t\t// first point has 0 length\r\n\t\r\n\t\t\tchunkLengths[ 0 ] = 0;\r\n\t\r\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\t\r\n\t\t\tnSamples = this.points.length * nSubDivisions;\r\n\t\r\n\t\t\toldPosition.copy( this.points[ 0 ] );\r\n\t\r\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\t\r\n\t\t\t\tindex = i / nSamples;\r\n\t\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\ttmpVec.copy( position );\r\n\t\r\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\t\r\n\t\t\t\toldPosition.copy( position );\r\n\t\r\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\r\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\t\r\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\t\toldIntPoint = intPoint;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last point ends with total length\r\n\t\r\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\t\r\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\t\r\n\t\t\tvar i, j,\r\n\t\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\t\trealDistance,\r\n\t\t\t\tsampling, position,\r\n\t\t\t\tnewpoints = [],\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tsl = this.getLength();\r\n\t\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\t\r\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\t\r\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\t\r\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\t\r\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\t\r\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\t\r\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\t\r\n\t\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.points = newpoints;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Triangle.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Triangle = function ( a, b, c ) {\r\n\t\r\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Triangle.normal = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tresult.subVectors( c, b );\r\n\t\t\tv0.subVectors( a, b );\r\n\t\t\tresult.cross( v0 );\r\n\t\r\n\t\t\tvar resultLengthSq = result.lengthSq();\r\n\t\t\tif ( resultLengthSq > 0 ) {\r\n\t\r\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.set( 0, 0, 0 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tTHREE.Triangle.barycoordFromPoint = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tv0.subVectors( c, a );\r\n\t\t\tv1.subVectors( b, a );\r\n\t\t\tv2.subVectors( point, a );\r\n\t\r\n\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\tvar dot12 = v1.dot( v2 );\r\n\t\r\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t// collinear or singular triangle\r\n\t\t\tif ( denom === 0 ) {\r\n\t\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar invDenom = 1 / denom;\r\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\t\r\n\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\treturn result.set( 1 - u - v, v, u );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.containsPoint = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c ) {\r\n\t\r\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\t\r\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Triangle,\r\n\t\r\n\t\tset: function ( a, b, c ) {\r\n\t\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\t\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( triangle ) {\r\n\t\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tarea: function () {\r\n\t\r\n\t\t\tvar v0 = new THREE.Vector3();\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\t\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmidpoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormal: function ( optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplane: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Plane();\r\n\t\r\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( triangle ) {\r\n\t\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Clock.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Clock = function ( autoStart ) {\r\n\t\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\t\r\n\t\tthis.running = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Clock.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Clock,\r\n\t\r\n\t\tstart: function () {\r\n\t\r\n\t\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.running = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetElapsedTime: function () {\r\n\t\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetDelta: function () {\r\n\t\r\n\t\t\tvar diff = 0;\r\n\t\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\t\r\n\t\t\t\tthis.start();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.running ) {\r\n\t\r\n\t\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn diff;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/EventDispatcher.js\r\n\t\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\t\r\n\tTHREE.EventDispatcher = function () {};\r\n\t\r\n\tTHREE.EventDispatcher.prototype = {\r\n\t\r\n\t\tconstructor: THREE.EventDispatcher,\r\n\t\r\n\t\tapply: function ( object ) {\r\n\t\r\n\t\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\t\r\n\t\t\t\tlisteners[ type ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\t\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\thasEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\t\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispatchEvent: function ( event ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tevent.target = this;\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar length = listenerArray.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Raycaster.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://exocortex.com/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\t\r\n\t( function ( THREE ) {\r\n\t\r\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\t\r\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\tthis.near = near || 0;\r\n\t\t\tthis.far = far || Infinity;\r\n\t\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: { threshold: 1 },\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tObject.defineProperties( this.params, {\r\n\t\t\t\tPointCloud: {\r\n\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\t\treturn this.Points;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction descSort( a, b ) {\r\n\t\r\n\t\t\treturn a.distance - b.distance;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tobject.raycast( raycaster, intersects );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tvar children = object.children;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tTHREE.Raycaster.prototype = {\r\n\t\r\n\t\t\tconstructor: THREE.Raycaster,\r\n\t\r\n\t\t\tlinePrecision: 1,\r\n\t\r\n\t\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\t\tthis.ray.set( origin, direction );\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tsetFromCamera: function ( coords, camera ) {\r\n\t\r\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\r\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObject: function ( object, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tintersectObject( object, this, intersects, recursive );\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObjects: function ( objects, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}( THREE ) );\r\n\t\r\n\t// File:src/core/Object3D.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\t\r\n\tTHREE.Object3D = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\t\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\t\r\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar rotation = new THREE.Euler();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\t\r\n\t\tvar onRotationChange = function () {\r\n\t\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar onQuaternionChange = function () {\r\n\t\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t\tthis.rotationAutoUpdate = true;\r\n\t\r\n\t\tthis.matrix = new THREE.Matrix4();\r\n\t\tthis.matrixWorld = new THREE.Matrix4();\r\n\t\r\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\t\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\t\r\n\t\tthis.userData = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\t\r\n\tTHREE.Object3D.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Object3D,\r\n\t\r\n\t\tget eulerOrder () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\treturn this.rotation.order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset eulerOrder ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\tthis.rotation.order = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget useQuaternion () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset useQuaternion ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset renderDepth ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\t\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// assumes q is normalized\r\n\t\r\n\t\t\tthis.quaternion.copy( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateOnAxis: function () {\r\n\t\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar q1 = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( axis, angle ) {\r\n\t\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateOnAxis: function () {\r\n\t\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( axis, distance ) {\r\n\t\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\t\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( distance, axis ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlocalToWorld: function ( vector ) {\r\n\t\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tworldToLocal: function () {\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tadd: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object === this ) {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Object3D ) {\r\n\t\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\t\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\t\r\n\t\t\t\tthis.children.push( object );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tobject.parent = null;\r\n\t\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\t\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetChildByName: function ( name ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectById: function ( id ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByName: function ( name ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\t\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\t\r\n\t\t\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn object;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn undefined;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldPosition: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldQuaternion: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldRotation: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldScale: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldDirection: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\traycast: function () {},\r\n\t\r\n\t\ttraverse: function ( callback ) {\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseVisible: function ( callback ) {\r\n\t\r\n\t\t\tif ( this.visible === false ) return;\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\t\r\n\t\t\tvar parent = this.parent;\r\n\t\r\n\t\t\tif ( parent !== null ) {\r\n\t\r\n\t\t\t\tcallback( parent );\r\n\t\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrix: function () {\r\n\t\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\t\r\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\t\r\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\t\r\n\t\t\t\tif ( this.parent === null ) {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\t\t\tforce = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// update children\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar isRootObject = ( meta === undefined );\r\n\t\r\n\t\t\tvar data = {};\r\n\t\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tdata.metadata = {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// standard Object3D serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\t\r\n\t\t\tdata.matrix = this.matrix.toArray();\r\n\t\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.children = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {};\r\n\t\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.object = data;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache ( cache ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\t\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( recursive ) {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source, recursive ) {\r\n\t\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.up.copy( source.up );\r\n\t\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\t\r\n\t\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\t\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\t\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\t\r\n\tTHREE.Object3DIdCount = 0;\r\n\t\r\n\t// File:src/core/Face3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\r\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\t\r\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\t\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Face3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Face3,\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\t\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\t\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Face4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/BufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.array.length / this.itemSize;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyArray: function ( array ) {\r\n\t\r\n\t\t\tthis.array.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar color = colors[ i ];\r\n\t\r\n\t\t\t\tif ( color === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new THREE.Color();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyIndicesArray: function ( indices ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar index = indices[ i ];\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\t\tarray[ offset ++ ] = index.c;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Deprecated\r\n\t\r\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InterleavedBuffer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBuffer,\r\n\t\r\n\t\tget length () {\r\n\t\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count () {\r\n\t\r\n\t\t\treturn this.array.length / this.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedInterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.InterleavedBufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.data.array.length / this.data.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Geometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Geometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\t\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphColors = [];\r\n\t\tthis.morphNormals = [];\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\tthis.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Geometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Geometry,\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tvar vertices = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\t\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\t\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\t\r\n\t\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar addFace = function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\t\r\n\t\t\t\tscope.faces.push( face );\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( indices !== undefined ) {\r\n\t\r\n\t\t\t\tvar groups = geometry.groups;\r\n\t\r\n\t\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\t\r\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\t\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\t\r\n\t\t\tthis.applyMatrix( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\tcb.normalize();\r\n\t\r\n\t\t\t\tface.normal.copy( cb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\t\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\t\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( areaWeighted ) {\r\n\t\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\t\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ].normalize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeMorphNormals: function () {\r\n\t\r\n\t\t\tvar i, il, f, fl, face;\r\n\t\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\t\r\n\t\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t// create on first access\r\n\t\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\t\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\t\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\t\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\t\r\n\t\t\t\t// set vertices to morph target\r\n\t\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t// compute morph normals\r\n\t\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\t\r\n\t\t\t\t// store morph normals\r\n\t\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore original normals\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeLineDistances: function () {\r\n\t\r\n\t\t\tvar d = 0;\r\n\t\t\tvar vertices = this.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tif ( i > 0 ) {\r\n\t\r\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lineDistances[ i ] = d;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normalMatrix,\r\n\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\tvertices1 = this.vertices,\r\n\t\t\tvertices2 = geometry.vertices,\r\n\t\t\tfaces1 = this.faces,\r\n\t\t\tfaces2 = geometry.faces,\r\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\t\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\t\r\n\t\t\tif ( matrix !== undefined ) {\r\n\t\r\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// vertices\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\t\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\t\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// faces\r\n\t\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\t\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\t\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\t\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uvs\r\n\t\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\t\r\n\t\t\t\tif ( uv === undefined ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmergeMesh: function ( mesh ) {\r\n\t\r\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\t\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\t\r\n\t\tmergeVertices: function () {\r\n\t\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\t\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\t\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ i ];\r\n\t\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\t\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\t\r\n\t\t\t\tvar dupIndex = - 1;\r\n\t\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\t\r\n\t\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\t\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\t\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Use unique set of vertices\r\n\t\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Geometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertices = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\r\n\t\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\t\r\n\t\t\t\tvar faceType = 0;\r\n\t\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\t\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\t\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\t\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\t\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getColorIndex( color ) {\r\n\t\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\t\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\t\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\t\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\t\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\t\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = {};\r\n\t\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\t\tvar vertices = source.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = source.faces;\r\n\t\r\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\t\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\t\r\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\t\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\t\r\n\tTHREE.GeometryIdCount = 0;\r\n\t\r\n\t// File:src/core/DirectGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'DirectGeometry';\r\n\t\r\n\t\tthis.indices = [];\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.morphTargets = {};\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\t// this.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.DirectGeometry,\r\n\t\r\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\t\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex;\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t// materials\r\n\t\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\t\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\t\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.groups = groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\t\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsPosition = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\t\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsNormal = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skins\r\n\t\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\t\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar color = face.color;\r\n\t\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// morphs\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// skins\r\n\t\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\t\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\t\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeGroups( geometry );\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\t\r\n\t// File:src/core/BufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\t\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\r\n\t\tthis.morphAttributes = {};\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometry,\r\n\t\r\n\t\taddIndex: function ( index ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetIndex: function () {\r\n\t\r\n\t\t\treturn this.index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetIndex: function ( index ) {\r\n\t\r\n\t\t\tthis.index = index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\t\r\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( name === 'index' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetAttribute: function ( name ) {\r\n\t\r\n\t\t\treturn this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAttribute: function ( name ) {\r\n\t\r\n\t\t\tdelete this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget drawcalls() {\r\n\t\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget offsets() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\t\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearDrawCalls: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\t\r\n\t\t\tthis.groups.push( {\r\n\t\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearGroups: function () {\r\n\t\r\n\t\t\tthis.groups = [];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\t\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar position = this.attributes.position;\r\n\t\r\n\t\t\tif ( position !== undefined ) {\r\n\t\r\n\t\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normal = this.attributes.normal;\r\n\t\r\n\t\t\tif ( normal !== undefined ) {\r\n\t\r\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromObject: function ( object ) {\r\n\t\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\t\r\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateFromObject: function ( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\t\r\n\t\t\t\tif ( direct === undefined ) {\r\n\t\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t\tgeometry = direct;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.position;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.normal;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.color;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.lineDistance;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\t\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\t\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\t\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\t\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\t\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.indices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// groups\r\n\t\r\n\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\r\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\t\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning\r\n\t\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\t\tbb.makeEmpty();\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbb.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tbox.makeEmpty();\r\n\t\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbox.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tbox.center( center );\r\n\t\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\t\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\t// backwards compatibility\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( attributes.position ) {\r\n\t\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\r\n\t\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\tvar vA, vB, vC,\r\n\t\r\n\t\t\t\tpA = new THREE.Vector3(),\r\n\t\t\t\tpB = new THREE.Vector3(),\r\n\t\t\t\tpC = new THREE.Vector3(),\r\n\t\r\n\t\t\t\tcb = new THREE.Vector3(),\r\n\t\t\t\tab = new THREE.Vector3();\r\n\t\r\n\t\t\t\t// indexed elements\r\n\t\r\n\t\t\t\tif ( index ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tif ( groups.length === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ j ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\t\r\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeOffsets: function ( size ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, offset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\t\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\t\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\t\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalizeNormals: function () {\r\n\t\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\r\n\t\t\tvar x, y, z, n;\r\n\t\r\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\tx = normals[ i ];\r\n\t\t\t\ty = normals[ i + 1 ];\r\n\t\t\t\tz = normals[ i + 2 ];\r\n\t\r\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\t\r\n\t\t\t\tnormals[ i ] *= n;\r\n\t\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\t\tnormals[ i + 2 ] *= n;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard BufferGeometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = { attributes: {} };\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\t\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\t\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tvar index = source.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = source.attributes;\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = source.groups;\r\n\t\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\t\r\n\tTHREE.BufferGeometry.MaxIndex = 65535;\r\n\t\r\n\t// File:src/core/InstancedBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferGeometry = function () {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\t\r\n\t\tthis.groups.push( {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tinstances: instances\r\n\t\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tvar index = source.index;\r\n\t\r\n\t\tif ( index !== null ) {\r\n\t\r\n\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar attributes = source.attributes;\r\n\t\r\n\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar groups = source.groups;\r\n\t\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\t\r\n\t// File:src/cameras/Camera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.Camera = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Camera';\r\n\t\r\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\t\tthis.projectionMatrix = new THREE.Matrix4();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\t\r\n\tTHREE.Camera.prototype.getWorldDirection = function () {\r\n\t\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.lookAt = function () {\r\n\t\r\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\t\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\treturn function ( vector ) {\r\n\t\r\n\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/CubeCamera.js\r\n\t\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'CubeCamera';\r\n\t\r\n\t\tvar fov = 90, aspect = 1;\r\n\t\r\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\t\r\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\t\r\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\t\r\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\t\r\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\t\r\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\t\r\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\t\r\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\t\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\t\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = false;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\t\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\t\r\n\t// File:src/cameras/OrthographicCamera.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'OrthographicCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\t\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/PerspectiveCamera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\t\r\n\t\r\n\t/**\r\n\t * Uses Focal Length (in mm) to estimate and set FOV\r\n\t * 35mm (full-frame) camera is used if frame size is not specified;\r\n\t * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\t\r\n\t\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\t\r\n\t\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\t\r\n\t\tthis.fullWidth = fullWidth;\r\n\t\tthis.fullHeight = fullHeight;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\t\r\n\t\tif ( this.fullWidth ) {\r\n\t\r\n\t\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\t\tvar bottom = - top;\r\n\t\t\tvar left = aspect * bottom;\r\n\t\t\tvar right = aspect * top;\r\n\t\t\tvar width = Math.abs( right - left );\r\n\t\t\tvar height = Math.abs( top - bottom );\r\n\t\r\n\t\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\t\tthis.near,\r\n\t\t\t\tthis.far\r\n\t\t\t);\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.aspect = this.aspect;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/Light.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Light = function ( color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Light';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Light.prototype.constructor = THREE.Light;\r\n\t\r\n\tTHREE.Light.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/lights/AmbientLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AmbientLight = function ( color ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'AmbientLight';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\t\r\n\tTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/DirectionalLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLight = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'DirectionalLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\r\n\t\tthis.shadowCameraLeft = - 500;\r\n\t\tthis.shadowCameraRight = 500;\r\n\t\tthis.shadowCameraTop = 500;\r\n\t\tthis.shadowCameraBottom = - 500;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\t\r\n\tTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\r\n\t\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\t\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\t\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\t\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/HemisphereLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, skyColor );\r\n\t\r\n\t\tthis.type = 'HemisphereLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.groundColor = new THREE.Color( groundColor );\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\t\r\n\tTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\t\tthis.intensity = source.intensity;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.groundColor = this.groundColor.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/PointLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'PointLight';\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\t\r\n\tTHREE.PointLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/SpotLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'SpotLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\tthis.shadowCameraFov = 50;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\t\r\n\tTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.exponent = source.exponent;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.angle = this.angle;\r\n\t\tdata.object.exponent = this.exponent;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Cache.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Cache = {\r\n\t\r\n\t\tenabled: false,\r\n\t\r\n\t\tfiles: {},\r\n\t\r\n\t\tadd: function ( key, file ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\t\r\n\t\t\tthis.files[ key ] = file;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( key ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\t\r\n\t\t\treturn this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( key ) {\r\n\t\r\n\t\t\tdelete this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclear: function () {\r\n\t\r\n\t\t\tthis.files = {};\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Loader.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Loader = function () {\r\n\t\r\n\t\tthis.onLoadStart = function () {};\r\n\t\tthis.onLoadProgress = function () {};\r\n\t\tthis.onLoadComplete = function () {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Loader,\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\textractUrlBase: function ( url ) {\r\n\t\r\n\t\t\tvar parts = url.split( '/' );\r\n\t\r\n\t\t\tif ( parts.length === 1 ) return './';\r\n\t\r\n\t\t\tparts.pop();\r\n\t\r\n\t\t\treturn parts.join( '/' ) + '/';\r\n\t\r\n\t\t},\r\n\t\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\tvar array = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\t\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcreateMaterial: ( function () {\r\n\t\r\n\t\t\tvar imageLoader;\r\n\t\r\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\t\r\n\t\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\t\r\n\t\t\t\tfunction nearest_pow2( n ) {\r\n\t\r\n\t\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\t\r\n\t\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\t\r\n\t\t\t\t\tvar texture;\r\n\t\r\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\t\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\t\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture = new THREE.Texture();\r\n\t\r\n\t\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\t\r\n\t\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = canvas;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = image;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.sourceFile = sourceFile;\r\n\t\r\n\t\t\t\t\tif ( repeat ) {\r\n\t\r\n\t\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\t\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( offset ) {\r\n\t\r\n\t\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( wrap ) {\r\n\t\r\n\t\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( anisotropy ) {\r\n\t\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\twhere[ name ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction rgb2hex( rgb ) {\r\n\t\r\n\t\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// defaults\r\n\t\r\n\t\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\t\tvar mpars = {};\r\n\t\r\n\t\t\t\t// parameters from model file\r\n\t\r\n\t\t\t\tif ( m.shading ) {\r\n\t\r\n\t\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\t\r\n\t\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.transparent !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = m.transparent;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthTest !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthTest = m.depthTest;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthWrite !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.visible !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.visible = m.visible;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.flipSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.BackSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.doubleSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.wireframe = m.wireframe;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.vertexColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\t\r\n\t\t\t\t\t} else if ( m.vertexColors ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// colors\r\n\t\r\n\t\t\t\tif ( m.colorDiffuse ) {\r\n\t\r\n\t\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\t\r\n\t\t\t\t} else if ( m.DbgColor ) {\r\n\t\r\n\t\t\t\t\tmpars.color = m.DbgColor;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.colorEmissive ) {\r\n\t\r\n\t\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\t\r\n\t\t\t\t\tif ( m.colorSpecular ) {\r\n\t\r\n\t\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.specularCoef ) {\r\n\t\r\n\t\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// modifiers\r\n\t\r\n\t\t\t\tif ( m.transparency !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\t\tm.opacity = m.transparency;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.opacity = m.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// textures\r\n\t\r\n\t\t\t\tif ( texturePath ) {\r\n\t\r\n\t\t\t\t\tif ( m.mapDiffuse ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapLight ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAO ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapBump ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapNormal ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapSpecular ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAlpha ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( m.mapBumpScale ) {\r\n\t\r\n\t\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.mapNormalFactor ) {\r\n\t\r\n\t\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\t\r\n\t\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\t\r\n\t\t\t\treturn material;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.Handlers = {\r\n\t\r\n\t\thandlers: [],\r\n\t\r\n\t\tadd: function ( regex, loader ) {\r\n\t\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( file ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\t\r\n\t\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\t\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\t\r\n\t\t\t\t\treturn loader;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/XHRLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.XHRLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.XHRLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.XHRLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\r\n\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this.response );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this.response );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\t\r\n\t\t\trequest.send( null );\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\treturn request;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetResponseType: function ( value ) {\r\n\t\r\n\t\t\tthis.responseType = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetWithCredentials: function ( value ) {\r\n\t\r\n\t\t\tthis.withCredentials = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ImageLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ImageLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImageLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ImageLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar image = document.createElement( 'img' );\r\n\t\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\timage.src = url;\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/JSONLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.JSONLoader = function ( manager ) {\r\n\t\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\tthis.withCredentials = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.JSONLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.JSONLoader,\r\n\t\r\n\t\t// Deprecated\r\n\t\t\r\n\t\tget statusDomElement () {\r\n\t\r\n\t\t\tif ( this._statusDomElement === undefined ) {\r\n\t\r\n\t\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\t\treturn this._statusDomElement;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tload: function( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\t\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'object' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, texturePath ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.Geometry(),\r\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\t\r\n\t\t\tparseModel( scale );\r\n\t\r\n\t\t\tparseSkin();\r\n\t\t\tparseMorphing( scale );\r\n\t\r\n\t\t\tgeometry.computeFaceNormals();\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t\t\tfunction parseModel( scale ) {\r\n\t\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\t\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i, j, fi,\r\n\t\r\n\t\t\t\toffset, zLength,\r\n\t\r\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\t\r\n\t\t\t\ttype,\r\n\t\t\t\tisQuad,\r\n\t\t\t\thasMaterial,\r\n\t\t\t\thasFaceVertexUv,\r\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\t\r\n\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\t\r\n\t\t\t\tuvLayer, uv, u, v,\r\n\t\r\n\t\t\t\tfaces = json.faces,\r\n\t\t\t\tvertices = json.vertices,\r\n\t\t\t\tnormals = json.normals,\r\n\t\t\t\tcolors = json.colors,\r\n\t\r\n\t\t\t\tnUvLayers = 0;\r\n\t\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t// disregard empty arrays\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\tvertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\t\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\t\r\n\t\r\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\t\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\t\r\n\t\t\t\t\tif ( isQuad ) {\r\n\t\r\n\t\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\toffset += 4;\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseSkin() {\r\n\t\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\t\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\t\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// could change this to json.animations[0] or remove completely\r\n\t\r\n\t\t\t\tgeometry.animation = json.animation;\r\n\t\t\t\tgeometry.animations = json.animations;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseMorphing( scale ) {\r\n\t\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\t\r\n\t\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\t\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.morphColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\t\r\n\t\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\t\r\n\t\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\t\tdstColors.push( color );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\t\r\n\t\t\t\treturn { geometry: geometry };\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\t\r\n\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/LoadingManager.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\t\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\t\r\n\t\tthis.itemStart = function ( url ) {\r\n\t\r\n\t\t\titemsTotal ++;\r\n\t\r\n\t\t\tif ( isLoading === false ) {\r\n\t\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tisLoading = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemEnd = function ( url ) {\r\n\t\r\n\t\t\titemsLoaded ++;\r\n\t\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\t\r\n\t\t\t\tisLoading = false;\r\n\t\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onLoad();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemError = function ( url ) {\r\n\t\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onError( url );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\t\r\n\t// File:src/loaders/BufferGeometryLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometryLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometryLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometryLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\t\tvar index = json.data.index;\r\n\t\r\n\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = json.data.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\t\r\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\t\r\n\t\t\tif ( groups !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\t\r\n\t\t\t\tvar center = new THREE.Vector3();\r\n\t\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/MaterialLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MaterialLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MaterialLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MaterialLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTextures: function ( value ) {\r\n\t\r\n\t\t\tthis.textures = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTexture: function ( name ) {\r\n\t\r\n\t\t\tvar textures = this.textures;\r\n\t\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar material = new THREE[ json.type ];\r\n\t\t\tmaterial.uuid = json.uuid;\r\n\t\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\r\n\t\t\t// for PointsMaterial\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\t\r\n\t\t\t// maps\r\n\t\r\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\t\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\t\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\t\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\t\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\t\r\n\t\t\tif ( json.envMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\t\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\r\n\t\t\t// MeshFaceMaterial\r\n\t\r\n\t\t\tif ( json.materials !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ObjectLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ObjectLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ObjectLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ObjectLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\t\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\t\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn object;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseGeometries: function ( json ) {\r\n\t\r\n\t\t\tvar geometries = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TextGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\t\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometries;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\t\r\n\t\t\tvar materials = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\t\tmaterials[ material.uuid ] = material;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn materials;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\t\r\n\t\t\tfunction loadImage( url ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\treturn loader.load( url, function () {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\t\r\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\t\r\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\t\r\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn images;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseTextures: function ( json, images ) {\r\n\t\r\n\t\t\tfunction parseConstant( value ) {\r\n\t\r\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\t\r\n\t\t\t\treturn THREE[ value ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar textures = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\t\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseObject: function () {\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( data, geometries, materials ) {\r\n\t\r\n\t\t\t\tvar object;\r\n\t\r\n\t\t\t\tvar getGeometry = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn geometries[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar getMaterial = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn materials[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\tcase 'Scene':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Scene();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PerspectiveCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'OrthographicCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'AmbientLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Mesh':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'LOD':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.LOD();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Line':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointCloud':\r\n\t\t\t\t\tcase 'Points':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Sprite':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Group':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Group();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Object3D();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.uuid = data.uuid;\r\n\t\r\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\t\tif ( data.matrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\t\r\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\r\n\t\t\t\tif ( data.children !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var child in data.children ) {\r\n\t\r\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.type === 'LOD' ) {\r\n\t\r\n\t\t\t\t\tvar levels = data.levels;\r\n\t\r\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\t\r\n\t\t\t\t\t\tif ( child !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn object;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/TextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.TextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.TextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tonLoad( texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/BinaryTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\t\r\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BinaryTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BinaryTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture();\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\t\r\n\t\t\t\tif ( ! texData ) return;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\t\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\t\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\t\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\t\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\t\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\t\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CompressedTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\t\r\n\tTHREE.CompressedTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.CompressedTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CompressedTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar texture = new THREE.CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\t\r\n\t\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\t\r\n\t\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\t\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\t\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\t\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/Material.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Material = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\t\r\n\t\tthis.side = THREE.FrontSide;\r\n\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = THREE.AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\r\n\t\tthis.depthFunc = THREE.LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\t\r\n\t\tthis.colorWrite = true;\r\n\t\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\t\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\t\r\n\t\tthis.alphaTest = 0;\r\n\t\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis._needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Material.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Material,\r\n\t\r\n\t\tget needsUpdate () {\r\n\t\r\n\t\t\treturn this._needsUpdate;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.update();\r\n\t\r\n\t\t\tthis._needsUpdate = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValues: function ( values ) {\r\n\t\r\n\t\t\tif ( values === undefined ) return;\r\n\t\r\n\t\t\tfor ( var key in values ) {\r\n\t\r\n\t\t\t\tvar newValue = values[ key ];\r\n\t\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\t\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\t\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\t\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\t\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\r\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\r\n\t\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.side = source.side;\r\n\t\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\r\n\t\t\tthis.blending = source.blending;\r\n\t\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\r\n\t\t\tthis.precision = source.precision;\r\n\t\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Deprecated\r\n\t\r\n\t\tget wrapAround () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset wrapAround ( boolean ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget wrapRGB () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\t\r\n\tTHREE.MaterialIdCount = 0;\r\n\t\r\n\t// File:src/materials/LineBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\",\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/LineDashedMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>,\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineDashedMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\t\r\n\t\tthis.vertexColors = false;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshLambertMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshPhongMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.specular = new THREE.Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\t\r\n\t\tthis.metal = false;\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\t\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\t\r\n\t\tthis.metal = source.metal;\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\t\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\t\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshDepthMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshNormalMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  shading: THREE.FlatShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MultiMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MultiMaterial = function ( materials ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.type = 'MultiMaterial';\r\n\t\r\n\t\tthis.materials = materials instanceof Array ? materials : [];\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MultiMaterial.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MultiMaterial,\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.2,\r\n\t\t\t\t\ttype: 'material',\r\n\t\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tmaterials: []\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.visible = this.visible;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\tvar material = new this.constructor();\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\t\r\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterial.visible = this.visible;\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\t\r\n\t// File:src/materials/PointsMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.PointsMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'PointsMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\t\r\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.PointCloudMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/ShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.ShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'ShaderMaterial';\r\n\t\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\t\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\t\r\n\t\tthis.derivatives = false; // set to use derivatives\r\n\t\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\t\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\r\n\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setValues( parameters );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\t\r\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\t\r\n\t\tthis.attributes = source.attributes;\r\n\t\tthis.defines = source.defines;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.lights = source.lights;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\tthis.derivatives = source.derivatives;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.uniforms = this.uniforms;\r\n\t\tdata.attributes = this.attributes;\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/RawShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.RawShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.ShaderMaterial.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\t// File:src/materials/SpriteMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *\tuvOffset: new THREE.Vector2(),\r\n\t *\tuvScale: new THREE.Vector2(),\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.SpriteMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'SpriteMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.rotation = 0;\r\n\t\r\n\t\tthis.fog = false;\r\n\t\r\n\t\t// set parameters\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\t\r\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.rotation = source.rotation;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/textures/Texture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.sourceFile = '';\r\n\t\r\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\t\r\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\t\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\t\r\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\r\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\t\r\n\tTHREE.Texture.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Texture,\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\t\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getDataURL( image ) {\r\n\t\r\n\t\t\t\tvar canvas;\r\n\t\r\n\t\t\t\tif ( image.toDataURL !== undefined ) {\r\n\t\r\n\t\t\t\t\tcanvas = image;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\t\tcanvas.height = image.height;\r\n\t\r\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\r\n\t\t\t\tmapping: this.mapping,\r\n\t\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\t\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( this.image !== undefined ) {\r\n\t\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\r\n\t\t\t\tvar image = this.image;\r\n\t\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\t\r\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransformUv: function ( uv ) {\r\n\t\r\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\t\r\n\t\t\tuv.multiply( this.repeat );\r\n\t\t\tuv.add( this.offset );\r\n\t\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.flipY ) {\r\n\t\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\t\r\n\tTHREE.TextureIdCount = 0;\r\n\t\r\n\t// File:src/textures/CanvasTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\t\r\n\t// File:src/textures/CubeTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.images = images;\r\n\t\tthis.flipY = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\t\r\n\tTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.images = source.images;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/textures/CompressedTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\t\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\t\r\n\t// File:src/textures/DataTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\t\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps  = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\t\r\n\t// File:src/textures/VideoTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar update = function () {\r\n\t\r\n\t\t\trequestAnimationFrame( update );\r\n\t\r\n\t\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\t\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tupdate();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\t\r\n\t// File:src/objects/Group.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Group = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Group';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Group.prototype.constructor = THREE.Group;\r\n\t// File:src/objects/Points.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Points = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Points';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Points.prototype.constructor = THREE.Points;\r\n\t\r\n\tTHREE.Points.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\t\tfunction testPoint( point, index ) {\r\n\t\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\t\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\t\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Points.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.PointCloud = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystem = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Line.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Line = function ( geometry, material, mode ) {\r\n\t\r\n\t\tif ( mode === 1 ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\t\treturn new THREE.LineSegments( geometry, material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Line';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Line.prototype.constructor = THREE.Line;\r\n\t\r\n\tTHREE.Line.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\t\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\t\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Line.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.LineStrip = 0;\r\n\tTHREE.LinePieces = 1;\r\n\t\r\n\t// File:src/objects/LineSegments.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LineSegments = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Line.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'LineSegments';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\n\tTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\t\r\n\t// File:src/objects/Mesh.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\t\r\n\tTHREE.Mesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Mesh';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t\tthis.updateMorphTargets();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\t\r\n\tTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\t\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\t\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\t\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\t\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\t\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\t\r\n\t\treturn 0;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Mesh.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\t\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\t\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\t\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\t\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\t\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\t\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\t\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\t\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\t\r\n\t\t\treturn uv1.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\r\n\t\t\tif ( material === undefined ) return;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check boundingBox before continuing\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar a, b, c;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\t\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\t\r\n\t\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\t\tc = vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\t\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\t\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\t\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\t\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\t\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\t\tvC.add( c );\r\n\t\r\n\t\t\t\t\t\ta = vA;\r\n\t\t\t\t\t\tb = vB;\r\n\t\t\t\t\t\tc = vC;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: face,\r\n\t\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Mesh.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Bone.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Bone = function ( skin ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Bone';\r\n\t\r\n\t\tthis.skin = skin;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\t\r\n\tTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.skin = source.skin;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Skeleton.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\t\r\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\t\r\n\t\tthis.identityMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t// copy the bone array\r\n\t\r\n\t\tbones = bones || [];\r\n\t\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\r\n\t\t// create a bone texture or an array of floats\r\n\t\r\n\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\r\n\t\t\t\r\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\t\tsize = Math.max( size, 4 );\r\n\t\r\n\t\t\tthis.boneTextureWidth = size;\r\n\t\t\tthis.boneTextureHeight = size;\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\t\r\n\t\tif ( boneInverses === undefined ) {\r\n\t\r\n\t\t\tthis.calculateInverses();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\t\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\t\r\n\t\t\t\tthis.boneInverses = [];\r\n\t\r\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\t\r\n\t\tthis.boneInverses = [];\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\t\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\t\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.pose = function () {\r\n\t\r\n\t\tvar bone;\r\n\t\r\n\t\t// recover the bind-time world matrices\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tif ( bone.parent ) {\r\n\t\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.update = ( function () {\r\n\t\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\t// flatten bone matrices to array\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\t\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Skeleton.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/SkinnedMesh.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'SkinnedMesh';\r\n\t\r\n\t\tthis.bindMode = \"attached\";\r\n\t\tthis.bindMatrix = new THREE.Matrix4();\r\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\t\r\n\t\t// init bones\r\n\t\r\n\t\t// TODO: remove bone creation as there is no reason (other than\r\n\t\t// convenience) for THREE.SkinnedMesh to do this.\r\n\t\r\n\t\tvar bones = [];\r\n\t\r\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\t\r\n\t\t\tvar bone, gbone;\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tbone = new THREE.Bone( this );\r\n\t\t\t\tbones.push( bone );\r\n\t\r\n\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tif ( gbone.parent !== - 1 ) {\r\n\t\r\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.add( bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.normalizeSkinWeights();\r\n\t\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\t\r\n\t\tthis.skeleton = skeleton;\r\n\t\r\n\t\tif ( bindMatrix === undefined ) {\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\t\t\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\t\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.pose = function () {\r\n\t\r\n\t\tthis.skeleton.pose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\t\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\t\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\t\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\t\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\t\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\t\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.clone = function() {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/MorphAnimMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'MorphAnimMesh';\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.duration = 1000; // milliseconds\r\n\t\tthis.mirroredLoop = false;\r\n\t\tthis.time = 0;\r\n\t\r\n\t\t// internals\r\n\t\r\n\t\tthis.lastKeyframe = 0;\r\n\t\tthis.currentKeyframe = 0;\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\t\r\n\t\tthis.startKeyframe = start;\r\n\t\tthis.endKeyframe = end;\r\n\t\r\n\t\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\t\r\n\t\tthis.direction = - 1;\r\n\t\tthis.directionBackwards = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tif ( ! geometry.animations ) geometry.animations = {};\r\n\t\r\n\t\tvar firstAnimation, animations = geometry.animations;\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar parts = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\t\r\n\t\t\t\tvar label = parts[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar animation = animations[ label ];\r\n\t\r\n\t\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\t\tif ( i > animation.end ) animation.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\t\r\n\t\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\t\r\n\t\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\t\r\n\t\tvar animation = this.geometry.animations[ label ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\t\tthis.time = 0;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\t\r\n\t\tvar frameTime = this.duration / this.length;\r\n\t\r\n\t\tthis.time += this.direction * delta;\r\n\t\r\n\t\tif ( this.mirroredLoop ) {\r\n\t\r\n\t\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\t\r\n\t\t\t\tthis.direction *= - 1;\r\n\t\r\n\t\t\t\tif ( this.time > this.duration ) {\r\n\t\r\n\t\t\t\t\tthis.time = this.duration;\r\n\t\t\t\t\tthis.directionBackwards = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.time < 0 ) {\r\n\t\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.directionBackwards = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.time = this.time % this.duration;\r\n\t\r\n\t\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tif ( keyframe !== this.currentKeyframe ) {\r\n\t\r\n\t\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\t\tinfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\t\tthis.currentKeyframe = keyframe;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\t\r\n\t\tif ( this.directionBackwards ) {\r\n\t\r\n\t\t\tmix = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinfluences[ this.currentKeyframe ] = mix;\r\n\t\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tinfluences[ i ] = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\t\tif ( b > - 1 ) influences[ b ] = t;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.duration = source.duration;\r\n\t\tthis.mirroredLoop = source.mirroredLoop;\r\n\t\tthis.time = source.time;\r\n\t\r\n\t\tthis.lastKeyframe = source.lastKeyframe;\r\n\t\tthis.currentKeyframe = source.currentKeyframe;\r\n\t\r\n\t\tthis.direction = source.direction;\r\n\t\tthis.directionBackwards = source.directionBackwards;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/LOD.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LOD = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'LOD';\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tobjects: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\t\treturn this.levels;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\t\r\n\tTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\t\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\r\n\t\tdistance = Math.abs( distance );\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\t\r\n\t\tthis.add( object );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn levels[ i - 1 ].object;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\t\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.LOD.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function update( camera ) {\r\n\t\r\n\t\t\tvar levels = this.levels;\r\n\t\r\n\t\t\tif ( levels.length > 1 ) {\r\n\t\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\t\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\t\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\t\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.LOD.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\t\r\n\t\tvar levels = source.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.levels = [];\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Sprite.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Sprite = ( function () {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\t\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\t\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\treturn function Sprite( material ) {\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tthis.type = 'Sprite';\r\n\t\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\t\r\n\tTHREE.Sprite.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\t\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Sprite.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.Particle = THREE.Sprite;\r\n\t\r\n\t// File:src/objects/LensFlare.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.lensFlares = [];\r\n\t\r\n\t\tthis.positionScreen = new THREE.Vector3();\r\n\t\tthis.customUpdateCallback = undefined;\r\n\t\r\n\t\tif ( texture !== undefined ) {\r\n\t\r\n\t\t\tthis.add( texture, size, distance, blending, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\t\r\n\t\r\n\t/*\r\n\t * Add: adds another flare\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\t\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\t\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\t\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\t\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\t\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\t\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\t\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\t\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\t\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Scene.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Scene = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Scene';\r\n\t\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\t\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\t\r\n\tTHREE.Scene.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Fog.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Fog = function ( color, near, far ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Fog.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/FogExp2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.FogExp2 = function ( color, density ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FogExp2.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk.js\r\n\t\r\n\tTHREE.ShaderChunk = {};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/UniformsUtils.js\r\n\t\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\t\r\n\tTHREE.UniformsUtils = {\r\n\t\r\n\t\tmerge: function ( uniforms ) {\r\n\t\r\n\t\t\tvar merged = {};\r\n\t\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\t\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\t\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\t\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn merged;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( uniforms_src ) {\r\n\t\r\n\t\t\tvar uniforms_dst = {};\r\n\t\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\t\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\t\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\t\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\t\r\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\t\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms_dst;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/UniformsLib.js\r\n\t\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\t\r\n\tTHREE.UniformsLib = {\r\n\t\r\n\t\tcommon: {\r\n\t\r\n\t\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\taomap: {\r\n\t\r\n\t\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlightmap: {\r\n\t\r\n\t\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\temissivemap: {\r\n\t\r\n\t\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbumpmap: {\r\n\t\r\n\t\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalmap: {\r\n\t\r\n\t\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisplacementmap: {\r\n\t\r\n\t\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfog : {\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlights: {\r\n\t\r\n\t\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpoints: {\r\n\t\r\n\t\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tshadowmap: {\r\n\t\r\n\t\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\t\r\n\t\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib.js\r\n\t\r\n\t/**\r\n\t * Webgl Shader Library for three.js\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.ShaderLib = {\r\n\t\r\n\t\t'basic': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'lambert': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define LAMBERT\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\t\"\t\telse\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'phong': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vNormal;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\t\"uniform float shininess;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'points': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float size;\",\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\t\"\t#else\",\r\n\t\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'dashed': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\t\t\t\"attribute float lineDistance;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\t\"uniform float totalSize;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\t\r\n\t\t\t\t\"\t\tdiscard;\",\r\n\t\r\n\t\t\t\t\"\t}\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'depth': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float mNear;\",\r\n\t\t\t\t\"uniform float mFar;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'normal': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'cube': {\r\n\t\r\n\t\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'equirect': {\r\n\t\r\n\t\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* Depth encoding into RGBA texture\r\n\t\t *\r\n\t\t * based on SpiderGL shadow map example\r\n\t\t * http://spidergl.org/example.php?id=6\r\n\t\t *\r\n\t\t * originally from\r\n\t\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t\t *\r\n\t\t * see also\r\n\t\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t\t */\r\n\t\r\n\t\t'depthRGBA': {\r\n\t\r\n\t\t\tuniforms: {},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\t\r\n\t\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\t\"\treturn res;\",\r\n\t\r\n\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderer.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderer = function ( parameters ) {\r\n\t\r\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\r\n\t\t_width = _canvas.width,\r\n\t\t_height = _canvas.height,\r\n\t\r\n\t\tpixelRatio = 1,\r\n\t\r\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\r\n\t\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t\t_clearAlpha = 0;\r\n\t\r\n\t\tvar lights = [];\r\n\t\r\n\t\tvar opaqueObjects = [];\r\n\t\tvar opaqueObjectsLastIndex = -1;\r\n\t\tvar transparentObjects = [];\r\n\t\tvar transparentObjectsLastIndex = -1;\r\n\t\r\n\t\tvar opaqueImmediateObjects = [];\r\n\t\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\t\tvar transparentImmediateObjects = [];\r\n\t\tvar transparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\t\r\n\t\r\n\t\tvar sprites = [];\r\n\t\tvar lensFlares = [];\r\n\t\r\n\t\t// public properties\r\n\t\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\t\r\n\t\t// clearing\r\n\t\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\t\r\n\t\t// scene graph\r\n\t\r\n\t\tthis.sortObjects = true;\r\n\t\r\n\t\t// physically based shading\r\n\t\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\t\r\n\t\t// morphs\r\n\t\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\t\r\n\t\t// flags\r\n\t\r\n\t\tthis.autoScaleCubemaps = true;\r\n\t\r\n\t\t// internal properties\r\n\t\r\n\t\tvar _this = this,\r\n\t\r\n\t\t// internal state cache\r\n\t\r\n\t\t_currentProgram = null,\r\n\t\t_currentFramebuffer = null,\r\n\t\t_currentMaterialId = - 1,\r\n\t\t_currentGeometryProgram = '',\r\n\t\t_currentCamera = null,\r\n\t\r\n\t\t_usedTextureUnits = 0,\r\n\t\r\n\t\t_viewportX = 0,\r\n\t\t_viewportY = 0,\r\n\t\t_viewportWidth = _canvas.width,\r\n\t\t_viewportHeight = _canvas.height,\r\n\t\t_currentWidth = 0,\r\n\t\t_currentHeight = 0,\r\n\t\r\n\t\t// frustum\r\n\t\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\r\n\t\t // camera matrices cache\r\n\t\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_vector3 = new THREE.Vector3(),\r\n\t\r\n\t\t// light arrays cache\r\n\t\r\n\t\t_direction = new THREE.Vector3(),\r\n\t\r\n\t\t_lightsNeedUpdate = true,\r\n\t\r\n\t\t_lights = {\r\n\t\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// info\r\n\t\r\n\t\t_infoMemory = {\r\n\t\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_infoRender = {\r\n\t\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.info = {\r\n\t\r\n\t\t\trender: _infoRender,\r\n\t\t\tmemory: _infoMemory,\r\n\t\t\tprograms: null\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\t// initialize\r\n\t\r\n\t\tvar _gl;\r\n\t\r\n\t\ttry {\r\n\t\r\n\t\t\tvar attributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t\t};\r\n\t\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\t\r\n\t\t\tif ( _gl === null ) {\r\n\t\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context.';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t} catch ( error ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\t\r\n\t\textensions.get( 'OES_texture_float' );\r\n\t\textensions.get( 'OES_texture_float_linear' );\r\n\t\textensions.get( 'OES_texture_half_float' );\r\n\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\t\r\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\t\tvar properties = new THREE.WebGLProperties();\r\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\t\r\n\t\tthis.info.programs = programCache.programs;\r\n\t\r\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction glClearColor( r, g, b, a ) {\r\n\t\r\n\t\t\tif ( _premultipliedAlpha === true ) {\r\n\t\r\n\t\t\t\tr *= a; g *= a; b *= a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_gl.clearColor( r, g, b, a );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setDefaultGLState() {\r\n\t\r\n\t\t\tstate.init();\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction resetGLState() {\r\n\t\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\tstate.reset();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tsetDefaultGLState();\r\n\t\r\n\t\tthis.context = _gl;\r\n\t\tthis.capabilities = capabilities;\r\n\t\tthis.extensions = extensions;\r\n\t\tthis.state = state;\r\n\t\r\n\t\t// shadow map\r\n\t\r\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\t\r\n\t\tthis.shadowMap = shadowMap;\r\n\t\r\n\t\r\n\t\t// Plugins\r\n\t\r\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.getContext = function () {\r\n\t\r\n\t\t\treturn _gl;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getContextAttributes = function () {\r\n\t\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.forceContextLoss = function () {\r\n\t\r\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getMaxAnisotropy = ( function () {\r\n\t\r\n\t\t\tvar value;\r\n\t\r\n\t\t\treturn function getMaxAnisotropy() {\r\n\t\r\n\t\t\t\tif ( value !== undefined ) return value;\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvalue = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )();\r\n\t\r\n\t\tthis.getPrecision = function () {\r\n\t\r\n\t\t\treturn capabilities.precision;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPixelRatio = function () {\r\n\t\r\n\t\t\treturn pixelRatio;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\t\r\n\t\t\tif ( value !== undefined ) pixelRatio = value;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getSize = function () {\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\t\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\t\r\n\t\t\tif ( updateStyle !== false ) {\r\n\t\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_viewportX = x * pixelRatio;\r\n\t\t\t_viewportY = y * pixelRatio;\r\n\t\r\n\t\t\t_viewportWidth = width * pixelRatio;\r\n\t\t\t_viewportHeight = height * pixelRatio;\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_gl.scissor(\r\n\t\t\t\tx * pixelRatio,\r\n\t\t\t\ty * pixelRatio,\r\n\t\t\t\twidth * pixelRatio,\r\n\t\t\t\theight * pixelRatio\r\n\t\t\t);\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableScissorTest = function ( boolean ) {\r\n\t\r\n\t\t\tstate.setScissorTest( boolean );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Clearing\r\n\t\r\n\t\tthis.getClearColor = function () {\r\n\t\r\n\t\t\treturn _clearColor;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearColor = function ( color, alpha ) {\r\n\t\r\n\t\t\t_clearColor.set( color );\r\n\t\r\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getClearAlpha = function () {\r\n\t\r\n\t\t\treturn _clearAlpha;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearAlpha = function ( alpha ) {\r\n\t\r\n\t\t\t_clearAlpha = alpha;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\t\r\n\t\t\tvar bits = 0;\r\n\t\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\r\n\t\t\t_gl.clear( bits );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearColor = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearDepth = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearStencil = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Reset\r\n\t\r\n\t\tthis.resetGLState = resetGLState;\r\n\t\r\n\t\tthis.dispose = function() {\r\n\t\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Events\r\n\t\r\n\t\tfunction onContextLost( event ) {\r\n\t\r\n\t\t\tevent.preventDefault();\r\n\t\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\t\r\n\t\t\tproperties.clear();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction onTextureDispose( event ) {\r\n\t\r\n\t\t\tvar texture = event.target;\r\n\t\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\tdeallocateTexture( texture );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\t\r\n\t\t\tvar renderTarget = event.target;\r\n\t\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onMaterialDispose( event ) {\r\n\t\r\n\t\t\tvar material = event.target;\r\n\t\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\tdeallocateMaterial( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer deallocation\r\n\t\r\n\t\tfunction deallocateTexture( texture ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t// cube texture\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// 2D texture\r\n\t\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.delete( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\t\r\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( renderTarget );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateMaterial( material ) {\r\n\t\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\tproperties.delete( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\t\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\t\r\n\t\t\tmaterial.program = undefined;\r\n\t\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\t\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer rendering\r\n\t\r\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar buffers = properties.get( object );\r\n\t\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( object.hasPositions ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasNormals ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\r\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvar array = object.normalArray;\r\n\t\r\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasUvs && material.map ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.color );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\t\r\n\t\t\tobject.count = 0;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\t\r\n\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\tvar updateBuffers = false;\r\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\t\r\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\t\r\n\t\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( morphTargetInfluences !== undefined ) {\r\n\t\r\n\t\t\t\tvar activeInfluences = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tactiveInfluences.sort( numericalSort );\r\n\t\r\n\t\t\t\tif ( activeInfluences.length > 8 ) {\r\n\t\r\n\t\t\t\t\tactiveInfluences.length = 8;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\t\r\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar index = influence[ 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar uniforms = program.getUniforms();\r\n\t\r\n\t\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar renderer;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( index );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderer = bufferRenderer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( updateBuffers ) {\r\n\t\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group === undefined ) {\r\n\t\r\n\t\t\t\tvar count;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tcount = index.count;\r\n\t\r\n\t\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\tcount = position.data.array.length / 3;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcount = position.count;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar drawRange = geometry.drawRange;\r\n\t\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: drawRange.start,\r\n\t\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\t\r\n\t\t\t\t\trenderer.renderInstances( geometry );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\t\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\t\r\n\t\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\t\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\t\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\t\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\t\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\t\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\t\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\t\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\t\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\t\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\t\r\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\t\r\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\t\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Sorting\r\n\t\r\n\t\tfunction numericalSort ( a, b ) {\r\n\t\r\n\t\t\treturn b[ 0 ] - a[ 0 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} else if ( a.material.id !== b.material.id ) {\r\n\t\r\n\t\t\t\treturn a.material.id - b.material.id;\r\n\t\r\n\t\t\t} else if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn a.z - b.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction reversePainterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Rendering\r\n\t\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\t\r\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\t// reset caching for this frame\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\t// update scene graph\r\n\t\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\t\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\t\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\tlights.length = 0;\r\n\t\r\n\t\t\topaqueObjectsLastIndex = -1;\r\n\t\t\ttransparentObjectsLastIndex = -1;\r\n\t\r\n\t\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\t\tsprites.length = 0;\r\n\t\t\tlensFlares.length = 0;\r\n\t\r\n\t\t\tprojectObject( scene );\r\n\t\r\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\t\r\n\t\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\t\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tshadowMap.render( scene, camera );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\t_infoRender.calls = 0;\r\n\t\t\t_infoRender.vertices = 0;\r\n\t\t\t_infoRender.faces = 0;\r\n\t\t\t_infoRender.points = 0;\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\r\n\t\t\tif ( this.autoClear || forceClear ) {\r\n\t\r\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\t\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\t\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// custom render plugins (post pass)\r\n\t\r\n\t\t\tspritePlugin.render( scene, camera );\r\n\t\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\t\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\t\r\n\t\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\t\r\n\t\t\tstate.setDepthTest( true );\r\n\t\t\tstate.setDepthWrite( true );\r\n\t\t\tstate.setColorWrite( true );\r\n\t\r\n\t\t\t// _gl.finish();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction pushImmediateRenderItem( object ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( object.material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentImmediateObjects;\r\n\t\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing position or grow the array\r\n\t\r\n\t\t\tif ( index < array.length ) {\r\n\t\r\n\t\t\t\tarray[ index ] = object;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentObjects;\r\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueObjects;\r\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing render item or grow the array\r\n\t\r\n\t\t\tvar renderItem = array[ index ];\r\n\t\r\n\t\t\tif ( renderItem !== undefined ) {\r\n\t\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.z = _vector3.z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tz: _vector3.z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( renderItem );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\t\r\n\t\t\t\tlights.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\t\r\n\t\t\t\tsprites.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\t\r\n\t\t\t\tlensFlares.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\tpushImmediateRenderItem( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tobject.skeleton.update();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\r\n\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\t\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tvar material = overrideMaterial;\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar object = renderList[ i ];\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\t\r\n\t\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\t\r\n\t\t\t\tobject.render( function ( object ) {\r\n\t\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction initMaterial( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\t\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\t} else if ( program.code !== code ) {\r\n\t\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\t\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( programChange ) {\r\n\t\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\t\r\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\t\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( material.morphTargets ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.morphNormals ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterialProperties.uniformsList = [];\r\n\t\r\n\t\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\t\r\n\t\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\t\r\n\t\t\t\tvar location = uniformLocations[ u ];\r\n\t\r\n\t\t\t\tif ( location ) {\r\n\t\r\n\t\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterial( material ) {\r\n\t\r\n\t\t\tsetMaterialFaces( material );\r\n\t\r\n\t\t\tif ( material.transparent === true ) {\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\t\tstate.setColorWrite( material.colorWrite );\r\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterialFaces( material ) {\r\n\t\r\n\t\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\t\r\n\t\t\t_usedTextureUnits = 0;\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\t\r\n\t\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\t\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\t\r\n\t\t\tif ( program.id !== _currentProgram ) {\r\n\t\r\n\t\t\t\t_gl.useProgram( program.program );\r\n\t\t\t\t_currentProgram = program.id;\r\n\t\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\t\r\n\t\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\r\n\t\t\t\trefreshMaterial = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\t\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material.envMap ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material.skinning ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\t\r\n\t\t\tif ( material.skinning ) {\r\n\t\r\n\t\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshMaterial ) {\r\n\t\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\t\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material.lights ) {\r\n\t\r\n\t\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\t\r\n\t\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( refreshLights ) {\r\n\t\r\n\t\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// refresh single material specific uniforms\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// load common uniforms\r\n\t\r\n\t\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tloadUniformsMatrices( p_uniforms, object );\r\n\t\r\n\t\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\t\r\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\r\n\t\t\tif ( material.emissive ) {\r\n\t\r\n\t\t\t\tuniforms.emissive.value = material.emissive;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\r\n\t\t\tif ( material.aoMap ) {\r\n\t\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\t\r\n\t\t\tvar uvScaleMap;\r\n\t\r\n\t\t\tif ( material.map ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\r\n\t\t\t} else if ( material.specularMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\r\n\t\t\t} else if ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\t\r\n\t\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\t\tvar repeat = uvScaleMap.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\t\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.psColor.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size;\r\n\t\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\r\n\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\tvar offset = material.map.offset;\r\n\t\t\t\tvar repeat = material.map.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\t\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\t\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = material.shininess;\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\t\r\n\t\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\t\r\n\t\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\t\r\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\t\r\n\t\t\tif ( uniforms.shadowMatrix ) {\r\n\t\r\n\t\t\t\tvar j = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar light = lights[ i ];\r\n\t\r\n\t\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\t\r\n\t\t\t\t\t\tj ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (load to GPU)\r\n\t\r\n\t\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\t\r\n\t\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\t\r\n\t\t\tif ( uniforms.normalMatrix ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTextureUnit() {\r\n\t\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\t\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_usedTextureUnits += 1;\r\n\t\r\n\t\t\treturn textureUnit;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction loadUniformsGeneric ( uniforms ) {\r\n\t\r\n\t\t\tvar texture, textureUnit;\r\n\t\r\n\t\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\t\r\n\t\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\t\r\n\t\t\t\tvar type = uniform.type;\r\n\t\t\t\tvar value = uniform.value;\r\n\t\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\t\r\n\t\t\t\tswitch ( type ) {\r\n\t\r\n\t\t\t\t\tcase '1i':\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1f':\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2f':\r\n\t\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3f':\r\n\t\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4f':\r\n\t\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1iv':\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3iv':\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1fv':\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2fv':\r\n\t\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3fv':\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4fv':\r\n\t\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t//\r\n\t\r\n\t\t\t\t\tcase 'i':\r\n\t\r\n\t\t\t\t\t\t// single integer\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'f':\r\n\t\r\n\t\t\t\t\t\t// single float\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'c':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector2\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 't':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\t\t\ttexture = value;\r\n\t\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\t\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'tv':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Texture (2d)\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = [];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\t\r\n\t\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\t\r\n\t\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupLights ( lights, camera ) {\r\n\t\r\n\t\t\tvar l, ll, light,\r\n\t\t\tr = 0, g = 0, b = 0,\r\n\t\t\tcolor, skyColor, groundColor,\r\n\t\t\tintensity,\r\n\t\t\tdistance,\r\n\t\r\n\t\t\tzlights = _lights,\r\n\t\r\n\t\t\tviewMatrix = camera.matrixWorldInverse,\r\n\t\r\n\t\t\tdirColors = zlights.directional.colors,\r\n\t\t\tdirPositions = zlights.directional.positions,\r\n\t\r\n\t\t\tpointColors = zlights.point.colors,\r\n\t\t\tpointPositions = zlights.point.positions,\r\n\t\t\tpointDistances = zlights.point.distances,\r\n\t\t\tpointDecays = zlights.point.decays,\r\n\t\r\n\t\t\tspotColors = zlights.spot.colors,\r\n\t\t\tspotPositions = zlights.spot.positions,\r\n\t\t\tspotDistances = zlights.spot.distances,\r\n\t\t\tspotDirections = zlights.spot.directions,\r\n\t\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\t\tspotExponents = zlights.spot.exponents,\r\n\t\t\tspotDecays = zlights.spot.decays,\r\n\t\r\n\t\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\t\themiPositions = zlights.hemi.positions,\r\n\t\r\n\t\t\tdirLength = 0,\r\n\t\t\tpointLength = 0,\r\n\t\t\tspotLength = 0,\r\n\t\t\themiLength = 0,\r\n\t\r\n\t\t\tdirCount = 0,\r\n\t\t\tpointCount = 0,\r\n\t\t\tspotCount = 0,\r\n\t\t\themiCount = 0,\r\n\t\r\n\t\t\tdirOffset = 0,\r\n\t\t\tpointOffset = 0,\r\n\t\t\tspotOffset = 0,\r\n\t\t\themiOffset = 0;\r\n\t\r\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tlight = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow ) continue;\r\n\t\r\n\t\t\t\tcolor = light.color;\r\n\t\t\t\tintensity = light.intensity;\r\n\t\t\t\tdistance = light.distance;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tr += color.r;\r\n\t\t\t\t\tg += color.g;\r\n\t\t\t\t\tb += color.b;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\tdirCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tdirOffset = dirLength * 3;\r\n\t\r\n\t\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\t\r\n\t\t\t\t\tdirLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tpointCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tpointOffset = pointLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tpointLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\tspotCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tspotOffset = spotLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tspotLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\t\r\n\t\t\t\t\themiCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\themiOffset = hemiLength * 3;\r\n\t\r\n\t\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tskyColor = light.color;\r\n\t\t\t\t\tgroundColor = light.groundColor;\r\n\t\r\n\t\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\t\r\n\t\t\t\t\themiLength += 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// null eventual remains from removed lights\r\n\t\t\t// (this is to avoid if in shader)\r\n\t\r\n\t\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\t\r\n\t\t\tzlights.directional.length = dirLength;\r\n\t\t\tzlights.point.length = pointLength;\r\n\t\t\tzlights.spot.length = spotLength;\r\n\t\t\tzlights.hemi.length = hemiLength;\r\n\t\r\n\t\t\tzlights.ambient[ 0 ] = r;\r\n\t\t\tzlights.ambient[ 1 ] = g;\r\n\t\t\tzlights.ambient[ 2 ] = b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// GL state setting\r\n\t\r\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\t\r\n\t\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\t\r\n\t\t\t\tstate.disable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Textures\r\n\t\r\n\t\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\r\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\t\r\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\tif ( extension ) {\r\n\t\r\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\t\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\t\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\t\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\t\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\r\n\t\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\t\r\n\t\t\tvar image = texture.image,\r\n\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\t\r\n\t\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setTexture = function ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\tvar image = texture.image;\r\n\t\r\n\t\t\t\tif ( image === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( image.complete === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction clampToMaxSize ( image, maxSize ) {\r\n\t\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\t\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\t\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTexture ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\t\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\t\r\n\t\t\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\r\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\t\r\n\t\t\t\t\tvar cubeImage = [];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Render targets\r\n\t\r\n\t\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\t\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\t\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t\t*/\r\n\t\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\t\r\n\t\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t// Setup texture, create render and frame buffers\r\n\t\r\n\t\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Release everything\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar framebuffer, width, height, vx, vy;\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\twidth = renderTarget.width;\r\n\t\t\t\theight = renderTarget.height;\r\n\t\r\n\t\t\t\tvx = 0;\r\n\t\t\t\tvy = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tframebuffer = null;\r\n\t\r\n\t\t\t\twidth = _viewportWidth;\r\n\t\t\t\theight = _viewportHeight;\r\n\t\r\n\t\t\t\tvx = _viewportX;\r\n\t\t\t\tvy = _viewportY;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_gl.viewport( vx, vy, width, height );\r\n\t\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_currentWidth = width;\r\n\t\t\t_currentHeight = height;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\t\r\n\t\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\t\r\n\t\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar restore = false;\r\n\t\r\n\t\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\t\r\n\t\t\t\t\trestore = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\t\r\n\t\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( restore ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\t\r\n\t\tfunction filterFallback ( f ) {\r\n\t\r\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\t\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn _gl.LINEAR;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Map three.js constants to WebGL constants\r\n\t\r\n\t\tfunction paramThreeToGL ( p ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\t\r\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\t\r\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\t\r\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\t\r\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// DEPRECATED\r\n\t\r\n\t\tthis.supportsFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsHalfFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsStandardDerivatives = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTextureS3TC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTexturePVRTC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsBlendMinMax = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsVertexTextures = function () {\r\n\t\r\n\t\t\treturn capabilities.vertexTextures;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsInstancedArrays = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.initMaterial = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPrePlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPostPlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.updateShadowMap = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tshadowMapEnabled: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.enabled;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\t\tshadowMap.enabled = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapType: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.type;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\t\tshadowMap.type = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapCullFace: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.cullFace;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\t\tshadowMap.cullFace = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapDebug: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.debug;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\t\tshadowMap.debug = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderTarget.js\r\n\t\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\toptions = options || {};\r\n\t\r\n\t\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\t\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\r\n\t\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTarget.prototype = {\r\n\t\r\n\t\tconstructor: THREE.WebGLRenderTarget,\r\n\t\r\n\t\tsetSize: function ( width, height ) {\r\n\t\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\t\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\r\n\t\t\t\tthis.dispose();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\r\n\t\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\t\r\n\t// File:src/renderers/WebGLRenderTargetCube.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\t\r\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\t\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\t\r\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawArrays( mode, start, count );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar type, size;\r\n\t\r\n\t\tfunction setIndex( index ) {\r\n\t\r\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\tsize = 4;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\tsize = 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawElements( mode, count, type, start * size );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\r\n\t\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLExtensions.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLExtensions = function ( gl ) {\r\n\t\r\n\t\tvar extensions = {};\r\n\t\r\n\t\tthis.get = function ( name ) {\r\n\t\r\n\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn extensions[ name ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension( name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textensions[ name ] = extension;\r\n\t\r\n\t\t\treturn extension;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLCapabilities.js\r\n\t\r\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\t\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\t\r\n\t\t\tif ( precision === 'highp' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'highp';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprecision = 'mediump';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'mediump';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'lowp';\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getMaxPrecision = getMaxPrecision;\r\n\t\r\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\t\r\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\t\r\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\t\r\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\t\r\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\t\r\n\t\tif ( _maxPrecision !== this.precision ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\t\tthis.precision = _maxPrecision;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLGeometries.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = {};\r\n\t\r\n\t\tfunction get( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn geometries[ geometry.id ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tvar buffergeometry;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tbuffergeometry = geometry;\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\t\r\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\t\r\n\t\t\tinfo.memory.geometries ++;\r\n\t\r\n\t\t\treturn buffergeometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onGeometryDispose( event ) {\r\n\t\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\t\r\n\t\t\tdeleteAttributes( buffergeometry.attributes );\r\n\t\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\t\r\n\t\t\tinfo.memory.geometries --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttribute( attribute ) {\r\n\t\r\n\t\t\tvar buffer = getAttributeBuffer( attribute );\r\n\t\r\n\t\t\tif ( buffer !== undefined ) {\r\n\t\r\n\t\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\t\tremoveAttributeBuffer( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttributes( attributes ) {\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( attributes[ name ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction removeAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\tproperties.delete( attribute.data );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tproperties.delete( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.get = get;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLObjects.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction update( object ) {\r\n\t\r\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\t\r\n\t\t\tvar geometry = geometries.get( object );\r\n\t\r\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tgeometry.updateFromObject( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\t\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateAttribute( attribute, bufferType ) {\r\n\t\r\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\t\r\n\t\t\tvar attributeProperties = properties.get( data );\r\n\t\r\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\t\r\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\t\r\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\t\r\n\t\t\tgl.bufferData( bufferType, data.array, usage );\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\t\r\n\t\t\t\t// Not using update ranges\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\t\r\n\t\t\t} else if ( data.updateRange.count === 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\t\r\n\t\t\t\tdata.updateRange.count = 0; // reset range\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\r\n\t\t\tif ( property.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\treturn property.wireframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar indices = [];\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar position = attributes.position;\r\n\t\r\n\t\t\t// console.time( 'wireframe' );\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar edges = {};\r\n\t\t\t\tvar array = index.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\t\r\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar array = attributes.position.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\t\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\t\r\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\t\r\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\tproperty.wireframe = attribute;\r\n\t\r\n\t\t\treturn attribute;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkEdge( edges, a, b ) {\r\n\t\r\n\t\t\tif ( a > b ) {\r\n\t\r\n\t\t\t\tvar tmp = a;\r\n\t\t\t\ta = b;\r\n\t\t\t\tb = tmp;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar list = edges[ a ];\r\n\t\r\n\t\t\tif ( list === undefined ) {\r\n\t\r\n\t\t\t\tedges[ a ] = [ b ];\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\t\r\n\t\t\t\tlist.push( b );\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\t\r\n\t\tthis.update = update;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProgram.js\r\n\t\r\n\tTHREE.WebGLProgram = ( function () {\r\n\t\r\n\t\tvar programIdCount = 0;\r\n\t\r\n\t\tfunction generateDefines( defines ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tfor ( var name in defines ) {\r\n\t\r\n\t\t\t\tvar value = defines[ name ];\r\n\t\r\n\t\t\t\tif ( value === false ) continue;\r\n\t\r\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar uniforms = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\t\r\n\t\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\t\r\n\t\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuniforms[ name ] = location;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar attributes = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\t\r\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn attributes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction filterEmptyLine( string ) {\r\n\t\r\n\t\t\treturn string !== '';\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\t\r\n\t\t\tvar gl = renderer.context;\r\n\t\r\n\t\t\tvar defines = material.defines;\r\n\t\r\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\t\r\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\t\r\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\r\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\r\n\t\t\tif ( parameters.envMap ) {\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.combine ) {\r\n\t\r\n\t\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\t\r\n\t\t\t// console.log( 'building new program ' );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar customDefines = generateDefines( defines );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar prefixVertex, prefixFragment;\r\n\t\r\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\t\r\n\t\t\t\tprefixVertex = '';\r\n\t\t\t\tprefixFragment = '';\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tprefixVertex = [\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\t\r\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\r\n\t\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_COLOR',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 color;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\t\r\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\t\r\n\t\t\t\t\t'\t#else',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\t\r\n\t\t\t\t\t'\t#endif',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_SKINNING',\r\n\t\r\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t\tprefixFragment = [\r\n\t\r\n\t\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\t\r\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\t\r\n\t\t\tgl.attachShader( program, glVertexShader );\r\n\t\t\tgl.attachShader( program, glFragmentShader );\r\n\t\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\r\n\t\t\tif ( material.index0AttributeName !== undefined ) {\r\n\t\r\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\t\r\n\t\t\t} else if ( parameters.morphTargets === true ) {\r\n\t\r\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\t\r\n\t\t\tvar runnable = true;\r\n\t\t\tvar haveDiagnostics = true;\r\n\t\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\t\r\n\t\t\t\trunnable = false;\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\t\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\t\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\t\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( haveDiagnostics ) {\r\n\t\r\n\t\t\t\tthis.diagnostics = {\r\n\t\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tmaterial: material,\r\n\t\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\r\n\t\t\t\t\tvertexShader: {\r\n\t\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tfragmentShader: {\r\n\t\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// clean up\r\n\t\r\n\t\t\tgl.deleteShader( glVertexShader );\r\n\t\t\tgl.deleteShader( glFragmentShader );\r\n\t\r\n\t\t\t// set up caching for uniform locations\r\n\t\r\n\t\t\tvar cachedUniforms;\r\n\t\r\n\t\t\tthis.getUniforms = function() {\r\n\t\r\n\t\t\t\tif ( cachedUniforms === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedUniforms;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// set up caching for attribute locations\r\n\t\r\n\t\t\tvar cachedAttributes;\r\n\t\r\n\t\t\tthis.getAttributes = function() {\r\n\t\r\n\t\t\t\tif ( cachedAttributes === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedAttributes;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// free resource\r\n\t\r\n\t\t\tthis.destroy = function() {\r\n\t\r\n\t\t\t\tgl.deleteProgram( program );\r\n\t\t\t\tthis.program = undefined;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// DEPRECATED\r\n\t\r\n\t\t\tObject.defineProperties( this, {\r\n\t\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\t\treturn this.getUniforms();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\t\treturn this.getAttributes();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tthis.id = programIdCount ++;\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.usedTimes = 1;\r\n\t\t\tthis.program = program;\r\n\t\t\tthis.vertexShader = glVertexShader;\r\n\t\t\tthis.fragmentShader = glFragmentShader;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLPrograms.js\r\n\t\r\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\t\r\n\t\tvar programs = [];\r\n\t\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points'\r\n\t\t};\r\n\t\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\t\"flipSided\"\r\n\t\t];\r\n\t\r\n\t\r\n\t\tfunction allocateBones ( object ) {\r\n\t\r\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\treturn 1024;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\t\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\t\r\n\t\t\t\tvar maxBones = nVertexMatrices;\r\n\t\r\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\t\r\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn maxBones;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateLights( lights ) {\r\n\t\r\n\t\t\tvar dirLights = 0;\r\n\t\t\tvar pointLights = 0;\r\n\t\t\tvar spotLights = 0;\r\n\t\t\tvar hemiLights = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateShadows( lights ) {\r\n\t\r\n\t\t\tvar maxShadows = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn maxShadows;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\t\r\n\t\t\tvar maxLightCount = allocateLights( lights );\r\n\t\t\tvar maxShadows = allocateShadows( lights );\r\n\t\t\tvar maxBones = allocateBones( object );\r\n\t\t\tvar precision = renderer.getPrecision();\r\n\t\r\n\t\t\tif ( material.precision !== null ) {\r\n\t\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\t\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar parameters = {\r\n\t\r\n\t\t\t\tshaderID: shaderID,\r\n\t\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\t\r\n\t\t\t\tcombine: material.combine,\r\n\t\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\r\n\t\t\t\tfog: fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\t\r\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\t\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\t\r\n\t\t\t\tskinning: material.skinning,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\t\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\t\r\n\t\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\t\r\n\t\t\t\tmaxShadows: maxShadows,\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\t\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tmetal: material.metal,\r\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\t\tflipSided: material.side === THREE.BackSide\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn parameters;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\tchunks.push( parameters.shaderID );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\t\tchunks.push( material.vertexShader );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\t\r\n\t\t\t\t\tchunks.push( name );\r\n\t\t\t\t\tchunks.push( material.defines[ name ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\t\tchunks.push( parameterName );\r\n\t\t\t\tchunks.push( parameters[ parameterName ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\t\r\n\t\t\tvar program;\r\n\t\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\t\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\t\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\t\tprograms.push( program );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.releaseProgram = function( program ) {\r\n\t\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\t\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\t\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProperties.js\r\n\t\r\n\t/**\r\n\t* @author fordacious / fordacious.github.io\r\n\t*/\r\n\t\r\n\tTHREE.WebGLProperties = function () {\r\n\t\r\n\t\tvar properties = {};\r\n\t\r\n\t\tthis.get = function ( object ) {\r\n\t\r\n\t\t\tvar uuid = object.uuid;\r\n\t\t\tvar map = properties[ uuid ];\r\n\t\r\n\t\t\tif ( map === undefined ) {\r\n\t\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties[ uuid ] = map;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn map;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.delete = function ( object ) {\r\n\t\r\n\t\t\tdelete properties[ object.uuid ];\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function () {\r\n\t\r\n\t\t\tproperties = {};\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShader.js\r\n\t\r\n\tTHREE.WebGLShader = ( function () {\r\n\t\r\n\t\tvar addLineNumbers = function ( string ) {\r\n\t\r\n\t\t\tvar lines = string.split( '\\n' );\r\n\t\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\t\r\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn lines.join( '\\n' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function WebGLShader( gl, type, string ) {\r\n\t\r\n\t\t\tvar shader = gl.createShader( type );\r\n\t\r\n\t\t\tgl.shaderSource( shader, string );\r\n\t\t\tgl.compileShader( shader );\r\n\t\r\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// --enable-privileged-webgl-extension\r\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\t\r\n\t\t\treturn shader;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShadowMap.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\t\r\n\t\tvar _gl = _renderer.context,\r\n\t\t_state = _renderer.state,\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_min = new THREE.Vector3(),\r\n\t\t_max = new THREE.Vector3(),\r\n\t\r\n\t\t_matrixPosition = new THREE.Vector3(),\r\n\t\r\n\t\t_renderList = [];\r\n\t\r\n\t\t// init\r\n\t\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\t\r\n\t\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader\r\n\t\t } );\r\n\t\r\n\t\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\t_depthMaterial._shadowPass = true;\r\n\t\t_depthMaterialMorph._shadowPass = true;\r\n\t\t_depthMaterialSkin._shadowPass = true;\r\n\t\t_depthMaterialMorphSkin._shadowPass = true;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tthis.enabled = false;\r\n\t\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tthis.type = THREE.PCFShadowMap;\r\n\t\tthis.cullFace = THREE.CullFaceFront;\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\t\r\n\t\t\t// set GL state for depth map\r\n\t\r\n\t\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\r\n\t\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_state.setDepthTest( true );\r\n\t\r\n\t\t\t// render depth map\r\n\t\r\n\t\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar light = _lights[ i ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( ! light.shadowMap ) {\r\n\t\r\n\t\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\t\r\n\t\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\t\r\n\t\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! light.shadowCamera ) {\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tscene.add( light.shadowCamera );\r\n\t\r\n\t\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\t\r\n\t\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\t\tscene.add( light.cameraHelper );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\t\tvar shadowCamera = light.shadowCamera;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\r\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\t\r\n\t\t\t\t// compute shadow matrix\r\n\t\r\n\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\t\r\n\t\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\t\t// render shadow map\r\n\t\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\t\r\n\t\t\t\t// set object matrices & frustum culling\r\n\t\r\n\t\t\t\t_renderList.length = 0;\r\n\t\r\n\t\t\t\tprojectObject( scene, shadowCamera );\r\n\t\r\n\t\r\n\t\t\t\t// render regular objects\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore GL state\r\n\t\r\n\t\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\r\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t\t_state.enable( _gl.BLEND );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_renderer.resetGLState();\r\n\t\r\n\t\t\tscope.needsUpdate = false;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction getDepthMaterial( object, material ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\t\r\n\t\t\tvar depthMaterial;\r\n\t\r\n\t\t\tif ( object.customDepthMaterial ) {\r\n\t\r\n\t\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\t\r\n\t\t\t} else if ( useSkinning ) {\r\n\t\r\n\t\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\t\r\n\t\t\t} else if ( useMorphing ) {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdepthMaterial.visible = material.visible;\r\n\t\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\r\n\t\t\treturn depthMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t\t_renderList.push( object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLState.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\t\r\n\t\tvar _this = this;\r\n\t\r\n\t\tvar newAttributes = new Uint8Array( 16 );\r\n\t\tvar enabledAttributes = new Uint8Array( 16 );\r\n\t\r\n\t\tvar capabilities = {};\r\n\t\r\n\t\tvar compressedTextureFormats = null;\r\n\t\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\r\n\t\tvar currentDepthFunc = null;\r\n\t\tvar currentDepthWrite = null;\r\n\t\r\n\t\tvar currentColorWrite = null;\r\n\t\r\n\t\tvar currentFlipSided = null;\r\n\t\r\n\t\tvar currentLineWidth = null;\r\n\t\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\t\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\r\n\t\tvar currentTextureSlot = undefined;\r\n\t\tvar currentBoundTextures = {};\r\n\t\r\n\t\tthis.init = function () {\r\n\t\r\n\t\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\t\tgl.clearDepth( 1 );\r\n\t\t\tgl.clearStencil( 0 );\r\n\t\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\tgl.frontFace( gl.CCW );\r\n\t\t\tgl.cullFace( gl.BACK );\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\tthis.enable( gl.BLEND );\r\n\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.initAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttribute = function ( attribute ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disableUnusedAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== true ) {\r\n\t\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tcapabilities[ id ] = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== false ) {\r\n\t\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tcapabilities[ id ] = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getCompressedTextureFormats = function () {\r\n\t\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\t\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\t\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\t\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn compressedTextureFormats;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\t\r\n\t\t\tif ( blending !== currentBlending ) {\r\n\t\r\n\t\t\t\tif ( blending === THREE.NoBlending ) {\r\n\t\r\n\t\t\t\t\tthis.disable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\t\r\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tcurrentBlendEquation = null;\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthFunc = function ( depthFunc ) {\r\n\t\r\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\t\r\n\t\t\t\tif ( depthFunc ) {\r\n\t\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\t\r\n\t\t\t\t\t\tcase THREE.NeverDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.EqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthTest = function ( depthTest ) {\r\n\t\r\n\t\t\tif ( depthTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthWrite = function ( depthWrite ) {\r\n\t\r\n\t\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\t\r\n\t\t\t\tgl.depthMask( depthWrite );\r\n\t\t\t\tcurrentDepthWrite = depthWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setColorWrite = function ( colorWrite ) {\r\n\t\r\n\t\t\tif ( currentColorWrite !== colorWrite ) {\r\n\t\r\n\t\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\t\tcurrentColorWrite = colorWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setFlipSided = function ( flipSided ) {\r\n\t\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\t\r\n\t\t\t\tif ( flipSided ) {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setLineWidth = function ( width ) {\r\n\t\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\t\r\n\t\t\t\tgl.lineWidth( width );\r\n\t\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\t\r\n\t\t\tif ( polygonOffset ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\t\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\t\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissorTest = function ( scissorTest ) {\r\n\t\r\n\t\t\tif ( scissorTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// texture\r\n\t\r\n\t\tthis.activeTexture = function ( webglSlot ) {\r\n\t\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\t\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\t\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\t\r\n\t\t\tif ( currentTextureSlot === undefined ) {\r\n\t\r\n\t\t\t\t_this.activeTexture();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\t\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\t\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\t\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\t\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.compressedTexImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.texImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.reset = function () {\r\n\t\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcapabilities = {};\r\n\t\r\n\t\t\tcompressedTextureFormats = null;\r\n\t\r\n\t\t\tcurrentBlending = null;\r\n\t\r\n\t\t\tcurrentDepthWrite = null;\r\n\t\t\tcurrentColorWrite = null;\r\n\t\r\n\t\t\tcurrentFlipSided = null;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\tvar hasVertexTexture;\r\n\t\r\n\t\tvar tempTexture, occlusionTexture;\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t\t 1, - 1,  1, 0,\r\n\t\t\t\t 1,  1,  1, 1,\r\n\t\t\t\t- 1,  1,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\t// buffers\r\n\t\r\n\t\t\tvertexBuffer     = gl.createBuffer();\r\n\t\t\telementBuffer    = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\t// textures\r\n\t\r\n\t\t\ttempTexture      = gl.createTexture();\r\n\t\t\tocclusionTexture = gl.createTexture();\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\t\r\n\t\t\tvar shader;\r\n\t\r\n\t\t\tif ( hasVertexTexture ) {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"precision mediump float;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tprogram = createProgram( shader );\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/*\r\n\t\t * Render lens flares\r\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t\t *         reads these back and calculates occlusion.\r\n\t\t */\r\n\t\r\n\t\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\t\r\n\t\t\tif ( flares.length === 0 ) return;\r\n\t\r\n\t\t\tvar tempPosition = new THREE.Vector3();\r\n\t\r\n\t\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\t\r\n\t\t\tvar size = 16 / viewportHeight,\r\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\t\r\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.vertex );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t\t// setup gl and common used attribs/uniforms\r\n\t\r\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 1 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tgl.depthMask( false );\r\n\t\r\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tsize = 16 / viewportHeight;\r\n\t\t\t\tscale.set( size * invAspect, size );\r\n\t\r\n\t\t\t\t// calc object screen position\r\n\t\r\n\t\t\t\tvar flare = flares[ i ];\r\n\t\r\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\t\r\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\t\r\n\t\t\t\t// setup arrays for gl programs\r\n\t\r\n\t\t\t\tscreenPosition.copy( tempPosition );\r\n\t\r\n\t\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\t\r\n\t\t\t\t// screen cull\r\n\t\r\n\t\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\t\r\n\t\t\t\t\t// save current RGB to temp texture\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// render pink quad\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\r\n\t\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// copy result to occlusionMap\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// restore graphics\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// update object positions\r\n\t\r\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\t\r\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\t\r\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tflare.updateLensFlares();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// render flares\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\t\r\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\t\r\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\t\r\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\t\r\n\t\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\t\tscale.y = size;\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\t\r\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\t\r\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthMask( true );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram ( shader ) {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\r\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\t\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\r\n\t\tvar texture;\r\n\t\r\n\t\t// decompose matrixWorld\r\n\t\r\n\t\tvar spritePosition = new THREE.Vector3();\r\n\t\tvar spriteRotation = new THREE.Quaternion();\r\n\t\tvar spriteScale = new THREE.Vector3();\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\tvertexBuffer  = gl.createBuffer();\r\n\t\t\telementBuffer = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tprogram = createProgram();\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\t\r\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\t\r\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\t\r\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\t\r\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\t\r\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t\t};\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = 8;\r\n\t\t\tcanvas.height = 8;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.fillStyle = 'white';\r\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\t\r\n\t\t\ttexture = new THREE.Texture( canvas );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( sprites.length === 0 ) return;\r\n\t\r\n\t\t\t// setup gl\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 0 );\r\n\t\r\n\t\t\tvar oldFogType = 0;\r\n\t\t\tvar sceneFogType = 0;\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\tif ( fog ) {\r\n\t\r\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\t\r\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\t\toldFogType = 1;\r\n\t\t\t\t\tsceneFogType = 1;\r\n\t\r\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\t\toldFogType = 2;\r\n\t\t\t\t\tsceneFogType = 2;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\t\toldFogType = 0;\r\n\t\t\t\tsceneFogType = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// update positions and sort\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\r\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsprites.sort( painterSortStable );\r\n\t\r\n\t\t\t// render all sprites\r\n\t\r\n\t\t\tvar scale = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\t\t\tvar material = sprite.material;\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\t\r\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\t\r\n\t\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\t\tscale[ 1 ] = spriteScale.y;\r\n\t\r\n\t\t\t\tvar fogType = 0;\r\n\t\r\n\t\t\t\tif ( scene.fog && material.fog ) {\r\n\t\r\n\t\t\t\t\tfogType = sceneFogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( oldFogType !== fogType ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\t\toldFogType = fogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\r\n\t\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( texture, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram () {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\r\n\t\t\tgl.shaderSource( vertexShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform float rotation;',\r\n\t\t\t\t'uniform vec2 scale;',\r\n\t\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t\t'uniform vec2 uvScale;',\r\n\t\r\n\t\t\t\t'attribute vec2 position;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\t\r\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\t\r\n\t\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\t\r\n\t\t\t\t\t'vec4 finalPosition;',\r\n\t\r\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\t\r\n\t\t\t\t\t'gl_Position = finalPosition;',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform vec3 color;',\r\n\t\t\t\t'uniform sampler2D map;',\r\n\t\t\t\t'uniform float opacity;',\r\n\t\r\n\t\t\t\t'uniform int fogType;',\r\n\t\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t\t'uniform float fogDensity;',\r\n\t\t\t\t'uniform float fogNear;',\r\n\t\t\t\t'uniform float fogFar;',\r\n\t\t\t\t'uniform float alphaTest;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\t\r\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\t\r\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\t\r\n\t\t\t\t\t'if ( fogType > 0 ) {',\r\n\t\r\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t\t'float fogFactor = 0.0;',\r\n\t\r\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\t\r\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\t\r\n\t\t\t\t\t\t'} else {',\r\n\t\r\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\t\r\n\t\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\t\r\n\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn b.id - a.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/GeometryUtils.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GeometryUtils = {\r\n\t\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\t\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( geometry ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/ImageUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n\t */\r\n\t\r\n\tTHREE.ImageUtils = {\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\t\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t}, undefined, function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\ttexture.sourceFile = url;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\t\r\n\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\tloader.load( array[ i ], function ( image ) {\r\n\t\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\t\r\n\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, undefined, onError );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTexture: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTextureCube: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMap: function ( image, depth ) {\r\n\t\r\n\t\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\t\r\n\t\t\tvar cross = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar subtract = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar normalize = function ( a ) {\r\n\t\r\n\t\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tdepth = depth | 1;\r\n\t\r\n\t\t\tvar width = image.width;\r\n\t\t\tvar height = image.height;\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0 );\r\n\t\r\n\t\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\t\tvar imageData = context.createImageData( width, height );\r\n\t\t\tvar output = imageData.data;\r\n\t\r\n\t\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\t\r\n\t\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\t\r\n\t\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\t\r\n\t\t\t\t\tvar points = [];\r\n\t\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\r\n\t\t\t\t\tvar normals = [];\r\n\t\t\t\t\tvar num_points = points.length;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\t\r\n\t\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\t\r\n\t\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 3 ] = 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcontext.putImageData( imageData, 0, 0 );\r\n\t\r\n\t\t\treturn canvas;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateDataTexture: function ( width, height, color ) {\r\n\t\r\n\t\t\tvar size = width * height;\r\n\t\t\tvar data = new Uint8Array( 3 * size );\r\n\t\r\n\t\t\tvar r = Math.floor( color.r * 255 );\r\n\t\t\tvar g = Math.floor( color.g * 255 );\r\n\t\t\tvar b = Math.floor( color.b * 255 );\r\n\t\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\t\r\n\t\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\t\tdata[ i * 3 + 2 ] = b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/SceneUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SceneUtils = {\r\n\t\r\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\t\r\n\t\t\tvar group = new THREE.Group();\r\n\t\r\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn group;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdetach: function ( child, parent, scene ) {\r\n\t\r\n\t\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\t\tparent.remove( child );\r\n\t\t\tscene.add( child );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tattach: function ( child, scene, parent ) {\r\n\t\r\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\t\tchild.applyMatrix( matrixWorldInverse );\r\n\t\r\n\t\t\tscene.remove( child );\r\n\t\t\tparent.add( child );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/FontUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For Text operations in three.js (See TextGeometry)\r\n\t *\r\n\t * It uses techniques used in:\r\n\t *\r\n\t *\tTriangulation ported from AS3\r\n\t *\t\tSimple Polygon Triangulation\r\n\t *\t\thttp://actionsnippet.com/?p=1462\r\n\t *\r\n\t * \tA Method to triangulate shapes with holes\r\n\t *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.FontUtils = {\r\n\t\r\n\t\tfaces: {},\r\n\t\r\n\t\t// Just for now. face[weight][style]\r\n\t\r\n\t\tface: 'helvetiker',\r\n\t\tweight: 'normal',\r\n\t\tstyle: 'normal',\r\n\t\tsize: 150,\r\n\t\tdivisions: 10,\r\n\t\r\n\t\tgetFace: function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\t\r\n\t\t\t} catch ( e ) {\r\n\t\r\n\t\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadFace: function ( data ) {\r\n\t\r\n\t\t\tvar family = data.familyName.toLowerCase();\r\n\t\r\n\t\t\tvar ThreeFont = this;\r\n\t\r\n\t\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdrawText: function ( text ) {\r\n\t\r\n\t\t\t// RenderText\r\n\t\r\n\t\t\tvar i,\r\n\t\t\t\tface = this.getFace(),\r\n\t\t\t\tscale = this.size / face.resolution,\r\n\t\t\t\toffset = 0,\r\n\t\t\t\tchars = String( text ).split( '' ),\r\n\t\t\t\tlength = chars.length;\r\n\t\r\n\t\t\tvar fontPaths = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tvar path = new THREE.Path();\r\n\t\r\n\t\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\t\toffset += ret.offset;\r\n\t\r\n\t\t\t\tfontPaths.push( ret.path );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// get the width\r\n\t\r\n\t\t\tvar width = offset / 2;\r\n\t\t\t//\r\n\t\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t\t//\r\n\t\t\t// \tallPts[ p ].x -= width;\r\n\t\t\t//\r\n\t\t\t// }\r\n\t\r\n\t\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t\t//extract.contour = allPts;\r\n\t\r\n\t\t\t//extract.paths = fontPaths;\r\n\t\t\t//extract.offset = width;\r\n\t\r\n\t\t\treturn { paths: fontPaths, offset: width };\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\t\r\n\t\t\tvar pts = [];\r\n\t\r\n\t\t\tvar i, i2, divisions,\r\n\t\t\t\toutline, action, length,\r\n\t\t\t\tscaleX, scaleY,\r\n\t\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\t\tlaste,\r\n\t\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\t\r\n\t\t\tif ( ! glyph ) return;\r\n\t\r\n\t\t\tif ( glyph.o ) {\r\n\t\r\n\t\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\t\tlength = outline.length;\r\n\t\r\n\t\t\t\tscaleX = scale;\r\n\t\t\t\tscaleY = scale;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < length; ) {\r\n\t\r\n\t\t\t\t\taction = outline[ i ++ ];\r\n\t\r\n\t\t\t\t\t//console.log( action );\r\n\t\r\n\t\t\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\t\t\tcase 'm':\r\n\t\r\n\t\t\t\t\t\t// Move To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'l':\r\n\t\r\n\t\t\t\t\t\t// Line To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'q':\r\n\t\r\n\t\t\t\t\t\t// QuadraticCurveTo\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'b':\r\n\t\r\n\t\t\t\t\t\t// Cubic Bezier Curve\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\t\r\n\t\t// Parameters\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\t\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\t\r\n\t\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\t\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\t\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\t\r\n\t\tTHREE.FontUtils.size = size;\r\n\t\tTHREE.FontUtils.divisions = curveSegments;\r\n\t\r\n\t\tTHREE.FontUtils.face = font;\r\n\t\tTHREE.FontUtils.weight = weight;\r\n\t\tTHREE.FontUtils.style = style;\r\n\t\r\n\t\t// Get a Font data json object\r\n\t\r\n\t\tvar data = THREE.FontUtils.drawText( text );\r\n\t\r\n\t\tvar paths = data.paths;\r\n\t\tvar shapes = [];\r\n\t\r\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This code is a quick port of code written in C++ which was submitted to\r\n\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t * See original code and more information here:\r\n\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t *\r\n\t * ported to actionscript by Zevan Rosser\r\n\t * www.actionsnippet.com\r\n\t *\r\n\t * ported to javascript by Joshua Koo\r\n\t * http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t( function ( namespace ) {\r\n\t\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t// takes in an contour array and returns\r\n\t\r\n\t\tvar process = function ( contour, indices ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\r\n\t\t\tif ( n < 3 ) return null;\r\n\t\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\t\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\t\r\n\t\t\tvar u, v, w;\r\n\t\r\n\t\t\tif ( area( contour ) > 0.0 ) {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar nv = n;\r\n\t\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\t\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\t\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\t\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\t\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\t\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\t\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\t\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\t\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\t\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\t\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\t\r\n\t\t\t\t\t/* true names of the vertices */\r\n\t\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\t\r\n\t\t\t\t\t/* output Triangle */\r\n\t\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\t\r\n\t\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\t\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\t\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\t\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnv --;\r\n\t\r\n\t\t\t\t\t/* reset error detection counter */\r\n\t\r\n\t\t\t\t\tcount = 2 * nv;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// calculate area of the contour polygon\r\n\t\r\n\t\tvar area = function ( contour ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\t\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\t\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn a * 0.5;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\t\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\t\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\t\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\t\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\t\r\n\t\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\t\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\t\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\t\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\t\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\t\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\t\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\t\r\n\t\t\t\t// see if p is inside triangle abc\r\n\t\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\t\r\n\t\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\tnamespace.Triangulate = process;\r\n\t\tnamespace.Triangulate.area = area;\r\n\t\r\n\t\treturn namespace;\r\n\t\r\n\t} )( THREE.FontUtils );\r\n\t\r\n\t// To use the typeface.js face files, hook up the API\r\n\t\r\n\tTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\n\tif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\t\r\n\t// File:src/extras/audio/Audio.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Audio = function ( listener ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Audio';\r\n\t\r\n\t\tthis.context = listener.context;\r\n\t\tthis.source = this.context.createBufferSource();\r\n\t\tthis.source.onended = this.onEnded.bind( this );\r\n\t\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\t\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\t\r\n\t\tthis.autoplay = false;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\t\r\n\tTHREE.Audio.prototype.load = function ( file ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', file, true );\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\trequest.onload = function ( e ) {\r\n\t\r\n\t\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\t\r\n\t\t\t\tscope.source.buffer = buffer;\r\n\t\r\n\t\t\t\tif ( scope.autoplay ) scope.play();\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\trequest.send();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.play = function () {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar source = this.context.createBufferSource();\r\n\t\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\tthis.isPlaying = true;\r\n\t\r\n\t\tthis.source = source;\r\n\t\r\n\t\tthis.connect();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.pause = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.stop = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.connect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.connect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.disconnect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.disconnect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.connect();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.filter = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getFilter = function () {\r\n\t\r\n\t\treturn this.filter;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\t\r\n\t\tthis.playbackRate = value;\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\t\r\n\t\treturn this.playbackRate;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.onEnded = function() {\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\t\r\n\t\tthis.source.loop = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getLoop = function () {\r\n\t\r\n\t\treturn this.source.loop;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\t\r\n\t\tthis.panner.refDistance = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRefDistance = function () {\r\n\t\r\n\t\treturn this.panner.refDistance;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\t\r\n\t\tthis.panner.rolloffFactor = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\t\r\n\t\treturn this.panner.rolloffFactor;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\t\r\n\t\tthis.gain.gain.value = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getVolume = function () {\r\n\t\r\n\t\treturn this.gain.gain.value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/audio/AudioListener.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioListener = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'AudioListener';\r\n\t\r\n\t\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\t\r\n\tTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\tvar orientation = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\t\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\t\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/core/Curve.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of Curve methods\r\n\t * .getPoint(t), getTangent(t)\r\n\t * .getPointAt(u), getTagentAt(u)\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following classes subclasses THREE.Curve:\r\n\t *\r\n\t * -- 2d classes --\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.SplineCurve\r\n\t * THREE.ArcCurve\r\n\t * THREE.EllipseCurve\r\n\t *\r\n\t * -- 3d classes --\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.SplineCurve3\r\n\t * THREE.ClosedSplineCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve = function () {\r\n\t\r\n\t};\r\n\t\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\t\r\n\t};\r\n\t\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPoint( t )\r\n\t\r\n\tTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPointAt( u )\r\n\t\r\n\tTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get total curve arc length\r\n\t\r\n\tTHREE.Curve.prototype.getLength = function () {\r\n\t\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Get list of cumulative segment lengths\r\n\t\r\n\tTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\t\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\t\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\t\r\n\t\tcache.push( 0 );\r\n\t\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\t\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheArcLengths = cache;\r\n\t\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.updateArcLengths = function() {\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\t\r\n\t};\r\n\t\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\t\r\n\tTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\t\r\n\t\tvar arcLengths = this.getLengths();\r\n\t\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\t\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\t\r\n\t\tif ( distance ) {\r\n\t\r\n\t\t\ttargetArcLength = distance;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//var time = Date.now();\r\n\t\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\t\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\t\r\n\t\twhile ( low <= high ) {\r\n\t\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\t\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\t\r\n\t\t\tif ( comparison < 0 ) {\r\n\t\r\n\t\t\t\tlow = i + 1;\r\n\t\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\t\r\n\t\t\t\thigh = i - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t// DONE\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\ti = high;\r\n\t\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\t\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\t\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\t\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\t\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\t\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\t\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\t\r\n\t\t// add that fractional amount to t\r\n\t\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\t\r\n\t\treturn t;\r\n\t\r\n\t};\r\n\t\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\t\r\n\tTHREE.Curve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\t\r\n\t\t// Capping in case of danger\r\n\t\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\t\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\t\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve.Utils = {\r\n\t\r\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Puay Bing, thanks for helping with this derivative!\r\n\t\r\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t\t3 * t * t * p3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t// To check if my formulas are correct\r\n\t\r\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\t\r\n\t\t\treturn h00 + h10 + h01 + h11;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t * t2;\r\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// TODO: Transformation for Curves?\r\n\t\r\n\t/**************************************************************\r\n\t *\t3D Curves\r\n\t **************************************************************/\r\n\t\r\n\t// A Factory method for creating new curve subclasses\r\n\t\r\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\t\r\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\t\tconstructor.prototype.constructor = constructor;\r\n\t\tconstructor.prototype.getPoint = getPointFunc;\r\n\t\r\n\t\treturn constructor;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/CurvePath.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CurvePath = function () {\r\n\t\r\n\t\tthis.curves = [];\r\n\t\tthis.bends = [];\r\n\t\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\t\r\n\tTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t\t// TODO\r\n\t\t// If the ending of curve is not connected to the starting\r\n\t\t// or the next curve, then, this is not a real path\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.closePath = function() {\r\n\t\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\t\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\t\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\t\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\t\r\n\tTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\t\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0, diff, curve;\r\n\t\r\n\t\t// To think about boundaries points.\r\n\t\r\n\t\twhile ( i < curveLengths.length ) {\r\n\t\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\t\r\n\t\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\t\tcurve = this.curves[ i ];\r\n\t\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\t\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti ++;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n\t};*/\r\n\t\r\n\t\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\t\r\n\tTHREE.CurvePath.prototype.getLength = function() {\r\n\t\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\t\r\n\tTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\t\r\n\t\t// We use cache values if curves and cache array are same length\r\n\t\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\t\r\n\t\t\treturn this.cacheLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\t\r\n\t\tvar lengths = [], sums = 0;\r\n\t\tvar i, il = this.curves.length;\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheLengths = lengths;\r\n\t\r\n\t\treturn lengths;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t// Returns min and max coordinates\r\n\t\r\n\tTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\t\r\n\t\tvar points = this.getPoints();\r\n\t\r\n\t\tvar maxX, maxY, maxZ;\r\n\t\tvar minX, minY, minZ;\r\n\t\r\n\t\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\t\tminX = minY = Number.POSITIVE_INFINITY;\r\n\t\r\n\t\tvar p, i, il, sum;\r\n\t\r\n\t\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\t\r\n\t\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\t\r\n\t\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = points[ i ];\r\n\t\r\n\t\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\t\telse if ( p.x < minX ) minX = p.x;\r\n\t\r\n\t\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\t\telse if ( p.y < minY ) minY = p.y;\r\n\t\r\n\t\t\tif ( v3 ) {\r\n\t\r\n\t\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsum.add( p );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar ret = {\r\n\t\r\n\t\t\tminX: minX,\r\n\t\t\tminY: minY,\r\n\t\t\tmaxX: maxX,\r\n\t\t\tmaxY: maxY\r\n\t\r\n\t\t};\r\n\t\r\n\t\tif ( v3 ) {\r\n\t\r\n\t\t\tret.maxZ = maxZ;\r\n\t\t\tret.minZ = minZ;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn ret;\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\t\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\t\r\n\tTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\t// Generate geometry from equidistant sampling along the path\r\n\t\r\n\tTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getSpacedPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tBend / Wrap Helper Methods\r\n\t **************************************************************/\r\n\t\r\n\t// Wrap path / Bend modifiers?\r\n\t\r\n\tTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\t\r\n\t\tthis.bends.push( bendpath );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getSpacedPoints( segments );\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// This returns getPoints() bend/wrapped around the contour of a path.\r\n\t// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\t\r\n\tTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\t\r\n\t\tvar bounds = this.getBoundingBox();\r\n\t\r\n\t\tvar i, il, p, oldX, oldY, xNorm;\r\n\t\r\n\t\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = oldPts[ i ];\r\n\t\r\n\t\t\toldX = p.x;\r\n\t\t\toldY = p.y;\r\n\t\r\n\t\t\txNorm = oldX / bounds.maxX;\r\n\t\r\n\t\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\t\r\n\t\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\t\r\n\t\t\t// check for out of bounds?\r\n\t\r\n\t\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\t\tvar normal = path.getTangent( xNorm );\r\n\t\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\t\r\n\t\t\tp.x = pathPt.x + normal.x;\r\n\t\t\tp.y = pathPt.y + normal.y;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Path.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t *\r\n\t **/\r\n\t\r\n\tTHREE.Path = function ( points ) {\r\n\t\r\n\t\tTHREE.CurvePath.call( this );\r\n\t\r\n\t\tthis.actions = [];\r\n\t\r\n\t\tif ( points ) {\r\n\t\r\n\t\t\tthis.fromPoints( points );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\tTHREE.Path.prototype.constructor = THREE.Path;\r\n\t\r\n\tTHREE.PathActions = {\r\n\t\r\n\t\tMOVE_TO: 'moveTo',\r\n\t\tLINE_TO: 'lineTo',\r\n\t\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\t\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\t\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\t\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\t\tELLIPSE: 'ellipse'\r\n\t};\r\n\t\r\n\t// TODO Clean up PATH API\r\n\t\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\t\r\n\tTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\t\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\t\r\n\t\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\t\r\n\t\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// startPath() endPath()?\r\n\t\r\n\tTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\t//---\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\t\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\t// FUTURE: Change the API or follow canvas API?\r\n\t\r\n\tTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\t THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\r\n\t };\r\n\t\r\n\t\r\n\tTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\t\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\t\r\n\t\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// if ( closedPath ) {\r\n\t\t//\r\n\t\t// \tpoints.push( points[ 0 ] );\r\n\t\t//\r\n\t\t// }\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t/* Return an array of vectors based on contour of the path */\r\n\t\r\n\tTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdivisions = divisions || 12;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tvar i, il, item, action, args;\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, j,\r\n\t\t\tt, tx, ty;\r\n\t\r\n\t\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\titem = this.actions[ i ];\r\n\t\r\n\t\t\taction = item.action;\r\n\t\t\targs = item.args;\r\n\t\r\n\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\tcase THREE.PathActions.MOVE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.LINE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\t\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\t\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\t\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\t\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\t\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ARC:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ELLIPSE:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\t\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\t\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\t\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t} // end switch\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\t\tif ( closedPath ) {\r\n\t\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// Breaks path into shapes\r\n\t//\r\n\t//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n\t//\t- solid shapes are defined clockwise (CW)\r\n\t//\t- holes are defined counterclockwise (CCW)\r\n\t//\r\n\t//\tIf parameter noHoles==true:\r\n\t//  - all subPaths are regarded as solid shapes\r\n\t//  - definition order CW/CCW has no relevance\r\n\t//\r\n\t\r\n\tTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\t\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\t\r\n\t\t\tvar i, il, item, action, args;\r\n\t\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\t\r\n\t\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\titem = inActions[ i ];\r\n\t\r\n\t\t\t\targs = item.args;\r\n\t\t\t\taction = item.action;\r\n\t\r\n\t\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\t\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.log(subPaths);\r\n\t\r\n\t\t\treturn\tsubPaths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\t\r\n\t\t\tvar shapes = [];\r\n\t\r\n\t\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\t\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\t\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\t\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\t\r\n\t\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\t\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\t\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tinside;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\t\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\t\r\n\t\tif ( subPaths.length === 1 ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\t\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\t\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\t\r\n\t\t\tif ( solid ) {\r\n\t\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\t\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\t\t\t//console.log('cw', i);\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\t\r\n\t\t\t\t//console.log('ccw', i);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tif ( newShapes.length > 1 ) {\r\n\t\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\t\r\n\t\t\t}\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\t\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tmpHoles, j, jl;\r\n\t\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Shape.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\t\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\t\r\n\tTHREE.Shape = function () {\r\n\t\r\n\t\tTHREE.Path.apply( this, arguments );\r\n\t\tthis.holes = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\tTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\t\r\n\t// Convenience method to return ExtrudeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.extrude = function ( options ) {\r\n\t\r\n\t\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\t\treturn extruded;\r\n\t\r\n\t};\r\n\t\r\n\t// Convenience method to return ShapeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\t\r\n\t\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes\r\n\t\r\n\tTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.extractAllSpacedPoints( divisions );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.extractAllPoints( divisions );\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n\t//\r\n\t// \treturn {\r\n\t//\r\n\t// \t\tshape: this.transform( bend, divisions ),\r\n\t// \t\tholes: this.getPointsHoles( divisions, bend )\r\n\t//\r\n\t// \t};\r\n\t//\r\n\t// };\r\n\t\r\n\t// Get points of shape and holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Shape.Utils = {\r\n\t\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\t\r\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\r\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\t\r\n\t\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\r\n\t\t\t\t\tvar perpSeg2;\r\n\t\t\t\t\tif ( limit > 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( perpSeg2 === limit ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\t\r\n\t\t\t\t\t// return real intersection point\r\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\t\r\n\t\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t\t// both segments are points\r\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#1  is a single point\r\n\t\t\t\t\tif ( seg1Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#2  is a single point\r\n\t\t\t\t\tif ( seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\t\tif ( seg1dx !== 0 ) {\r\n\t\r\n\t\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\r\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg2min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg1min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\r\n\t\t\t\t// The order of legs is important\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\t\r\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\t\r\n\t\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// angle != 180 deg.\r\n\t\r\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\t\r\n\t\t\t\t\tif ( from2toAngle > 0 ) {\r\n\t\r\n\t\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfunction removeHoles( contour, holes ) {\r\n\t\r\n\t\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\t\tvar hole;\r\n\t\r\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\r\n\t\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\t\r\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\t\r\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\t\r\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\t\r\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar indepHoles = [];\r\n\t\r\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\t\tshapePt, holePt,\r\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\t\ttmpHole1, tmpHole2;\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tindepHoles.push( h );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar minShapeIndex = 0;\r\n\t\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\r\n\t\t\t\t\tcounter --;\r\n\t\t\t\t\tif ( counter < 0 ) {\r\n\t\r\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t\t// which can be connected without intersections\r\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\t\r\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\t\tholeIndex\t= - 1;\r\n\t\r\n\t\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\t\r\n\t\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\t\r\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\t\r\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\t\r\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\t\r\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar i, il, f, face,\r\n\t\t\t\tkey, index,\r\n\t\t\t\tallPointsMap = {};\r\n\t\r\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\t\r\n\t\t\tvar allpoints = contour.concat();\r\n\t\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\t\r\n\t\t\t// prepare all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\t\r\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tallPointsMap[ key ] = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\t\r\n\t\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\t\r\n\t\t\t// check all face vertices against all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = triangles[ i ];\r\n\t\r\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\t\r\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\t\r\n\t\t\t\t\tindex = allPointsMap[ key ];\r\n\t\r\n\t\t\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tface[ f ] = index;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn triangles.concat();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisClockWise: function ( pts ) {\r\n\t\r\n\t\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Bezier Curves formulas obtained from\r\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\t\r\n\t\t// Quad Bezier Functions\r\n\t\r\n\t\tb2p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p1: function ( t, p ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p2: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Cubic Bezier Functions\r\n\t\r\n\t\tb3p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p1: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p2: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p3: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/LineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve = function ( v1, v2 ) {\r\n\t\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\t\r\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar point = this.v2.clone().sub( this.v1 );\r\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\t\r\n\t\treturn point;\r\n\t\r\n\t};\r\n\t\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\t\r\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\treturn this.getPoint( u );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\t\r\n\t\treturn tangent.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\t// returns unit vector\r\n\t\r\n\t\treturn vector.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\treturn new THREE.Vector2( tx, ty );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\tvar tangent = new THREE.Vector2( tx, ty );\r\n\t\ttangent.normalize();\r\n\t\r\n\t\treturn tangent;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/SplineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\t\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\t\r\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\t\r\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/EllipseCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tEllipse curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\t\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\t\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\t\r\n\t\tthis.aClockwise = aClockwise;\r\n\t\t\r\n\t\tthis.aRotation = aRotation || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\t\r\n\tTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\r\n\t\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\t\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\t\r\n\t\tvar angle;\r\n\t\r\n\t\tif ( this.aClockwise === true ) {\r\n\t\r\n\t\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\t\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\t\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\t\r\n\t\t\tvar tx = x, ty = y;\r\n\t\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.Vector2( x, y );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/ArcCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tArc curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\t\r\n\t// File:src/extras/curves/LineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine3D\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v1, v2 ) {\r\n\t\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\t\tvector.multiplyScalar( t );\r\n\t\t\tvector.add( this.v1 );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/SplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.SplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\t\tvar point1 = points[ intPoint ];\r\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CatmullRomCurve3.js\r\n\t\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\t\r\n\tTHREE.CatmullRomCurve3 = ( function() {\r\n\t\r\n\t\tvar\r\n\t\t\ttmp = new THREE.Vector3(),\r\n\t\t\tpx = new CubicPoly(),\r\n\t\t\tpy = new CubicPoly(),\r\n\t\t\tpz = new CubicPoly();\r\n\t\r\n\t\t/*\r\n\t\tBased on an optimized c++ solution in\r\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t\t - http://ideone.com/NoEbVM\r\n\t\r\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\t\twhich can be placed in CurveUtils.\r\n\t\t*/\r\n\t\r\n\t\tfunction CubicPoly() {\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\t\r\n\t\t\tthis.c0 = x0;\r\n\t\t\tthis.c1 = t0;\r\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\t\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\t\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\t\r\n\t\t\t// initCubicPoly\r\n\t\t\tthis.init( x1, x2, t1, t2 );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\t\r\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.calc = function( t ) {\r\n\t\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t2 * t;\r\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Subclass Three.js curve\r\n\t\treturn THREE.Curve.create(\r\n\t\r\n\t\t\tfunction ( p /* array of Vector3 */ ) {\r\n\t\r\n\t\t\t\tthis.points = p || [];\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction ( t ) {\r\n\t\r\n\t\t\t\tvar points = this.points,\r\n\t\t\t\t\tpoint, intPoint, weight, l;\r\n\t\r\n\t\t\t\tl = points.length;\r\n\t\r\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\t\r\n\t\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\t\r\n\t\t\t\t\tintPoint = l - 2;\r\n\t\t\t\t\tweight = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar p0, p1, p2, p3;\r\n\t\r\n\t\t\t\tif ( intPoint === 0 ) {\r\n\t\r\n\t\t\t\t\t// extrapolate first point\r\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\t\tp0 = tmp;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tp1 = points[ intPoint ];\r\n\t\t\t\tp2 = points[ intPoint + 1 ];\r\n\t\r\n\t\t\t\tif ( intPoint + 2 < l ) {\r\n\t\r\n\t\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// extrapolate last point\r\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\t\tp3 = tmp;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\t\r\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\t\r\n\t\t\t\t\t// safety check for repeated points\r\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\t\r\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\t\r\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\t\r\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\t\tpx.calc( weight ),\r\n\t\t\t\t\tpy.calc( weight ),\r\n\t\t\t\t\tpz.calc( weight )\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\treturn v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t);\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/curves/ClosedSplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tClosed Spline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\t\r\n\t\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/animation/AnimationHandler.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\tTHREE.AnimationHandler = {\r\n\t\r\n\t\tLINEAR: 0,\r\n\t\tCATMULLROM: 1,\r\n\t\tCATMULLROM_FORWARD: 2,\r\n\t\r\n\t\t//\r\n\t\r\n\t\tadd: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tget: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tremove: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t//\r\n\t\r\n\t\tanimations: [],\r\n\t\r\n\t\tinit: function ( data ) {\r\n\t\r\n\t\t\tif ( data.initialized === true ) return data;\r\n\t\r\n\t\t\t// loop through all keys\r\n\t\r\n\t\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t// remove minus times\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\t\r\n\t\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// create quaternions\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\t\r\n\t\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// prepare morph target keys\r\n\t\r\n\t\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\t// get all used\r\n\t\r\n\t\t\t\t\tvar usedMorphTargets = {};\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\t\r\n\t\r\n\t\t\t\t\t// set all used on all frames\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar influences = {};\r\n\t\r\n\t\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// remove all keys that are on the same time\r\n\t\r\n\t\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\t\tk --;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// set index\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.initialized = true;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( root ) {\r\n\t\r\n\t\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\t\r\n\t\t\t\thierarchy.push( root );\r\n\t\r\n\t\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// setup hierarchy\r\n\t\r\n\t\t\tvar hierarchy = [];\r\n\t\r\n\t\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\t\r\n\t\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn hierarchy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplay: function ( animation ) {\r\n\t\r\n\t\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.push( animation );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function ( animation ) {\r\n\t\r\n\t\t\tvar index = this.animations.indexOf( animation );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( deltaTimeMS ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/Animation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Animation = function ( root, data ) {\r\n\t\r\n\t\tthis.root = root;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\t\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 1;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.loop = true;\r\n\t\tthis.weight = 0;\r\n\t\r\n\t\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Animation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Animation,\r\n\t\r\n\t\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\t\r\n\t\tplay: function ( startTime, weight ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\tthis.reset();\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function() {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treset: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( object.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\t\tanimations: {},\r\n\t\t\t\t\t\tblending: {\r\n\t\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar name = this.data.name;\r\n\t\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\t\tvar animationCache = animations[ name ];\r\n\t\r\n\t\t\t\tif ( animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tanimationCache = {\r\n\t\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tanimations[ name ] = animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Get keys to match our current time\r\n\t\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\tvar type = this.keyTypes[ t ];\r\n\t\r\n\t\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tresetBlendWeights: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache;\r\n\t\r\n\t\t\t\tif ( animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar blending = animationCache.blending;\r\n\t\r\n\t\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\t\tblending.scaleWeight = 0.0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: ( function() {\r\n\t\r\n\t\t\tvar points = [];\r\n\t\t\tvar target = new THREE.Vector3();\r\n\t\t\tvar newVector = new THREE.Vector3();\r\n\t\t\tvar newQuat = new THREE.Quaternion();\r\n\t\r\n\t\t\t// Catmull-Rom spline\r\n\t\r\n\t\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\t\r\n\t\t\t\tvar c = [], v3 = [],\r\n\t\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\t\tpa, pb, pc, pd;\r\n\t\r\n\t\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\t\tc[ 1 ] = intPoint;\r\n\t\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\t\r\n\t\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\t\tpd = points[ c[ 3 ] ];\r\n\t\r\n\t\t\t\tw2 = weight * weight;\r\n\t\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\t\r\n\t\t\t\treturn v3;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function ( delta ) {\r\n\t\r\n\t\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t\tif ( this.weight === 0 )\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\t\r\n\t\t\t\t\tif ( this.loop ) {\r\n\t\r\n\t\t\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\t\tthis.currentTime += duration;\r\n\t\r\n\t\t\t\t\t\tthis.reset();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tthis.stop();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\t\tvar blending = object.animationCache.blending;\r\n\t\r\n\t\t\t\t\t// loop through pos/rot/scl\r\n\t\r\n\t\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t// get keys\r\n\t\r\n\t\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\t\r\n\t\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\t\r\n\t\t\t\t\t\t// interpolate\r\n\t\r\n\t\t\t\t\t\tif ( type === \"pos\" ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\t\r\n\t\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\t\r\n\t\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\r\n\t\t\t\t\t\t\t\tvar vector = object.position;\r\n\t\r\n\t\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\t\r\n\t\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\t\r\n\t\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\t\ttarget.normalize();\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\t\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\t\r\n\t\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\t\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\tgetNextKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key > 0 ? key : 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/KeyFrameAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author khang duong\r\n\t * @author erik kitson\r\n\t */\r\n\t\r\n\tTHREE.KeyFrameAnimation = function ( data ) {\r\n\t\r\n\t\tthis.root = data.node;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 0.001;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused = true;\r\n\t\tthis.loop = true;\r\n\t\r\n\t\t// initialize to first keyframes\r\n\t\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\t\tobj = this.hierarchy[ h ];\r\n\t\r\n\t\t\tif ( keys.length && sids ) {\r\n\t\r\n\t\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\t\r\n\t\t\t\t\tif ( next ) {\r\n\t\r\n\t\t\t\t\t\tnext.apply( sid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyFrameAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.KeyFrameAnimation,\r\n\t\r\n\t\tplay: function ( startTime ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) {\r\n\t\r\n\t\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\t\t// reset key cache\r\n\t\r\n\t\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tnode;\r\n\t\r\n\t\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\t\tif ( node.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\t\r\n\t\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.update( 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.isPaused = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\tthis.isPaused  = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t\t// reset JIT matrix and remove cache\r\n\t\r\n\t\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( node.animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\t\r\n\t\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\t\tobj.matrix = original;\r\n\t\r\n\t\t\t\t\tdelete node.animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tvar keys = node.keys,\r\n\t\t\t\t\tanimationCache = node.animationCache;\r\n\t\r\n\t\r\n\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\t\r\n\t\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNextKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/MorphAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com\r\n\t * @author willy-vvu / http://willy-vvu.github.io\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimation = function ( mesh ) {\r\n\t\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.frames = mesh.morphTargetInfluences.length;\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.duration = 1000;\r\n\t\tthis.loop = true;\r\n\t\tthis.lastFrame = 0;\r\n\t\tthis.currentFrame = 0;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MorphAnimation,\r\n\t\r\n\t\tplay: function () {\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpause: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= this.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\t\r\n\t\t\tvar frameTime = this.duration / this.frames;\r\n\t\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\t\r\n\t\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( frame !== this.currentFrame ) {\r\n\t\r\n\t\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\t\tinfluences[ frame ] = 0;\r\n\t\r\n\t\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\t\tthis.currentFrame = frame;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\t\r\n\t\t\tinfluences[ frame ] = mix;\r\n\t\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/BoxGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n\t */\r\n\t\r\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'BoxGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\t\r\n\t\tthis.widthSegments = widthSegments || 1;\r\n\t\tthis.heightSegments = heightSegments || 1;\r\n\t\tthis.depthSegments = depthSegments || 1;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\tvar depth_half = depth / 2;\r\n\t\r\n\t\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\t\r\n\t\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\t\r\n\t\t\tvar w, ix, iy,\r\n\t\t\tgridX = scope.widthSegments,\r\n\t\t\tgridY = scope.heightSegments,\r\n\t\t\twidth_half = width / 2,\r\n\t\t\theight_half = height / 2,\r\n\t\t\toffset = scope.vertices.length;\r\n\t\r\n\t\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'z';\r\n\t\r\n\t\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'y';\r\n\t\t\t\tgridY = scope.depthSegments;\r\n\t\r\n\t\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\t\r\n\t\t\t\tw = 'x';\r\n\t\t\t\tgridX = scope.depthSegments;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gridX1 = gridX + 1,\r\n\t\t\tgridY1 = gridY + 1,\r\n\t\t\tsegment_width = width / gridX,\r\n\t\t\tsegment_height = height / gridY,\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\r\n\t\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\t\tvector[ w ] = depth;\r\n\t\r\n\t\t\t\t\tscope.vertices.push( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\t\r\n\t\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\t\r\n\tTHREE.BoxGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.BoxGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.depth,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.depthSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\t\r\n\t// File:src/extras/geometries/CircleGeometry.js\r\n\t\r\n\t/**\r\n\t * @author hughes\r\n\t */\r\n\t\r\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar i, uvs = [],\r\n\t\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\t\r\n\t\tthis.vertices.push( center );\r\n\t\tuvs.push( centerUV );\r\n\t\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\t\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\t\r\n\tTHREE.CircleGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CircleBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar vertices = segments + 2;\r\n\t\r\n\t\tvar positions = new Float32Array( vertices * 3 );\r\n\t\tvar normals = new Float32Array( vertices * 3 );\r\n\t\tvar uvs = new Float32Array( vertices * 2 );\r\n\t\r\n\t\t// center data is already zero, but need to set a few extras\r\n\t\tnormals[ 3 ] = 1.0;\r\n\t\tuvs[ 0 ] = 0.5;\r\n\t\tuvs[ 1 ] = 0.5;\r\n\t\r\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\t\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\t\r\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\t\r\n\t\t\tnormals[ i + 2 ] = 1; // normal z\r\n\t\r\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tindices.push( i );\r\n\t\t\tindices.push( i + 1 );\r\n\t\t\tindices.push( 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CylinderGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CylinderGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\t\theight = height !== undefined ? height : 100;\r\n\t\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\theightSegments = heightSegments || 1;\r\n\t\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\t\r\n\t\tvar heightHalf = height / 2;\r\n\t\r\n\t\tvar x, y, vertices = [], uvs = [];\r\n\t\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\t\tvar uvsRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\t\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\t\tuvs.push( uvsRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\t\tvar na, nb;\r\n\t\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\tif ( radiusTop !== 0 ) {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\t\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\t\r\n\t\t\t\tvar n1 = na.clone();\r\n\t\t\t\tvar n2 = na.clone();\r\n\t\t\t\tvar n3 = nb.clone();\r\n\t\t\t\tvar n4 = nb.clone();\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// top cap\r\n\t\r\n\t\tif ( openEnded === false && radiusTop > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// bottom cap\r\n\t\r\n\t\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\t\r\n\tTHREE.CylinderGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry(\r\n\t\t\tthis.parameters.radiusTop,\r\n\t\t\tthis.parameters.radiusBottom,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.openEnded,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/EdgesGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\t\r\n\t\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tvar geometry2;\r\n\t\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tgeometry2 = new THREE.Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tgeometry2 = geometry.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\t\r\n\t\tvar vertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thash[ key ].face2 = i;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar coords = [];\r\n\t\r\n\t\tfor ( var key in hash ) {\r\n\t\r\n\t\t\tvar h = hash[ key ];\r\n\t\r\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\t\r\n\t// File:src/extras/geometries/ExtrudeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  amount: <int>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n\t *\r\n\t *  uvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\r\n\t\t\tshapes = [];\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\t\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t// can't really use automatic vertex normals\r\n\t\t// as then front and back sides get smoothed too\r\n\t\t// should do separate smoothing just for sides\r\n\t\r\n\t\t//this.computeVertexNormals();\r\n\t\r\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tvar sl = shapes.length;\r\n\t\r\n\t\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\tvar shape = shapes[ s ];\r\n\t\t\tthis.addShape( shape, options );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\t\r\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\r\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\t\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\r\n\t\tvar extrudePath = options.extrudePath;\r\n\t\tvar extrudePts, extrudeByPath = false;\r\n\t\r\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\t\r\n\t\tvar splineTube, binormal, normal, position2;\r\n\t\tif ( extrudePath ) {\r\n\t\r\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\t\r\n\t\t\textrudeByPath = true;\r\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\r\n\t\t\t// SETUP TNB variables\r\n\t\r\n\t\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t\t// TODO1 - have a .isClosed in spline?\r\n\t\r\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\t\r\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\t\r\n\t\t\tbinormal = new THREE.Vector3();\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\t\tposition2 = new THREE.Vector3();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Safeguards if bevels are not enabled\r\n\t\r\n\t\tif ( ! bevelEnabled ) {\r\n\t\r\n\t\t\tbevelSegments = 0;\r\n\t\t\tbevelThickness = 0;\r\n\t\t\tbevelSize = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Variables initialization\r\n\t\r\n\t\tvar ahole, h, hl; // looping of holes\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\t\r\n\t\t/* Vertices */\r\n\t\r\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\tvertices = vertices.concat( ahole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction scalePt2 ( pt, vec, size ) {\r\n\t\r\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\t\r\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar b, bs, t, z,\r\n\t\t\tvert, vlen = vertices.length,\r\n\t\t\tface, flen = faces.length;\r\n\t\r\n\t\r\n\t\t// Find directions for point movement\r\n\t\r\n\t\r\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t//\r\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\r\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\t\r\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\t\r\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\r\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\r\n\t\t\t// check for collinear edges\r\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\t\r\n\t\t\t\t// not collinear\r\n\t\r\n\t\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\r\n\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\r\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\r\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// handle special case of collinear edges\r\n\t\r\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( direction_eq ) {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar contourMovements = [];\r\n\t\r\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\t// console.log('i,j,k', i, j , k)\r\n\t\r\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\toneHoleMovements = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\t\r\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t\r\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\r\n\t\t\t//z = bevelThickness * t;\r\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t\t//bs = bevelSize * t; // linear\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tbs = bevelSize;\r\n\t\r\n\t\t// Back facing vertices\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\tv( vert.x, vert.y, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\r\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Add stepped vertices...\r\n\t\t// Including front facing vertices\r\n\t\r\n\t\tvar s;\r\n\t\r\n\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Add bevel segments planes\r\n\t\r\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/* Faces */\r\n\t\r\n\t\t// Top and bottom faces\r\n\t\r\n\t\tbuildLidFaces();\r\n\t\r\n\t\t// Sides faces\r\n\t\r\n\t\tbuildSideFaces();\r\n\t\r\n\t\r\n\t\t/////  Internal functions\r\n\t\r\n\t\tfunction buildLidFaces() {\r\n\t\r\n\t\t\tif ( bevelEnabled ) {\r\n\t\r\n\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\tvar offset = vlen * layer;\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\toffset = vlen * layer;\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Create faces for the z-sides of the shape\r\n\t\r\n\t\tfunction buildSideFaces() {\r\n\t\r\n\t\t\tvar layeroffset = 0;\r\n\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\tlayeroffset += contour.length;\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\tsidewalls( ahole, layeroffset );\r\n\t\r\n\t\t\t\t//, true\r\n\t\t\t\tlayeroffset += ahole.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction sidewalls( contour, layeroffset ) {\r\n\t\r\n\t\t\tvar j, k;\r\n\t\t\ti = contour.length;\r\n\t\r\n\t\t\twhile ( -- i >= 0 ) {\r\n\t\r\n\t\t\t\tj = i;\r\n\t\t\t\tk = i - 1;\r\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\t\r\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\t\r\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\t\r\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\t\r\n\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\r\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction v( x, y, z ) {\r\n\t\r\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f3( a, b, c ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\t\td += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\t\r\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t\t];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\t\tvar d = vertices[ indexD ];\r\n\t\r\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ShapeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t *\r\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n\t * ExtrudeGeometry.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n\t *\r\n\t *\tmaterial: <int> // material index for front and back faces\r\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ShapeGeometry';\r\n\t\r\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\t\r\n\t/**\r\n\t * Add an array of shapes to THREE.ShapeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.addShape( shapes[ i ], options );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tif ( options === undefined ) options = {};\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar material = options.material;\r\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar i, l, hole;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\t\r\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\thole = holes[ i ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ i ] = hole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t// Vertices\r\n\t\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\thole = holes[ i ];\r\n\t\t\tvertices = vertices.concat( hole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar vert, vlen = vertices.length;\r\n\t\tvar face, flen = faces.length;\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = vertices[ i ];\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\tface = faces[ i ];\r\n\t\r\n\t\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\t\tvar c = face[ 2 ] + shapesOffset;\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/LatheGeometry.js\r\n\t\r\n\t/**\r\n\t * @author astrodud / http://astrodud.isgreat.org/\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\t// points - to create a closed torus, one must use a set of points \r\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n\t// segments - the number of circumference segments to create\r\n\t// phiStart - the starting radian\r\n\t// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n\t//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\t\r\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'LatheGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || 2 * Math.PI;\r\n\t\r\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\t\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\t\r\n\t\t\tvar c = Math.cos( phi ),\r\n\t\t\t\ts = Math.sin( phi );\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar pt = points[ j ];\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\t\tvertex.z = pt.z;\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar np = points.length;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar base = j + np * i;\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + np;\r\n\t\t\t\tvar c = base + 1 + np;\r\n\t\t\t\tvar d = base + 1;\r\n\t\r\n\t\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\t\tvar v1 = v0 + inversePointLength;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\t\r\n\t// File:src/extras/geometries/PlaneGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\t\r\n\tTHREE.PlaneGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\t\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\t\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\t\r\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\t\r\n\t\tvar offset = 0;\r\n\t\tvar offset2 = 0;\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\t\r\n\t\t\t\tvertices[ offset ] = x;\r\n\t\t\t\tvertices[ offset + 1 ] = - y;\r\n\t\r\n\t\t\t\tnormals[ offset + 2 ] = 1;\r\n\t\r\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\t\r\n\t\t\t\toffset += 3;\r\n\t\t\t\toffset2 += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\toffset = 0;\r\n\t\r\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\tindices[ offset ] = a;\r\n\t\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\t\tindices[ offset + 2 ] = d;\r\n\t\r\n\t\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\t\tindices[ offset + 5 ] = d;\r\n\t\r\n\t\t\t\toffset += 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/RingGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t */\r\n\t\r\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'RingGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tinnerRadius = innerRadius || 0;\r\n\t\touterRadius = outerRadius || 50;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\t\r\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tradius += radiusStep;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar segment = o + thetaSegment;\r\n\t\r\n\t\t\t\tvar v1 = segment;\r\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t\tv1 = segment;\r\n\t\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\t\tv3 = segment + 1;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\t\r\n\tTHREE.RingGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.RingGeometry(\r\n\t\t\tthis.parameters.innerRadius,\r\n\t\t\tthis.parameters.outerRadius,\r\n\t\t\tthis.parameters.thetaSegments,\r\n\t\t\tthis.parameters.phiSegments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\t\r\n\tTHREE.SphereGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * based on THREE.SphereGeometry\r\n\t */\r\n\t\r\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\t\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\t\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\t\r\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\t\r\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\r\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / widthSegments;\r\n\t\r\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\r\n\t\t\t\tnormal.set( px, py, pz ).normalize();\r\n\t\r\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\t\r\n\t\t\t\tverticesRow.push( index );\r\n\t\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\t\r\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', positions );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TextGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For creating 3D text geometry in three.js\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  size: \t\t\t<float>, \t// size of the text\r\n\t *  height: \t\t<float>, \t// thickness to extrude text\r\n\t *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n\t *\r\n\t *  font: \t\t\t<string>,\t\t// font name\r\n\t *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n\t *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n\t *\r\n\t *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n\t *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n\t *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n\t *  }\r\n\t *\r\n\t */\r\n\t\r\n\t/*\tUsage Examples\r\n\t\r\n\t\t// TextGeometry wrapper\r\n\t\r\n\t\tvar text3d = new TextGeometry( text, options );\r\n\t\r\n\t\t// Complete manner\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\t\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\t\r\n\t*/\r\n\t\r\n\t\r\n\tTHREE.TextGeometry = function ( text, parameters ) {\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\t\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\t\r\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\t\r\n\t\t// defaults\r\n\t\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\t\r\n\t\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\t\r\n\t\tthis.type = 'TextGeometry';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\n\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n\t */\r\n\t\r\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\ttubularSegments = tubularSegments || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\t\r\n\t\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\t\r\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\t\r\n\tTHREE.TorusGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.arc\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TorusKnotGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n\t */\r\n\t\r\n\tTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q,\r\n\t\t\theightScale: heightScale\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 64;\r\n\t\ttubularSegments = tubularSegments || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\t\theightScale = heightScale || 1;\r\n\t\r\n\t\tvar grid = new Array( radialSegments );\r\n\t\tvar tang = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\t\tvar bitan = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\t\ttang.subVectors( p2, p1 );\r\n\t\t\tn.addVectors( p2, p1 );\r\n\t\r\n\t\t\tbitan.crossVectors( tang, n );\r\n\t\t\tn.crossVectors( bitan, tang );\r\n\t\t\tbitan.normalize();\r\n\t\t\tn.normalize();\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\t\r\n\t\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\t\tvar d = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\t\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = in_q / in_p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\t\r\n\t\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\t\r\n\t\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.p,\r\n\t\t\tthis.parameters.q,\r\n\t\t\tthis.parameters.heightScale\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TubeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t *\r\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n\t *\r\n\t * Creates a tube which extrudes along a 3d spline\r\n\t *\r\n\t * Uses parallel transport frames as described in\r\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t */\r\n\t\r\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TubeGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\tsegments: segments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\t\r\n\t\tvar grid = [];\r\n\t\r\n\t\tvar scope = this,\r\n\t\r\n\t\t\ttangent,\r\n\t\t\tnormal,\r\n\t\t\tbinormal,\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\r\n\t\t\tu, v, r,\r\n\t\r\n\t\t\tcx, cy,\r\n\t\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\t\ti, j,\r\n\t\t\tip, jp,\r\n\t\t\ta, b, c, d,\r\n\t\t\tuva, uvb, uvc, uvd;\r\n\t\r\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\t\ttangents = frames.tangents,\r\n\t\t\tnormals = frames.normals,\r\n\t\t\tbinormals = frames.binormals;\r\n\t\r\n\t\t// proxy internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\tfunction vert( x, y, z ) {\r\n\t\r\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// construct the grid\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tgrid[ i ] = [];\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\tpos = path.getPointAt( u );\r\n\t\r\n\t\t\ttangent = tangents[ i ];\r\n\t\t\tnormal = normals[ i ];\r\n\t\t\tbinormal = binormals[ i ];\r\n\t\r\n\t\t\tr = radius * taper( u );\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\t\r\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tcy = r * Math.sin( v );\r\n\t\r\n\t\t\t\tpos2.copy( pos );\r\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// construct the mesh\r\n\t\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\t\r\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\t\tb = grid[ ip ][ j ];\r\n\t\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\t\td = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\t\r\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\t\r\n\t\treturn 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\t\r\n\t\treturn Math.sin( Math.PI * u );\r\n\t\r\n\t};\r\n\t\r\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\t\r\n\t\tvar\tnormal = new THREE.Vector3(),\r\n\t\r\n\t\t\ttangents = [],\r\n\t\t\tnormals = [],\r\n\t\t\tbinormals = [],\r\n\t\r\n\t\t\tvec = new THREE.Vector3(),\r\n\t\t\tmat = new THREE.Matrix4(),\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\t\ttheta,\r\n\t\t\tepsilon = 0.0001,\r\n\t\t\tsmallest,\r\n\t\r\n\t\t\ttx, ty, tz,\r\n\t\t\ti, u;\r\n\t\r\n\t\r\n\t\t// expose internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\t// compute the tangent vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\t\ttangents[ i ].normalize();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinitialNormal3();\r\n\t\r\n\t\t/*\r\n\t\tfunction initialNormal1(lastBinormal) {\r\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\t}\r\n\t\r\n\t\tfunction initialNormal2() {\r\n\t\r\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\t\tvar t2 = path.getTangentAt( epsilon );\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t\tfunction initialNormal3() {\r\n\t\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the smallest tangent xyz component\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tsmallest = Number.MAX_VALUE;\r\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\t\r\n\t\t\tif ( tx <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ty <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tz <= smallest ) {\r\n\t\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\t\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\t\r\n\t\t\tif ( vec.length() > epsilon ) {\r\n\t\r\n\t\t\t\tvec.normalize();\r\n\t\r\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\t\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\t\r\n\t\tif ( closed ) {\r\n\t\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\t\ttheta /= ( numpoints - 1 );\r\n\t\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\t\r\n\t\t\t\ttheta = - theta;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PolyhedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\t\r\n\t\tvar that = this;\r\n\t\r\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar p = this.vertices;\r\n\t\r\n\t\tvar faces = [];\r\n\t\r\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\t\r\n\t\t\tvar v1 = p[ indices[ i ] ];\r\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\t\r\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar centroid = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsubdivide( faces[ i ], detail );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Handle case when face straddles the seam\r\n\t\r\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\tvar x0 = uvs[ 0 ].x;\r\n\t\t\tvar x1 = uvs[ 1 ].x;\r\n\t\t\tvar x2 = uvs[ 2 ].x;\r\n\t\r\n\t\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\t\r\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\t\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\t\r\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Apply radius\r\n\t\r\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Merge vertices\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t\r\n\t\t// Project vector onto sphere's surface\r\n\t\r\n\t\tfunction prepare( vector ) {\r\n\t\r\n\t\t\tvar vertex = vector.normalize().clone();\r\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\t\r\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\t\r\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\t\r\n\t\t\treturn vertex;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Approximate a curved face with recursively sub-divided triangles.\r\n\t\r\n\t\tfunction make( v1, v2, v3, materialIndex ) {\r\n\t\r\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\t\tthat.faces.push( face );\r\n\t\r\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\t\r\n\t\t\tvar azi = azimuth( centroid );\r\n\t\r\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t\t] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Analytically subdivide a face to the required detail level.\r\n\t\r\n\t\tfunction subdivide( face, detail ) {\r\n\t\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\t\tvar v = [];\r\n\t\r\n\t\t\tvar materialIndex = face.materialIndex;\r\n\t\r\n\t\t\t// Construct all of the vertices for this subdivision.\r\n\t\r\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\t\r\n\t\t\t\tv[ i ] = [];\r\n\t\r\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar rows = cols - i;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\t\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Construct all of the faces.\r\n\t\r\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\t\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\t\r\n\t\tfunction azimuth( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle above the XZ plane.\r\n\t\r\n\t\tfunction inclination( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\t\r\n\t\tfunction correctUV( uv, vector, azimuth ) {\r\n\t\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\t\treturn uv.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\t\tthis.parameters.vertices,\r\n\t\t\tthis.parameters.indices,\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\treturn geometry.copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/DodecahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t */\r\n\t\r\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\t\r\n\t\tvar vertices = [\r\n\t\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t\t 1,  1, - 1,     1,  1,  1,\r\n\t\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t\t 0,  r, - t,     0,  r,  t,\r\n\t\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t\t r, - t,  0,     r,  t,  0,\r\n\t\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t\t- t,  0,  r,     t,  0,  r\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/IcosahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/OctahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TetrahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ParametricGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t *\r\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ParametricGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\t\r\n\t\tvar verts = this.vertices;\r\n\t\tvar faces = this.faces;\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\t\r\n\t\tvar i, j, p;\r\n\t\tvar u, v;\r\n\t\r\n\t\tvar sliceCount = slices + 1;\r\n\t\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\t\r\n\t\t\tv = i / stacks;\r\n\t\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\t\r\n\t\t\t\tu = j / slices;\r\n\t\r\n\t\t\t\tp = func( u, v );\r\n\t\t\t\tverts.push( p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar a, b, c, d;\r\n\t\tvar uva, uvb, uvc, uvd;\r\n\t\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\t\r\n\t\t\t\ta = i * sliceCount + j;\r\n\t\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// console.log(this);\r\n\t\r\n\t\t// magic bullet\r\n\t\t// var diff = this.mergeVertices();\r\n\t\t// console.log('removed ', diff, ' vertices by merging');\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\t\r\n\t// File:src/extras/geometries/WireframeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeGeometry = function ( geometry ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\t\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tif ( geometry.index !== null ) {\r\n\t\r\n\t\t\t\t// Indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar indices = geometry.index.array;\r\n\t\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t\tif ( drawcalls.length === 0 ) {\r\n\t\r\n\t\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// allocate maximal size\r\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\t\r\n\t\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\t\r\n\t\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\t\r\n\t\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\t\tvar count = drawcall.count;\r\n\t\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\t\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\t\tvar numTris = numEdges / 3;\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\t\r\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\t\r\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\t\r\n\t// File:src/extras/helpers/AxisHelper.js\r\n\t\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AxisHelper = function ( size ) {\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t0, 0, 0,  size, 0, 0,\r\n\t\t\t0, 0, 0,  0, size, 0,\r\n\t\t\t0, 0, 0,  0, 0, size\r\n\t\t] );\r\n\t\r\n\t\tvar colors = new Float32Array( [\r\n\t\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t\t0, 0, 1,  0, 0.6, 1\r\n\t\t] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\t\r\n\t// File:src/extras/helpers/ArrowHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\t\r\n\tTHREE.ArrowHelper = ( function () {\r\n\t\r\n\t\tvar lineGeometry = new THREE.Geometry();\r\n\t\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\t\r\n\t\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\t\r\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\t\tif ( length === undefined ) length = 1;\r\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\t\tthis.position.copy( origin );\r\n\t\t\t\r\n\t\t\tif ( headLength < length ) {\r\n\t\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\t\tthis.add( this.line );\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.cone );\r\n\t\r\n\t\t\tthis.setDirection( dir );\r\n\t\t\tthis.setLength( length, headLength, headWidth );\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\t\r\n\t\tvar axis = new THREE.Vector3();\r\n\t\tvar radians;\r\n\t\r\n\t\treturn function setDirection( dir ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\t\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\t\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\t\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\tif ( headLength < length ){\r\n\t\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\t\tthis.line.updateMatrix();\r\n\t\t}\r\n\t\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\t\r\n\t\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/BoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BoxHelper = function ( object ) {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\t\r\n\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\tthis.update( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\t\r\n\tTHREE.BoxHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\treturn function ( object ) {\r\n\t\r\n\t\t\tbox.setFromObject( object );\r\n\t\r\n\t\t\tif ( box.empty() ) return;\r\n\t\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\t\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\t\r\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\r\n\t\t}\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/helpers/BoundingBoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\t// a helper to show the world-axis-aligned bounding box for an object\r\n\t\r\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.box = new THREE.Box3();\r\n\t\r\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.box.setFromObject( this.object );\r\n\t\r\n\t\tthis.box.size( this.scale );\r\n\t\r\n\t\tthis.box.center( this.position );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/CameraHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\t\r\n\tTHREE.CameraHelper = function ( camera ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\t\r\n\t\tvar pointMap = {};\r\n\t\r\n\t\t// colors\r\n\t\r\n\t\tvar hexFrustum = 0xffaa00;\r\n\t\tvar hexCone = 0xff0000;\r\n\t\tvar hexUp = 0x00aaff;\r\n\t\tvar hexTarget = 0xffffff;\r\n\t\tvar hexCross = 0x333333;\r\n\t\r\n\t\t// near\r\n\t\r\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\t\r\n\t\t// far\r\n\t\r\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\t\r\n\t\t// sides\r\n\t\r\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\t\r\n\t\t// cone\r\n\t\r\n\t\taddLine( \"p\", \"n1\", hexCone );\r\n\t\taddLine( \"p\", \"n2\", hexCone );\r\n\t\taddLine( \"p\", \"n3\", hexCone );\r\n\t\taddLine( \"p\", \"n4\", hexCone );\r\n\t\r\n\t\t// up\r\n\t\r\n\t\taddLine( \"u1\", \"u2\", hexUp );\r\n\t\taddLine( \"u2\", \"u3\", hexUp );\r\n\t\taddLine( \"u3\", \"u1\", hexUp );\r\n\t\r\n\t\t// target\r\n\t\r\n\t\taddLine( \"c\", \"t\", hexTarget );\r\n\t\taddLine( \"p\", \"c\", hexCross );\r\n\t\r\n\t\t// cross\r\n\t\r\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\t\r\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\t\r\n\t\tfunction addLine( a, b, hex ) {\r\n\t\r\n\t\t\taddPoint( a, hex );\r\n\t\t\taddPoint( b, hex );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction addPoint( id, hex ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\t\r\n\t\t\t\tpointMap[ id ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.pointMap = pointMap;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\t\r\n\tTHREE.CameraHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry, pointMap;\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar camera = new THREE.Camera();\r\n\t\r\n\t\tvar setPoint = function ( point, x, y, z ) {\r\n\t\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\t\r\n\t\t\tvar points = pointMap[ point ];\r\n\t\r\n\t\t\tif ( points !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\t\r\n\t\t\tvar w = 1, h = 1;\r\n\t\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\t\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\t\r\n\t\t\t// center / target\r\n\t\r\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\t\r\n\t\t\t// near\r\n\t\r\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\t\r\n\t\t\t// far\r\n\t\r\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\t\r\n\t\t\t// up\r\n\t\r\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\t\r\n\t\t\t// cross\r\n\t\r\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\t\r\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\t\r\n\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/DirectionalLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t\t);\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\t\r\n\t\tgeometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t);\r\n\t\r\n\t\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.targetLine = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar v3 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\t\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/EdgesHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @param object THREE.Mesh whose geometry will be used\r\n\t * @param hex line color\r\n\t * @param thresholdAngle the minimum angle (in degrees),\r\n\t * between the face normals of adjacent faces,\r\n\t * that is required to render an edge. A value of 10 means\r\n\t * an edge is only rendered if the angle is at least 10 degrees.\r\n\t */\r\n\t\r\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\t\r\n\t// File:src/extras/helpers/FaceNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\tvar idx = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/GridHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GridHelper = function ( size, step ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tthis.color1 = new THREE.Color( 0x444444 );\r\n\t\tthis.color2 = new THREE.Color( 0x888888 );\r\n\t\r\n\t\tfor ( var i = - size; i <= size; i += step ) {\r\n\t\r\n\t\t\tgeometry.vertices.push(\r\n\t\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t\t);\r\n\t\r\n\t\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\t\r\n\t\t\tgeometry.colors.push( color, color, color, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\t\r\n\tTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\t\r\n\t\tthis.color1.set( colorCenterLine );\r\n\t\tthis.color2.set( colorGrid );\r\n\t\r\n\t\tthis.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/HemisphereLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\t\r\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.lightSphere );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightSphere.geometry.dispose();\r\n\t\tthis.lightSphere.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/PointLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\r\n\t\tvar d = light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\t\r\n\tTHREE.PointLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SkeletonHelper.js\r\n\t\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkeletonHelper = function ( object ) {\r\n\t\r\n\t\tthis.bones = this.getBoneList( object );\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.dynamic = true;\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.root = object;\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\t\r\n\t\tvar boneList = [];\r\n\t\r\n\t\tif ( object instanceof THREE.Bone ) {\r\n\t\r\n\t\t\tboneList.push( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\t\r\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn boneList;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\t\r\n\t\tvar boneMatrix = new THREE.Matrix4();\r\n\t\r\n\t\tvar j = 0;\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tj += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SpotLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.SpotLightHelper = function ( light ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\t\r\n\t\tgeometry.translate( 0, - 0.5, 0 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\r\n\t\tthis.cone = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar vector2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\t\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\t\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\t\r\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/VertexNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\t\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.attributes.normal.count\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\t\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\t\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\t\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\t\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/WireframeHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\t\r\n\t// File:src/extras/objects/ImmediateRenderObject.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.ImmediateRenderObject = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.render = function ( renderCallback ) {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\t\r\n\t// File:src/extras/objects/MorphBlendMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\t\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\t\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\t\r\n\t\tvar name = \"__default\";\r\n\t\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\t\r\n\t\tvar fps = numFrames / 1;\r\n\t\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\t\r\n\t\tvar animation = {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\r\n\t\t\tlength: end - start + 1,\r\n\t\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\t\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\t\r\n\t\t\tactive: false,\r\n\t\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\t\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\t\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\t\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var name in frameRanges ) {\r\n\t\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.weight = weight;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = time;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\t\r\n\t\tvar time = 0;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\ttime = animation.time;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn time;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\t\r\n\t\tvar duration = - 1;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tduration = animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn duration;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.active = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\t\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\t\r\n\t\t\tif ( ! animation.active ) continue;\r\n\t\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\t\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\t\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\t\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\t\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\t\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\t\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\t\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\t\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Export the THREE object for **Node.js**, with\r\n\t// backwards-compatibility for the old `require()` API. If we're in\r\n\t// the browser, add `_` as a global object via a string identifier,\r\n\t// for Closure Compiler \"advanced\" mode.\r\n\tif (true) {\r\n\t  if (typeof module !== 'undefined' && module.exports) {\r\n\t    exports = module.exports = THREE;\r\n\t  }\r\n\t  exports.THREE = THREE;\r\n\t} else {\r\n\t  this['THREE'] = THREE;\r\n\t}\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// react-bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 10a36f4d8d08b189b5a9","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n  <App />\n, document.getElementById('react-app'));\n\n\n\n// WEBPACK FOOTER //\n// ./react/app.js","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 1\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar getVendorPropertyName = require('./getVendorPropertyName');\n\nmodule.exports = function(target, sources) {\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  var prefixed = {};\n  for (var key in to) {\n    prefixed[getVendorPropertyName(key)] = to[key]\n  }\n\n  return prefixed\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/appendVendorPrefix.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar insertRule = require('./insertRule');\nvar vendorPrefix = require('./getVendorPrefix')();\nvar index = 0;\n\nmodule.exports = function(keyframes) {\n  // random name\n  var name = 'anim_' + (++index) + (+new Date);\n  var css = \"@\" + vendorPrefix + \"keyframes \" + name + \" {\";\n\n  for (var key in keyframes) {\n    css += key + \" {\";\n\n    for (var property in keyframes[key]) {\n      var part = \":\" + keyframes[key][property] + \";\";\n      // We do vendor prefix for every property\n      css += vendorPrefix + property + part;\n      css += property + part;\n    }\n\n    css += \"}\";\n  }\n\n  css += \"}\";\n\n  insertRule(css);\n\n  return name\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/insertKeyframesRule.js\n// module id = 4\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 6\n// module chunks = 0","import React, { Component } from 'react';\nimport STLViewer from '../../src/STLViewer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      color: '#FF0000'\n    }\n\n    this.clickBlue = this.clickBlue.bind(this)\n    this.clickRed = this.clickRed.bind(this)\n  }\n\n  clickBlue(e) {\n    e.preventDefault()\n    this.setState({ color: '#0000FF' })\n  }\n\n  clickRed(e) {\n    e.preventDefault()\n    this.setState({ color: '#FF0000' })\n  }\n\n  render() {\n    return (\n      <div>\n        <STLViewer url=\"dist/static/crazy-thing.stl\" modelColor={this.state.color}/>\n        <button onClick={this.clickRed}>red</button>\n        <button onClick={this.clickBlue}>blue</button>\n      </div>\n      );\n}\n};\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./react/containers/App.js","import THREE from './Three';\nimport ReactDOM from 'react-dom';\nlet OrbitControls = require('three-orbit-controls')(THREE);\n\nconst DIRECTIONAL_LIGHT = 'directionalLight';\n\nclass Paint {\n  init(context) {\n    this.clean();\n\n    this.loader = new THREE.STLLoader();\n    this.scene = new THREE.Scene();\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    this.meshes = [];\n    this.bedMesh = null;\n    this.initialBox = new THREE.Box3();\n    this.reqNumber = 0;\n\n    this.component = context;\n    this.urls = context.props.urls;\n    this.width = context.props.width;\n    this.height = context.props.height;\n    this.modelColor = context.props.modelColors;\n    this.backgroundColor = context.props.backgroundColor;\n    this.orbitControls = context.props.orbitControls;\n    this.rotate = context.props.rotate;\n    this.cameraX = context.props.cameraX;\n    this.cameraY = context.props.cameraY;\n    this.cameraZ = context.props.cameraZ;\n    this.rotationSpeeds = context.props.rotationSpeeds;\n    this.lightX = context.props.lightX;\n    this.lightY = context.props.lightY;\n    this.lightZ = context.props.lightZ;\n    this.lightColor = context.props.lightColor;\n\n    //Detector.addGetWebGLMessage();\n    this.distance = 10000;\n\n    let directionalLight = new THREE.DirectionalLight(this.lightColor);\n    directionalLight.position.x = this.lightX;\n    directionalLight.position.y = this.lightY;\n    directionalLight.position.z = this.lightZ;\n    directionalLight.position.normalize();\n    directionalLight.name = DIRECTIONAL_LIGHT;\n\n    let directionalLight2 = new THREE.DirectionalLight(this.lightColor);\n    directionalLight2.position.x = -this.lightX;\n    directionalLight2.position.y = -this.lightY;\n    directionalLight2.position.z = this.lightZ;\n    directionalLight2.position.normalize();\n    directionalLight2.name = DIRECTIONAL_LIGHT + '2';\n\n    this.scene.add(directionalLight);\n    this.scene.add(directionalLight2);\n\n    this.reqNumber += 1;\n    this.addSTLToScene(this.reqNumber);\n  }\n\n  addSTLToScene(reqId) {\n    this.loader.crossOrigin = '';\n    let promises = [];\n    this.urls.forEach((url, index) => {\n      promises.push(this.addSTLPromise(url, reqId, index));\n    });\n\n    Promise.all(promises).then(resolvedArray => {\n      resolvedArray.forEach(mesh => {\n        // Set the object's dimensions\n        mesh.geometry.computeBoundingBox();\n\n        if (this.rotate) {\n          mesh.rotation.x = this.rotationSpeeds[0];\n          mesh.rotation.y = this.rotationSpeeds[1];\n          mesh.rotation.z = this.rotationSpeeds[2];\n        }\n\n        this.meshes.push(mesh);\n        this.initialBox =\n          (this.initialBox &&\n            this.initialBox.union(mesh.geometry.boundingBox)) ||\n          mesh.geometry.boundingBox;\n      });\n\n      let centerVector = new THREE.Vector3();\n      this.initialBox.center(centerVector);\n\n      this.meshes.forEach(mesh => {\n        mesh.geometry.translate(\n          -centerVector.x,\n          -centerVector.y,\n          -centerVector.z\n        );\n        this.scene.add(mesh);\n      });\n\n      this.bedMesh = new THREE.Mesh(\n        new THREE.CubeGeometry(250, 250, 1),\n        new THREE.MeshBasicMaterial({\n          color: '#999999',\n          transparent: true,\n          opacity: 0.5\n        })\n      );\n\n      this.xDims = this.initialBox.max.x - this.initialBox.min.x;\n      this.yDims = this.initialBox.max.y - this.initialBox.min.y;\n      this.zDims = this.initialBox.max.z - this.initialBox.min.z;\n\n      this.bedMesh.geometry.center();\n      this.bedMesh.geometry.translate(0, 0, -this.zDims / 2 - 0.5);\n\n      this.scene.add(this.bedMesh);\n\n      this.addCamera();\n      this.addInteractionControls();\n      this.addToReactComponent();\n\n      // Start the animation\n      this.animate();\n    });\n  }\n\n  addSTLPromise(url, reqId, index) {\n    return new Promise((resolve, reject) => {\n      this.loader.load(url, geometry => {\n        if (this.reqNumber !== reqId) {\n          return;\n        }\n        // Calculate mesh noramls for MeshLambertMaterial.\n        geometry.computeFaceNormals();\n        geometry.computeVertexNormals();\n\n        // Center the object\n        // geometry.center();\n\n        const mesh = new THREE.Mesh(\n          geometry,\n          new THREE.MeshLambertMaterial({\n            overdraw: true,\n            color: this.modelColor[index % this.modelColor.length]\n          })\n        );\n\n        resolve(mesh);\n      });\n    });\n  }\n\n  addCamera() {\n    // Add the camera\n    this.camera = new THREE.PerspectiveCamera(\n      30,\n      this.width / this.height,\n      1,\n      this.distance\n    );\n\n    if (this.cameraZ === null) {\n      this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n    }\n\n    this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\n    this.scene.add(this.camera);\n\n    this.camera.lookAt(this.meshes[0]);\n\n    this.renderer.set;\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(this.backgroundColor, 1);\n  }\n\n  addInteractionControls() {\n    // Add controls for mouse interaction\n    if (this.orbitControls) {\n      this.controls = new OrbitControls(\n        this.camera,\n        ReactDOM.findDOMNode(this.component)\n      );\n      this.controls.enableKeys = true;\n      this.controls.addEventListener('change', this.orbitRender.bind(this));\n    }\n  }\n\n  addToReactComponent() {\n    // Add to the React Component\n    ReactDOM.findDOMNode(this.component).replaceChild(\n      this.renderer.domElement,\n      ReactDOM.findDOMNode(this.component).firstChild\n    );\n  }\n\n  /**\n   * Animate the scene\n   * @returns {void}\n   */\n  animate() {\n    // note: three.js includes requestAnimationFrame shim\n    if (this.rotate) {\n      this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n    }\n\n    if (this.orbitControls) {\n      this.controls.update();\n    }\n    this.render();\n  }\n\n  /**\n   * Render the scene after turning off the rotation\n   * @returns {void}\n   */\n  orbitRender() {\n    if (this.rotate) {\n      this.rotate = false;\n    }\n\n    this.render();\n  }\n\n  /**\n   * Deallocate Mesh, renderer context.\n   * @returns {void}\n   */\n  clean() {\n    if (typeof this.meshes === typeof []) {\n      this.meshes.forEach(mesh => {\n        if (this.scene) {\n          this.scene.remove(mesh);\n        }\n        mesh.geometry.dispose();\n        mesh.material.dispose();\n      });\n      this.meshes = [];\n    }\n\n    if (this.bedMesh) {\n      if (this.scene) {\n        this.scene.remove(this.bedMesh);\n      }\n      this.bedMesh.geometry.dispose();\n      this.bedMesh.material.dispose();\n      this.bedMesh = null;\n    }\n\n    if (this.scene) {\n      const directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n      if (directionalLightObj) {\n        this.scene.remove(directionalLightObj);\n      }\n      const directionalLightObj2 = this.scene.getObjectByName(\n        DIRECTIONAL_LIGHT + '2'\n      );\n      if (directionalLightObj2) {\n        this.scene.remove(directionalLightObj2);\n      }\n    }\n\n    if (this.animationRequestId) {\n      cancelAnimationFrame(this.animationRequestId);\n    }\n\n    if (this.renderer) {\n      this.renderer.dispose();\n      this.renderer.forceContextLoss();\n    }\n  }\n\n  /**\n   * Render the scene\n   * @returns {void}\n   */\n  render() {\n    if (typeof this.meshes === typeof [] && this.rotate) {\n      this.meshes.forEach(mesh => {\n        mesh.rotation.x += this.rotationSpeeds[0];\n        mesh.rotation.y += this.rotationSpeeds[1];\n        mesh.rotation.z += this.rotationSpeeds[2];\n      });\n    }\n\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\nexport default Paint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Paint.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScaleLoader } from 'halogenium';\nimport Paint from './Paint';\n\nclass STLViewer extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    urls: PropTypes.arrayOf(PropTypes.string),\n    width: PropTypes.number,\n    height: PropTypes.number,\n    backgroundColor: PropTypes.string,\n    modelColors: PropTypes.arrayOf(PropTypes.string),\n    rotate: PropTypes.bool,\n    orbitControls: PropTypes.bool,\n    cameraX: PropTypes.number,\n    cameraY: PropTypes.number,\n    cameraZ: PropTypes.number,\n    lightX: PropTypes.number,\n    lightY: PropTypes.number,\n    lightZ: PropTypes.number,\n    lightColor: PropTypes.string,\n    rotationSpeeds: PropTypes.arrayOf(PropTypes.number)\n  };\n\n  static defaultProps = {\n    backgroundColor: '#EAEAEA',\n    modelColors: ['#FF0000', '#00FF00'],\n    height: 400,\n    width: 400,\n    rotate: true,\n    orbitControls: true,\n    cameraX: 0,\n    cameraY: 0,\n    cameraZ: null,\n    lightX: 0,\n    lightY: -1,\n    lightZ: 1,\n    lightColor: '#ffffff',\n    rotationSpeeds: [0, 0, 0.02]\n  };\n\n  componentDidMount() {\n    this.paint = new Paint();\n    this.paint.init(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return JSON.stringify(nextProps) !== JSON.stringify(this.props);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    this.props = nextProps;\n    this.paint.init(this);\n  }\n\n  componentWillUnmount() {\n    this.paint.clean();\n    delete this.paint;\n  }\n\n  render() {\n    const { width, height, modelColors } = this.props;\n\n    return (\n      <div\n        className={this.props.className}\n        style={{\n          width: width,\n          height: height,\n          overflow: 'hidden'\n        }}\n      >\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }}\n        >\n          <ScaleLoader color={modelColors[0]} size=\"16px\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nmodule.exports = STLViewer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/STLViewer.js","var THREE = require('three');\n\n\n//\n// STL Loader added\n//\n/**\n * @author aleeper / http://adamleeper.com/\n * @author mrdoob / http://mrdoob.com/\n * @author gero3 / https://github.com/gero3\n *\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n *\n * Supports both binary and ASCII encoded files, with automatic detection of type.\n *\n * Limitations:\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\n *\n * Usage:\n *  var loader = new THREE.STLLoader();\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n *    scene.add( new THREE.Mesh( geometry ) );\n *  });\n *\n * For binary STLs geometry might contain colors for vertices. To use it:\n *  // use the same code to load STL as above\n *  if (geometry.hasColors) {\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n *  } else { .... }\n *  var mesh = new THREE.Mesh( geometry, material );\n */\n\n\nTHREE.STLLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.STLLoader.prototype = {\n\n\tconstructor: THREE.STLLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setResponseType('arraybuffer');\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\t\n\tparse: function ( data ) {\n\n\t\tvar isBinary = function () {\n\n\t\t\tvar expect, face_size, n_faces, reader;\n\t\t\treader = new DataView( binData );\n\t\t\tface_size = (32 / 8 * 3) + ((32 / 8 * 3) * 3) + (16 / 8);\n\t\t\tn_faces = reader.getUint32(80, true);\n\t\t\texpect = 80 + (32 / 8) + (n_faces * face_size);\n\t\t\t\n\t\t\tif ( expect === reader.byteLength ) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\n\t\t\t// some binary files will have different size from expected,\n\t\t\t// checking characters higher than ASCII to confirm is binary\n\t\t\tvar fileLength = reader.byteLength;\n\t\t\tfor ( var index = 0; index < fileLength; index ++ ) {\n\n\t\t\t\tif ( reader.getUint8(index, false) > 127 ) {\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t\tvar binData = this.ensureBinary( data );\n\n\t\treturn isBinary()\n\t\t\t? this.parseBinary( binData )\n\t\t\t: this.parseASCII( this.ensureString( data ) );\n\n\t},\n\n\tparseBinary: function ( data ) {\n\n\t\tvar reader = new DataView( data );\n\t\tvar faces = reader.getUint32( 80, true );\n\n\t\tvar r, g, b, hasColors = false, colors;\n\t\tvar defaultR, defaultG, defaultB, alpha;\n\n\t\t// process STL header\n\t\t// check for default color in header (\"COLOR=rgba\" sequence).\n\n\t\tfor ( var index = 0; index < 80 - 10; index ++ ) {\n\n\t\t\tif ((reader.getUint32(index, false) == 0x434F4C4F /*COLO*/) &&\n\t\t\t\t(reader.getUint8(index + 4) == 0x52 /*'R'*/) &&\n\t\t\t\t(reader.getUint8(index + 5) == 0x3D /*'='*/)) {\n\n\t\t\t\thasColors = true;\n\t\t\t\tcolors = new Float32Array( faces * 3 * 3);\n\n\t\t\t\tdefaultR = reader.getUint8(index + 6) / 255;\n\t\t\t\tdefaultG = reader.getUint8(index + 7) / 255;\n\t\t\t\tdefaultB = reader.getUint8(index + 8) / 255;\n\t\t\t\talpha = reader.getUint8(index + 9) / 255;\n\t\t\t}\n\t\t}\n\n\t\tvar dataOffset = 84;\n\t\tvar faceLength = 12 * 4 + 2;\n\n\t\tvar offset = 0;\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tvar vertices = new Float32Array( faces * 3 * 3 );\n\t\tvar normals = new Float32Array( faces * 3 * 3 );\n\n\t\tfor ( var face = 0; face < faces; face ++ ) {\n\n\t\t\tvar start = dataOffset + face * faceLength;\n\t\t\tvar normalX = reader.getFloat32(start, true);\n\t\t\tvar normalY = reader.getFloat32(start + 4, true);\n\t\t\tvar normalZ = reader.getFloat32(start + 8, true);\n\n\t\t\tif (hasColors) {\n\n\t\t\t\tvar packedColor = reader.getUint16(start + 48, true);\n\n\t\t\t\tif ((packedColor & 0x8000) === 0) { // facet has its own unique color\n\n\t\t\t\t\tr = (packedColor & 0x1F) / 31;\n\t\t\t\t\tg = ((packedColor >> 5) & 0x1F) / 31;\n\t\t\t\t\tb = ((packedColor >> 10) & 0x1F) / 31;\n\t\t\t\t} else {\n\n\t\t\t\t\tr = defaultR;\n\t\t\t\t\tg = defaultG;\n\t\t\t\t\tb = defaultB;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( var i = 1; i <= 3; i ++ ) {\n\n\t\t\t\tvar vertexstart = start + i * 12;\n\n\t\t\t\tvertices[ offset     ] = reader.getFloat32( vertexstart, true );\n\t\t\t\tvertices[ offset + 1 ] = reader.getFloat32( vertexstart + 4, true );\n\t\t\t\tvertices[ offset + 2 ] = reader.getFloat32( vertexstart + 8, true );\n\n\t\t\t\tnormals[ offset     ] = normalX;\n\t\t\t\tnormals[ offset + 1 ] = normalY;\n\t\t\t\tnormals[ offset + 2 ] = normalZ;\n\n\t\t\t\tif (hasColors) {\n\t\t\t\t\tcolors[ offset     ] = r;\n\t\t\t\t\tcolors[ offset + 1 ] = g;\n\t\t\t\t\tcolors[ offset + 2 ] = b;\n\t\t\t\t}\n\n\t\t\t\toffset += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\n\t\tif (hasColors) {\n\t\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\t\t\tgeometry.hasColors = true;\n\t\t\tgeometry.alpha = alpha;\n\t\t}\n\n\t\treturn geometry;\n\n\t},\n\n\tparseASCII: function ( data ) {\n\n\t\tvar geometry, length, normal, patternFace, patternNormal, patternVertex, result, text;\n\t\tgeometry = new THREE.Geometry();\n\t\tpatternFace = /facet([\\s\\S]*?)endfacet/g;\n\n\t\twhile ( ( result = patternFace.exec( data ) ) !== null ) {\n\n\t\t\ttext = result[0];\n\t\t\tpatternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n\t\t\twhile ( ( result = patternNormal.exec( text ) ) !== null ) {\n\n\t\t\t\tnormal = new THREE.Vector3( parseFloat( result[ 1 ] ), parseFloat( result[ 3 ] ), parseFloat( result[ 5 ] ) );\n\n\t\t\t}\n\n\t\t\tpatternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n\t\t\twhile ( ( result = patternVertex.exec( text ) ) !== null ) {\n\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3( parseFloat( result[ 1 ] ), parseFloat( result[ 3 ] ), parseFloat( result[ 5 ] ) ) );\n\n\t\t\t}\n\n\t\t\tlength = geometry.vertices.length;\n\n\t\t\tgeometry.faces.push( new THREE.Face3( length - 3, length - 2, length - 1, normal ) );\n\n\t\t}\n\n\t\tgeometry.computeBoundingBox();\n\t\tgeometry.computeBoundingSphere();\n\n\t\treturn geometry;\n\n\t},\n\n\tensureString: function ( buf ) {\n\n\t\tif (typeof buf !== \"string\") {\n\t\t\tvar array_buffer = new Uint8Array(buf);\n\t\t\tvar str = '';\n\t\t\tfor (var i = 0; i < buf.byteLength; i ++) {\n\t\t\t\tstr += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n\t\t\t}\n\t\t\treturn str;\n\t\t} else {\n\t\t\treturn buf;\n\t\t}\n\n\t},\n\n\tensureBinary: function ( buf ) {\n\n\t\tif (typeof buf === \"string\") {\n\t\t\tvar array_buffer = new Uint8Array(buf.length);\n\t\t\tfor (var i = 0; i < buf.length; i ++) {\n\t\t\t\tarray_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n\t\t\t}\n\t\t\treturn array_buffer.buffer || array_buffer;\n\t\t} else {\n\t\t\treturn buf;\n\t\t}\n\t\t\n\t}\n\n};\n\nif ( typeof DataView === 'undefined') {\n\n\tDataView = function(buffer, byteOffset, byteLength) {\n\n\t\tthis.buffer = buffer;\n\t\tthis.byteOffset = byteOffset || 0;\n\t\tthis.byteLength = byteLength || buffer.byteLength || buffer.length;\n\t\tthis._isString = typeof buffer === \"string\";\n\n\t}\n\n\tDataView.prototype = {\n\n\t\t_getCharCodes:function(buffer,start,length) {\n\t\t\tstart = start || 0;\n\t\t\tlength = length || buffer.length;\n\t\t\tvar end = start + length;\n\t\t\tvar codes = [];\n\t\t\tfor (var i = start; i < end; i ++) {\n\t\t\t\tcodes.push(buffer.charCodeAt(i) & 0xff);\n\t\t\t}\n\t\t\treturn codes;\n\t\t},\n\n\t\t_getBytes: function (length, byteOffset, littleEndian) {\n\n\t\t\tvar result;\n\n\t\t\t// Handle the lack of endianness\n\t\t\tif (littleEndian === undefined) {\n\n\t\t\t\tlittleEndian = this._littleEndian;\n\n\t\t\t}\n\n\t\t\t// Handle the lack of byteOffset\n\t\t\tif (byteOffset === undefined) {\n\n\t\t\t\tbyteOffset = this.byteOffset;\n\n\t\t\t} else {\n\n\t\t\t\tbyteOffset = this.byteOffset + byteOffset;\n\n\t\t\t}\n\n\t\t\tif (length === undefined) {\n\n\t\t\t\tlength = this.byteLength - byteOffset;\n\n\t\t\t}\n\n\t\t\t// Error Checking\n\t\t\tif (typeof byteOffset !== 'number') {\n\n\t\t\t\tthrow new TypeError('DataView byteOffset is not a number');\n\n\t\t\t}\n\n\t\t\tif (length < 0 || byteOffset + length > this.byteLength) {\n\n\t\t\t\tthrow new Error('DataView length or (byteOffset+length) value is out of bounds');\n\n\t\t\t}\n\n\t\t\tif (this.isString) {\n\n\t\t\t\tresult = this._getCharCodes(this.buffer, byteOffset, byteOffset + length);\n\n\t\t\t} else {\n\n\t\t\t\tresult = this.buffer.slice(byteOffset, byteOffset + length);\n\n\t\t\t}\n\n\t\t\tif (!littleEndian && length > 1) {\n\n\t\t\t\tif (!(result instanceof Array)) {\n\n\t\t\t\t\tresult = Array.prototype.slice.call(result);\n\n\t\t\t\t}\n\n\t\t\t\tresult.reverse();\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Compatibility functions on a String Buffer\n\n\t\tgetFloat64: function (byteOffset, littleEndian) {\n\n\t\t\tvar b = this._getBytes(8, byteOffset, littleEndian),\n\n\t\t\t\tsign = 1 - (2 * (b[7] >> 7)),\n\t\t\t\texponent = ((((b[7] << 1) & 0xff) << 3) | (b[6] >> 4)) - ((1 << 10) - 1),\n\n\t\t\t// Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n\t\t\t\tmantissa = ((b[6] & 0x0f) * Math.pow(2, 48)) + (b[5] * Math.pow(2, 40)) + (b[4] * Math.pow(2, 32)) +\n\t\t\t\t\t\t\t(b[3] * Math.pow(2, 24)) + (b[2] * Math.pow(2, 16)) + (b[1] * Math.pow(2, 8)) + b[0];\n\n\t\t\tif (exponent === 1024) {\n\t\t\t\tif (mantissa !== 0) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t} else {\n\t\t\t\t\treturn sign * Infinity;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (exponent === -1023) { // Denormalized\n\t\t\t\treturn sign * mantissa * Math.pow(2, -1022 - 52);\n\t\t\t}\n\n\t\t\treturn sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\n\n\t\t},\n\n\t\tgetFloat32: function (byteOffset, littleEndian) {\n\n\t\t\tvar b = this._getBytes(4, byteOffset, littleEndian),\n\n\t\t\t\tsign = 1 - (2 * (b[3] >> 7)),\n\t\t\t\texponent = (((b[3] << 1) & 0xff) | (b[2] >> 7)) - 127,\n\t\t\t\tmantissa = ((b[2] & 0x7f) << 16) | (b[1] << 8) | b[0];\n\n\t\t\tif (exponent === 128) {\n\t\t\t\tif (mantissa !== 0) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t} else {\n\t\t\t\t\treturn sign * Infinity;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (exponent === -127) { // Denormalized\n\t\t\t\treturn sign * mantissa * Math.pow(2, -126 - 23);\n\t\t\t}\n\n\t\t\treturn sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\n\t\t},\n\n\t\tgetInt32: function (byteOffset, littleEndian) {\n\t\t\tvar b = this._getBytes(4, byteOffset, littleEndian);\n\t\t\treturn (b[3] << 24) | (b[2] << 16) | (b[1] << 8) | b[0];\n\t\t},\n\n\t\tgetUint32: function (byteOffset, littleEndian) {\n\t\t\treturn this.getInt32(byteOffset, littleEndian) >>> 0;\n\t\t},\n\n\t\tgetInt16: function (byteOffset, littleEndian) {\n\t\t\treturn (this.getUint16(byteOffset, littleEndian) << 16) >> 16;\n\t\t},\n\n\t\tgetUint16: function (byteOffset, littleEndian) {\n\t\t\tvar b = this._getBytes(2, byteOffset, littleEndian);\n\t\t\treturn (b[1] << 8) | b[0];\n\t\t},\n\n\t\tgetInt8: function (byteOffset) {\n\t\t\treturn (this.getUint8(byteOffset) << 24) >> 24;\n\t\t},\n\n\t\tgetUint8: function (byteOffset) {\n\t\t\treturn this._getBytes(1, byteOffset)[0];\n\t\t}\n\n\t };\n\n}\n\nmodule.exports = THREE;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Three.js","'use strict';\n\nmodule.exports = document.createElement('div').style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/builtinStyle.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nvar cssVendorPrefix;\n\nmodule.exports = function() {\n\n  if (cssVendorPrefix) return cssVendorPrefix;\n\n  var styles = window.getComputedStyle(document.documentElement, '');\n  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o']))[1];\n\n  return cssVendorPrefix = '-' + pre + '-';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/getVendorPrefix.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nvar builtinStyle = require('./builtinStyle');\nvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nvar domVendorPrefix;\n\n// Helper function to get the proper vendor property name. (transition => WebkitTransition)\nmodule.exports = function(prop, isSupportTest) {\n\n  var vendorProp;\n  if (prop in builtinStyle) return prop;\n\n  var UpperProp = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n  if (domVendorPrefix) {\n\n    vendorProp = domVendorPrefix + UpperProp;\n    if (vendorProp in builtinStyle) {\n      return vendorProp;\n    }\n  } else {\n\n    for (var i = 0; i < prefixes.length; ++i) {\n      vendorProp = prefixes[i] + UpperProp;\n      if (vendorProp in builtinStyle) {\n        domVendorPrefix = prefixes[i];\n        return vendorProp;\n      }\n    }\n  }\n\n  // if support test, not fallback to origin prop name\n  if (!isSupportTest) {\n    return prop;\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/getVendorPropertyName.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nvar extraSheet;\n\nmodule.exports = function(css) {\n\n  if (!extraSheet) {\n    // First time, create an extra stylesheet for adding rules\n    extraSheet = document.createElement('style');\n    document.getElementsByTagName('head')[0].appendChild(extraSheet);\n    // Keep reference to actual StyleSheet object (`styleSheet` for IE < 9)\n    extraSheet = extraSheet.sheet || extraSheet.styleSheet;\n  }\n\n  var index = (extraSheet.cssRules || extraSheet.rules).length;\n  extraSheet.insertRule(css, index);\n\n  return extraSheet;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/insertRule.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '50%': {\n    transform: 'scale(0.75)',\n    opacity: 0.2\n  },\n  '100%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n};\n\nvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar BeatLoader = function (_Component) {\n  _inherits(BeatLoader, _Component);\n\n  function BeatLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BeatLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BeatLoader.__proto__ || Object.getPrototypeOf(BeatLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.7s', (i % 2 ? 0 : 0.35) + 's', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(BeatLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: this.getStyle(1) }),\n          _react2.default.createElement('div', { style: this.getStyle(2) }),\n          _react2.default.createElement('div', { style: this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return BeatLoader;\n}(_react.Component);\n\nBeatLoader.propTypes = propTypes;\nBeatLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = BeatLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=BeatLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/BeatLoader.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar keyframes = {\n  '0%, 100%': {\n    transform: 'scale(0)'\n  },\n  '50%': {\n    transform: 'scale(1.0)'\n  }\n};\n\nvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar BounceLoader = function (_Component) {\n  _inherits(BounceLoader, _Component);\n\n  function BounceLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BounceLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BounceLoader.__proto__ || Object.getPrototypeOf(BounceLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        borderRadius: '100%',\n        opacity: 0.6,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '2s', i === 1 ? '1s' : '0s', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)({\n        width: _this.props.size,\n        height: _this.props.size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(BounceLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle() },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return BounceLoader;\n}(_react.Component);\n\nBounceLoader.propTypes = propTypes;\nBounceLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px'\n};\nexports.default = BounceLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=BounceLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/BounceLoader.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'rotate(0deg) scale(1)'\n  },\n  '50%': {\n    transform: 'rotate(180deg) scale(0.8)'\n  },\n  '100%': {\n    transform: 'rotate(360deg) scale(1)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar ClipLoader = function (_Component) {\n  _inherits(ClipLoader, _Component);\n\n  function ClipLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ClipLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ClipLoader.__proto__ || Object.getPrototypeOf(ClipLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        width: _this.props.size,\n        height: _this.props.size,\n        border: '2px solid',\n        borderColor: _this.props.color,\n        borderBottomColor: 'transparent',\n        borderRadius: '100%',\n        background: 'transparent !important',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '0.75s', '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getBallStyle(i), _this.getAnimationStyle(), {\n        display: 'inline-block'\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(ClipLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: this.getStyle() })\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return ClipLoader;\n}(_react.Component);\n\nClipLoader.propTypes = propTypes;\nClipLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '35px'\n};\nexports.default = ClipLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=ClipLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/ClipLoader.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar rotateKeyframes = {\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var bounceKeyframes = {\n  '0%, 100%': {\n    transform: 'scale(0)'\n  },\n  '50%': {\n    transform: 'scale(1.0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var rotateAnimationName = (0, _insertKeyframesRule2.default)(rotateKeyframes);\n\n/**\n * @type {String}\n */\nvar bounceAnimationName = (0, _insertKeyframesRule2.default)(bounceKeyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar DotLoader = function (_Component) {\n  _inherits(DotLoader, _Component);\n\n  function DotLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, DotLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DotLoader.__proto__ || Object.getPrototypeOf(DotLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n      return {\n        backgroundColor: _this.props.color,\n        width: size,\n        height: size,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i === 0 ? rotateAnimationName : bounceAnimationName, '2s', i === 2 ? '-1s' : '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'forwards';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = _this.props.size | 0;\n      var ballSize = size / 2;\n\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(ballSize), _this.getAnimationStyle(i), {\n          position: 'absolute',\n          top: i % 2 ? 0 : 'auto',\n          bottom: i % 2 ? 'auto' : 0,\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getAnimationStyle(i), {\n        width: size,\n        height: size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(DotLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle(0) },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return DotLoader;\n}(_react.Component);\n\nDotLoader.propTypes = propTypes;\nDotLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = DotLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=DotLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/DotLoader.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '50%': {\n    opacity: 0.3\n  },\n  '100%': {\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  radius: _propTypes2.default.string,\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar FadeLoader = function (_Component) {\n  _inherits(FadeLoader, _Component);\n\n  function FadeLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, FadeLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FadeLoader.__proto__ || Object.getPrototypeOf(FadeLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        height: _this.props.height,\n        width: _this.props.width,\n        margin: _this.props.margin,\n        borderRadius: _this.props.radius,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '1.2s', i * 0.12 + 's', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getPosStyle = function (i) {\n      var radius = 20;\n      var quarter = radius / 2 + radius / 5.5;\n\n      var lines = {\n        l1: {\n          top: radius,\n          left: 0\n        },\n        l2: {\n          top: quarter,\n          left: quarter,\n          transform: 'rotate(-45deg)'\n        },\n        l3: {\n          top: 0,\n          left: radius,\n          transform: 'rotate(90deg)'\n        },\n        l4: {\n          top: -quarter,\n          left: quarter,\n          transform: 'rotate(45deg)'\n        },\n        l5: {\n          top: -radius,\n          left: 0\n        },\n        l6: {\n          top: -quarter,\n          left: -quarter,\n          transform: 'rotate(-45deg)'\n        },\n        l7: {\n          top: 0,\n          left: -radius,\n          transform: 'rotate(90deg)'\n        },\n        l8: {\n          top: quarter,\n          left: -quarter,\n          transform: 'rotate(45deg)'\n        }\n      };\n\n      return lines['l' + i];\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getPosStyle(i), _this.getAnimationStyle(i), {\n        position: 'absolute',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(FadeLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var style = {\n          position: 'relative',\n          fontSize: 0\n        };\n\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) }),\n            _react2.default.createElement('div', { style: this.getStyle(3) }),\n            _react2.default.createElement('div', { style: this.getStyle(4) }),\n            _react2.default.createElement('div', { style: this.getStyle(5) }),\n            _react2.default.createElement('div', { style: this.getStyle(6) }),\n            _react2.default.createElement('div', { style: this.getStyle(7) }),\n            _react2.default.createElement('div', { style: this.getStyle(8) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return FadeLoader;\n}(_react.Component);\n\nFadeLoader.propTypes = propTypes;\nFadeLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  height: '15px',\n  width: '5px',\n  margin: '2px',\n  radius: '2px'\n};\nexports.default = FadeLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=FadeLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/FadeLoader.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '50%': {\n    transform: 'scale(0.5)',\n    opacity: 0.7\n  },\n  '100%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\n/**\n * @param  {Number} top\n * @return {Number}\n */\nfunction random(top) {\n  return Math.random() * top;\n}\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar GridLoader = function (_Component) {\n  _inherits(GridLoader, _Component);\n\n  function GridLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, GridLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GridLoader.__proto__ || Object.getPrototypeOf(GridLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animationDuration = random(100) / 100 + 0.6 + 's';\n      var animationDelay = random(100) / 100 - 0.2 + 's';\n\n      var animation = [animationName, animationDuration, animationDelay, 'infinite', 'ease'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(GridLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var style = {\n          width: parseFloat(this.props.size) * 3 + parseFloat(this.props.margin) * 6,\n          fontSize: 0\n        };\n\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) }),\n            _react2.default.createElement('div', { style: this.getStyle(3) }),\n            _react2.default.createElement('div', { style: this.getStyle(4) }),\n            _react2.default.createElement('div', { style: this.getStyle(5) }),\n            _react2.default.createElement('div', { style: this.getStyle(6) }),\n            _react2.default.createElement('div', { style: this.getStyle(7) }),\n            _react2.default.createElement('div', { style: this.getStyle(8) }),\n            _react2.default.createElement('div', { style: this.getStyle(9) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return GridLoader;\n}(_react.Component);\n\nGridLoader.propTypes = propTypes;\nGridLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px'\n};\nexports.default = GridLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=GridLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/GridLoader.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SyncLoader = exports.SquareLoader = exports.SkewLoader = exports.ScaleLoader = exports.RotateLoader = exports.RiseLoader = exports.RingLoader = exports.PulseLoader = exports.PacmanLoader = exports.MoonLoader = exports.GridLoader = exports.FadeLoader = exports.DotLoader = exports.ClipLoader = exports.BounceLoader = exports.BeatLoader = undefined;\n\nvar _BeatLoader2 = require('./BeatLoader');\n\nvar _BeatLoader3 = _interopRequireDefault(_BeatLoader2);\n\nvar _BounceLoader2 = require('./BounceLoader');\n\nvar _BounceLoader3 = _interopRequireDefault(_BounceLoader2);\n\nvar _ClipLoader2 = require('./ClipLoader');\n\nvar _ClipLoader3 = _interopRequireDefault(_ClipLoader2);\n\nvar _DotLoader2 = require('./DotLoader');\n\nvar _DotLoader3 = _interopRequireDefault(_DotLoader2);\n\nvar _FadeLoader2 = require('./FadeLoader');\n\nvar _FadeLoader3 = _interopRequireDefault(_FadeLoader2);\n\nvar _GridLoader2 = require('./GridLoader');\n\nvar _GridLoader3 = _interopRequireDefault(_GridLoader2);\n\nvar _MoonLoader2 = require('./MoonLoader');\n\nvar _MoonLoader3 = _interopRequireDefault(_MoonLoader2);\n\nvar _PacmanLoader2 = require('./PacmanLoader');\n\nvar _PacmanLoader3 = _interopRequireDefault(_PacmanLoader2);\n\nvar _PulseLoader2 = require('./PulseLoader');\n\nvar _PulseLoader3 = _interopRequireDefault(_PulseLoader2);\n\nvar _RingLoader2 = require('./RingLoader');\n\nvar _RingLoader3 = _interopRequireDefault(_RingLoader2);\n\nvar _RiseLoader2 = require('./RiseLoader');\n\nvar _RiseLoader3 = _interopRequireDefault(_RiseLoader2);\n\nvar _RotateLoader2 = require('./RotateLoader');\n\nvar _RotateLoader3 = _interopRequireDefault(_RotateLoader2);\n\nvar _ScaleLoader2 = require('./ScaleLoader');\n\nvar _ScaleLoader3 = _interopRequireDefault(_ScaleLoader2);\n\nvar _SkewLoader2 = require('./SkewLoader');\n\nvar _SkewLoader3 = _interopRequireDefault(_SkewLoader2);\n\nvar _SquareLoader2 = require('./SquareLoader');\n\nvar _SquareLoader3 = _interopRequireDefault(_SquareLoader2);\n\nvar _SyncLoader2 = require('./SyncLoader');\n\nvar _SyncLoader3 = _interopRequireDefault(_SyncLoader2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.BeatLoader = _BeatLoader3.default;\nexports.BounceLoader = _BounceLoader3.default;\nexports.ClipLoader = _ClipLoader3.default;\nexports.DotLoader = _DotLoader3.default;\nexports.FadeLoader = _FadeLoader3.default;\nexports.GridLoader = _GridLoader3.default;\nexports.MoonLoader = _MoonLoader3.default;\nexports.PacmanLoader = _PacmanLoader3.default;\nexports.PulseLoader = _PulseLoader3.default;\nexports.RingLoader = _RingLoader3.default;\nexports.RiseLoader = _RiseLoader3.default;\nexports.RotateLoader = _RotateLoader3.default;\nexports.ScaleLoader = _ScaleLoader3.default;\nexports.SkewLoader = _SkewLoader3.default;\nexports.SquareLoader = _SquareLoader3.default;\nexports.SyncLoader = _SyncLoader3.default;\n//# sourceMappingURL=Halogenium.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/Halogenium.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar MoonLoader = function (_Component) {\n  _inherits(MoonLoader, _Component);\n\n  function MoonLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MoonLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MoonLoader.__proto__ || Object.getPrototypeOf(MoonLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n      return {\n        width: size,\n        height: size,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '0.6s', '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'forwards';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = _this.props.size | 0;\n      var moonSize = size / 7;\n\n      if (i === 1) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getBallStyle(moonSize), _this.getAnimationStyle(i), {\n          backgroundColor: _this.props.color,\n          opacity: '0.8',\n          position: 'absolute',\n          top: size / 2 - moonSize / 2\n        });\n      } else if (i === 2) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getBallStyle(size), {\n          border: moonSize + 'px solid ' + _this.props.color,\n          opacity: 0.1\n        });\n      }\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getAnimationStyle(i), {\n        position: 'relative'\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(MoonLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle(0) },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return MoonLoader;\n}(_react.Component);\n\nMoonLoader.propTypes = propTypes;\nMoonLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = MoonLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=MoonLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/MoonLoader.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar animations = {};\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar PacmanLoader = function (_Component) {\n  _inherits(PacmanLoader, _Component);\n\n  function PacmanLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PacmanLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PacmanLoader.__proto__ || Object.getPrototypeOf(PacmanLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign,\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var size = _this.props.size;\n      var animationName = animations[size];\n\n      if (!animationName) {\n        var keyframes = {\n          '75%': {\n            opacity: 0.7\n          },\n          '100%': {\n            transform: 'translate(' + -4 * size + 'px, ' + -size / 4 + 'px)'\n          }\n        };\n        animationName = animations[size] = (0, _insertKeyframesRule2.default)(keyframes);\n      }\n\n      var animation = [animationName, '1s', i * 0.25 + 's', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i | 0 === 1) {\n        var s1 = _this.props.size + 'px solid transparent';\n        var s2 = _this.props.size + 'px solid ' + _this.props.color;\n\n        return {\n          width: 0,\n          height: 0,\n          borderRight: s1,\n          borderTop: s2,\n          borderLeft: s2,\n          borderBottom: s2,\n          borderRadius: _this.props.size\n        };\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        width: 10,\n        height: 10,\n        transform: 'translate(0, ' + -_this.props.size / 4 + 'px)',\n        position: 'absolute',\n        top: 25,\n        left: 100\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var style = {\n          position: 'relative',\n          fontSize: 0\n        };\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) }),\n            _react2.default.createElement('div', { style: _this.getStyle(3) }),\n            _react2.default.createElement('div', { style: _this.getStyle(4) }),\n            _react2.default.createElement('div', { style: _this.getStyle(5) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(PacmanLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return PacmanLoader;\n}(_react.Component);\n\nPacmanLoader.propTypes = propTypes;\nPacmanLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  size: 25,\n  margin: 2 };\nexports.default = PacmanLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=PacmanLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/PacmanLoader.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  '45%': {\n    transform: 'scale(0.1)',\n    opacity: 0.7\n  },\n  '80%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar PulseLoader = function (_Component) {\n  _inherits(PulseLoader, _Component);\n\n  function PulseLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PulseLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PulseLoader.__proto__ || Object.getPrototypeOf(PulseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.75s', i * 0.12 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(PulseLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return PulseLoader;\n}(_react.Component);\n\nPulseLoader.propTypes = propTypes;\nPulseLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = PulseLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=PulseLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/PulseLoader.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar rightRotateKeyframes = {\n  '0%': {\n    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\n  },\n  '100%': {\n    transform: 'rotateX(180deg) rotateY(360deg) rotateZ(360deg)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var leftRotateKeyframes = {\n  '0%': {\n    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n  },\n  '100%': {\n    transform: 'rotateX(360deg) rotateY(180deg) rotateZ(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var rightRotateAnimationName = (0, _insertKeyframesRule2.default)(rightRotateKeyframes);\n\n/**\n * @type {String}\n */\nvar leftRotateAnimationName = (0, _insertKeyframesRule2.default)(leftRotateKeyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RingLoader = function (_Component) {\n  _inherits(RingLoader, _Component);\n\n  function RingLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RingLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RingLoader.__proto__ || Object.getPrototypeOf(RingLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getCircleStyle = function (size) {\n      return {\n        width: size,\n        height: size,\n        border: size / 10 + 'px solid ' + _this.props.color,\n        opacity: 0.4,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i | 0 === 1 ? rightRotateAnimationName : leftRotateAnimationName, '2s', '0s', 'infinite', 'linear'].join(' ');\n\n      var animationFillMode = 'forwards';\n      var perspective = '800px';\n\n      return {\n        perspective: perspective,\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = parseInt(_this.props.size, 10);\n\n      if (i) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getCircleStyle(size), _this.getAnimationStyle(i), {\n          position: 'absolute',\n          top: 0,\n          left: 0\n        });\n      }\n\n      return {\n        width: size,\n        height: size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      };\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: _this.getStyle(0) },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @param {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RingLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RingLoader;\n}(_react.Component);\n\nRingLoader.propTypes = propTypes;\nRingLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = RingLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RingLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RingLoader.js\n// module id = 25\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Number}\n */\nvar riseAmount = 30;\n\n/**\n * @type {Object}\n */\nvar keyframesEven = {\n  '0%': {\n    transform: 'scale(1.1)'\n  },\n  '25%': {\n    transform: 'translateY(-' + riseAmount + 'px)'\n  },\n  '50%': {\n    transform: 'scale(0.4)'\n  },\n  '75%': {\n    transform: 'translateY(' + riseAmount + 'px)'\n  },\n  '100%': {\n    transform: 'translateY(0) scale(1.0)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var keyframesOdd = {\n  '0%': {\n    transform: 'scale(0.4)'\n  },\n  25: {\n    transform: 'translateY(' + riseAmount + 'px)'\n  },\n  '50%': {\n    transform: 'scale(1.1)'\n  },\n  '75%': {\n    transform: 'translateY(-' + riseAmount + 'px)'\n  },\n  '100%': {\n    transform: 'translateY(0) scale(0.75)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationNameEven = (0, _insertKeyframesRule2.default)(keyframesEven);\n\n/**\n * @type {String}\n */\nvar animationNameOdd = (0, _insertKeyframesRule2.default)(keyframesOdd);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RiseLoader = function (_Component) {\n  _inherits(RiseLoader, _Component);\n\n  function RiseLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RiseLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RiseLoader.__proto__ || Object.getPrototypeOf(RiseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i % 2 === 0 ? animationNameEven : animationNameOdd, '1s', '0s', 'infinite', 'cubic-bezier(.15,.46,.9,.6)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n          _react2.default.createElement('div', { style: _this.getStyle(5) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RiseLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RiseLoader;\n}(_react.Component);\n\nRiseLoader.propTypes = propTypes;\nRiseLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = RiseLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RiseLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RiseLoader.js\n// module id = 26\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'rotate(0deg)'\n  },\n  '50%': {\n    transform: 'rotate(180deg)'\n  },\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RotateLoader = function (_Component) {\n  _inherits(RotateLoader, _Component);\n\n  function RotateLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RotateLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RotateLoader.__proto__ || Object.getPrototypeOf(RotateLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '1s', '0s', 'infinite', 'cubic-bezier(.7,-.13,.22,.86)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), {\n          opacity: '0.8',\n          position: 'absolute',\n          top: 0,\n          left: i % 2 ? -28 : 25,\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: _this.getStyle() },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RotateLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RotateLoader;\n}(_react.Component);\n\nRotateLoader.propTypes = propTypes;\nRotateLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = RotateLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RotateLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RotateLoader.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scaley(1.0)'\n  },\n  '50%': {\n    transform: 'scaley(0.4)'\n  },\n  '100%': {\n    transform: 'scaley(1.0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  radius: _propTypes2.default.string,\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar ScaleLoader = function (_Component) {\n  _inherits(ScaleLoader, _Component);\n\n  function ScaleLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ScaleLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScaleLoader.__proto__ || Object.getPrototypeOf(ScaleLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        height: _this.props.height,\n        width: _this.props.width,\n        margin: _this.props.margin,\n        borderRadius: _this.props.radius,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '1s', i * 0.1 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n          _react2.default.createElement('div', { style: _this.getStyle(5) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(ScaleLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return ScaleLoader;\n}(_react.Component);\n\nScaleLoader.propTypes = propTypes;\nScaleLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  height: '35px',\n  width: '4px',\n  margin: '2px',\n  radius: '2px' };\nexports.default = ScaleLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=ScaleLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/ScaleLoader.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '25%': {\n    transform: 'perspective(100px) rotateX(180deg) rotateY(0)'\n  },\n  '50%': {\n    transform: 'perspective(100px) rotateX(180deg) rotateY(180deg)'\n  },\n  '75%': {\n    transform: 'perspective(100px) rotateX(0) rotateY(180deg)'\n  },\n  '100%': {\n    transform: 'perspective(100px) rotateX(0) rotateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SkewLoader = function (_Component) {\n  _inherits(SkewLoader, _Component);\n\n  function SkewLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SkewLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SkewLoader.__proto__ || Object.getPrototypeOf(SkewLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSharpStyle = function () {\n      return {\n        width: 0,\n        height: 0,\n        borderLeft: _this.props.size + ' solid transparent',\n        borderRight: _this.props.size + ' solid transparent',\n        borderBottom: _this.props.size + ' solid ' + _this.props.color,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getSharpStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block'\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle() })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SkewLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SkewLoader;\n}(_react.Component);\n\nSkewLoader.propTypes = propTypes;\nSkewLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  size: '20px' };\nexports.default = SkewLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SkewLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SkewLoader.js\n// module id = 29\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '25%': {\n    transform: 'rotateX(180deg) rotateY(0)'\n  },\n  '50%': {\n    transform: 'rotateX(180deg) rotateY(180deg)'\n  },\n  '75%': {\n    transform: 'rotateX(0) rotateY(180deg)'\n  },\n  '100%': {\n    transform: 'rotateX(0) rotateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SquareLoader = function (_Component) {\n  _inherits(SquareLoader, _Component);\n\n  function SquareLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SquareLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SquareLoader.__proto__ || Object.getPrototypeOf(SquareLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSquareStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n      var animationFillMode = 'both';\n      var perspective = '100px';\n\n      return {\n        perspective: perspective,\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getSquareStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle() })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SquareLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SquareLoader;\n}(_react.Component);\n\nSquareLoader.propTypes = propTypes;\nSquareLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '50px' };\nexports.default = SquareLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SquareLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SquareLoader.js\n// module id = 30\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '33%': {\n    transform: 'translateY(10px)'\n  },\n  '66%': {\n    transform: 'translateY(-10px)'\n  },\n  '100%': {\n    transform: 'translateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SyncLoader = function (_Component) {\n  _inherits(SyncLoader, _Component);\n\n  function SyncLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SyncLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SyncLoader.__proto__ || Object.getPrototypeOf(SyncLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.6s', i * 0.07 + 's', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SyncLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SyncLoader;\n}(_react.Component);\n\nSyncLoader.propTypes = propTypes;\nSyncLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = SyncLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SyncLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SyncLoader.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 33\n// module chunks = 0","/** @license React v16.7.0\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),ba=require(\"scheduler\");function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\nvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\nfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\nfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=wa(c);la(d,b,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)xa(a,b[d],c[d]);else b&&xa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ca={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\nfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\nreturn c}function Ea(a){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(za(a,Ba),Aa?t(\"95\"):void 0,ha))throw a=ia,ha=!1,ia=null,a;}var Fa=Math.random().toString(36).slice(2),Ga=\"__reactInternalInstance$\"+Fa,Ha=\"__reactEventHandlers$\"+Fa;function Ia(a){if(a[Ga])return a[Ga];for(;!a[Ga];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ga];return 5===a.tag||6===a.tag?a:null}function Ja(a){a=a[Ga];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ka(a){if(5===a.tag||6===a.tag)return a.stateNode;t(\"33\")}function La(a){return a[Ha]||null}function Ma(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Na(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\nfunction Oa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Ma(b);for(b=c.length;0<b--;)Na(c[b],\"captured\",a);for(b=0;b<c.length;b++)Na(c[b],\"bubbled\",a)}}function Pa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Qa(a){a&&a.dispatchConfig.registrationName&&Pa(a._targetInst,null,a)}\nfunction Ra(a){za(a,Oa)}var Sa=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Ta(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ua={animationend:Ta(\"Animation\",\"AnimationEnd\"),animationiteration:Ta(\"Animation\",\"AnimationIteration\"),animationstart:Ta(\"Animation\",\"AnimationStart\"),transitionend:Ta(\"Transition\",\"TransitionEnd\")},Va={},Wa={};\nSa&&(Wa=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ua.animationend.animation,delete Ua.animationiteration.animation,delete Ua.animationstart.animation),\"TransitionEvent\"in window||delete Ua.transitionend.transition);function Xa(a){if(Va[a])return Va[a];if(!Ua[a])return a;var b=Ua[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Wa)return Va[a]=b[c];return a}\nvar Ya=Xa(\"animationend\"),Za=Xa(\"animationiteration\"),$a=Xa(\"animationstart\"),ab=Xa(\"transitionend\"),bb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),cb=null,eb=null,fb=null;\nfunction gb(){if(fb)return fb;var a,b=eb,c=b.length,d,e=\"value\"in cb?cb.value:cb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return fb=e.slice(a,1<d?1-d:void 0)}function hb(){return!0}function ib(){return!1}\nfunction z(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?hb:ib;this.isPropagationStopped=ib;return this}\nn(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=hb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=hb)},persist:function(){this.isPersistent=hb},isPersistent:ib,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ib;this._dispatchInstances=this._dispatchListeners=null}});z.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nz.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;jb(c);return c};jb(z);function kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function lb(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction jb(a){a.eventPool=[];a.getPooled=kb;a.release=lb}var mb=z.extend({data:null}),nb=z.extend({data:null}),ob=[9,13,27,32],pb=Sa&&\"CompositionEvent\"in window,qb=null;Sa&&\"documentMode\"in document&&(qb=document.documentMode);\nvar rb=Sa&&\"TextEvent\"in window&&!qb,sb=Sa&&(!pb||qb&&8<qb&&11>=qb),tb=String.fromCharCode(32),ub={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},vb=!1;\nfunction wb(a,b){switch(a){case \"keyup\":return-1!==ob.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function xb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var yb=!1;function zb(a,b){switch(a){case \"compositionend\":return xb(b);case \"keypress\":if(32!==b.which)return null;vb=!0;return tb;case \"textInput\":return a=b.data,a===tb&&vb?null:a;default:return null}}\nfunction Ab(a,b){if(yb)return\"compositionend\"===a||!pb&&wb(a,b)?(a=gb(),fb=eb=cb=null,yb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return sb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Bb={eventTypes:ub,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(pb)b:{switch(a){case \"compositionstart\":e=ub.compositionStart;break b;case \"compositionend\":e=ub.compositionEnd;break b;case \"compositionupdate\":e=ub.compositionUpdate;break b}e=void 0}else yb?wb(a,c)&&(e=ub.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=ub.compositionStart);e?(sb&&\"ko\"!==c.locale&&(yb||e!==ub.compositionStart?e===ub.compositionEnd&&yb&&(f=gb()):(cb=d,eb=\"value\"in cb?cb.value:cb.textContent,yb=\n!0)),e=mb.getPooled(e,b,c,d),f?e.data=f:(f=xb(c),null!==f&&(e.data=f)),Ra(e),f=e):f=null;(a=rb?zb(a,c):Ab(a,c))?(b=nb.getPooled(ub.beforeInput,b,c,d),b.data=a,Ra(b)):b=null;return null===f?b:null===b?f:[f,b]}},Cb=null,Db=null,Eb=null;function Hb(a){if(a=va(a)){\"function\"!==typeof Cb?t(\"280\"):void 0;var b=ua(a.stateNode);Cb(a.stateNode,a.type,b)}}function Ib(a){Db?Eb?Eb.push(a):Eb=[a]:Db=a}function Jb(){if(Db){var a=Db,b=Eb;Eb=Db=null;Hb(a);if(b)for(a=0;a<b.length;a++)Hb(b[a])}}\nfunction Kb(a,b){return a(b)}function Lb(a,b,c){return a(b,c)}function Mb(){}var Nb=!1;function Ob(a,b){if(Nb)return a(b);Nb=!0;try{return Kb(a,b)}finally{if(Nb=!1,null!==Db||null!==Eb)Mb(),Jb()}}var Pb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Pb[a.type]:\"textarea\"===b?!0:!1}\nfunction Rb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Sb(a){if(!Sa)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Tb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ub(a){var b=Tb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Vb(a){a._valueTracker||(a._valueTracker=Ub(a))}function Wb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Tb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar Xb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Yb=/^(.*)[\\\\\\/]/,D=\"function\"===typeof Symbol&&Symbol.for,Zb=D?Symbol.for(\"react.element\"):60103,$b=D?Symbol.for(\"react.portal\"):60106,ac=D?Symbol.for(\"react.fragment\"):60107,bc=D?Symbol.for(\"react.strict_mode\"):60108,cc=D?Symbol.for(\"react.profiler\"):60114,dc=D?Symbol.for(\"react.provider\"):60109,ec=D?Symbol.for(\"react.context\"):60110,fc=D?Symbol.for(\"react.concurrent_mode\"):60111,gc=D?Symbol.for(\"react.forward_ref\"):60112,hc=D?Symbol.for(\"react.suspense\"):\n60113,ic=D?Symbol.for(\"react.memo\"):60115,jc=D?Symbol.for(\"react.lazy\"):60116,kc=\"function\"===typeof Symbol&&Symbol.iterator;function lc(a){if(null===a||\"object\"!==typeof a)return null;a=kc&&a[kc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction mc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case fc:return\"ConcurrentMode\";case ac:return\"Fragment\";case $b:return\"Portal\";case cc:return\"Profiler\";case bc:return\"StrictMode\";case hc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ec:return\"Context.Consumer\";case dc:return\"Context.Provider\";case gc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ic:return mc(a.type);case jc:if(a=1===a._status?a._result:null)return mc(a)}return null}function nc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=mc(a.type);c=null;d&&(c=mc(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Yb,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar oc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\nfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(oc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function E(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var F={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){F[a]=new E(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];F[b]=new E(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){F[a]=new E(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){F[a]=new E(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){F[a]=new E(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){F[a]=new E(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){F[a]=new E(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){F[a]=new E(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){F[a]=new E(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function wc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\nwc);F[b]=new E(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});F.tabIndex=new E(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction xc(a,b,c,d){var e=F.hasOwnProperty(b)?F[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction yc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function zc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Ac(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=yc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Bc(a,b){b=b.checked;null!=b&&xc(a,\"checked\",b,!1)}\nfunction Cc(a,b){Bc(a,b);var c=yc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Dc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Dc(a,b.type,yc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ec(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Dc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Fc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Gc(a,b,c){a=z.getPooled(Fc.change,a,b,c);a.type=\"change\";Ib(c);Ra(a);return a}var Jc=null,Kc=null;function Lc(a){Ea(a)}\nfunction Mc(a){var b=Ka(a);if(Wb(b))return a}function Nc(a,b){if(\"change\"===a)return b}var Oc=!1;Sa&&(Oc=Sb(\"input\")&&(!document.documentMode||9<document.documentMode));function Pc(){Jc&&(Jc.detachEvent(\"onpropertychange\",Qc),Kc=Jc=null)}function Qc(a){\"value\"===a.propertyName&&Mc(Kc)&&(a=Gc(Kc,a,Rb(a)),Ob(Lc,a))}function Rc(a,b,c){\"focus\"===a?(Pc(),Jc=b,Kc=c,Jc.attachEvent(\"onpropertychange\",Qc)):\"blur\"===a&&Pc()}function Sc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Mc(Kc)}\nfunction Tc(a,b){if(\"click\"===a)return Mc(b)}function Uc(a,b){if(\"input\"===a||\"change\"===a)return Mc(b)}\nvar Vc={eventTypes:Fc,_isInputEventSupported:Oc,extractEvents:function(a,b,c,d){var e=b?Ka(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Nc:Qb(e)?Oc?f=Uc:(f=Sc,g=Rc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Tc);if(f&&(f=f(a,b)))return Gc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Dc(e,\"number\",e.value)}},Wc=z.extend({view:null,detail:null}),Xc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Yc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Xc[a])?!!b[a]:!1}function Zc(){return Yc}\nvar $c=0,ad=0,bd=!1,cd=!1,dd=Wc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Zc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=$c;$c=a.screenX;return bd?\"mousemove\"===a.type?a.screenX-b:0:(bd=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=ad;ad=a.screenY;return cd?\"mousemove\"===a.type?a.screenY-b:0:(cd=!0,0)}}),ed=dd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),fd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},gd={eventTypes:fd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ia(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=dd,h=fd.mouseLeave,k=fd.mouseEnter,l=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=ed,h=fd.pointerLeave,k=fd.pointerEnter,l=\"pointer\";var m=null==f?e:Ka(f);e=null==b?e:Ka(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Ma(g))l++;g=0;for(k=e;k;k=Ma(k))g++;for(;0<l-g;)b=Ma(b),l--;for(;0<g-l;)e=Ma(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Ma(b);e=Ma(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\nf.alternate;if(null!==l&&l===e)break;b.push(f);f=Ma(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Ma(d)}for(d=0;d<b.length;d++)Pa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Pa(f[d],\"captured\",c);return[a,c]}},hd=Object.prototype.hasOwnProperty;function id(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\nfunction jd(a,b){if(id(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!hd.call(b,c[d])||!id(a[c[d]],b[c[d]]))return!1;return!0}function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?t(\"188\"):void 0}\nfunction md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}3!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar od=z.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=z.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=Wc.extend({relatedTarget:null});function rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=Wc.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Zc,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=dd.extend({dataTransfer:null}),wd=Wc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Zc}),xd=z.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=dd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[Ya,\"animationEnd\"],[Za,\"animationIteration\"],[$a,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ab,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=dd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case Ya:case Za:case $a:a=od;break;case ab:a=xd;break;case \"scroll\":a=Wc;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=ed;break;default:a=z}b=a.getPooled(e,b,c,d);Ra(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ia(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Rb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ea(g)}}var Hd=!0;\nfunction H(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!1)}function Kd(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!0)}function Id(a,b){Lb(Jd,a,b)}\nfunction Jd(a,b){if(Hd){var c=Rb(b);c=Ia(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Ob(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}var Ld={},Md=0,Nd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Od(a){Object.prototype.hasOwnProperty.call(a,Nd)||(a[Nd]=Md++,Ld[a[Nd]]={});return Ld[a[Nd]]}function Pd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Td(){for(var a=window,b=Pd();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Pd(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=Sa&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Pd(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&jd(Zd,c)?null:(Zd=c,a=z.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ra(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Od(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ka(b):window;switch(a){case \"focus\":if(Qb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=La;va=Ja;wa=Ka;Ca.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:gd,ChangeEventPlugin:Vc,SelectEventPlugin:be,BeforeInputEventPlugin:Bb});function de(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction ee(a,b){a=n({children:void 0},b);if(b=de(b.children))a.children=b;return a}function fe(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+yc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction ge(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function he(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:yc(c)}}\nfunction ie(a,b){var c=yc(b.value),d=yc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function je(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var ke={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction le(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function me(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?le(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ne=void 0,oe=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==ke.svg||\"innerHTML\"in a)a.innerHTML=b;else{ne=ne||document.createElement(\"div\");ne.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ne.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},re=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qe).forEach(function(a){re.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qe[b]=qe[a]})});function se(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qe.hasOwnProperty(a)&&qe[a]?(\"\"+b).trim():b+\"px\"}\nfunction te(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=se(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ue=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ve(a,b){b&&(ue[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\nfunction we(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction xe(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Od(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Kd(\"scroll\",a);break;case \"focus\":case \"blur\":Kd(\"focus\",a);Kd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Sb(e)&&Kd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===bb.indexOf(e)&&H(e,a)}c[e]=!0}}}function ye(){}var ze=null,Ae=null;\nfunction Be(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ce(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var De=\"function\"===typeof setTimeout?setTimeout:void 0,Ee=\"function\"===typeof clearTimeout?clearTimeout:void 0;\nfunction Fe(a,b,c,d,e){a[Ha]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Bc(a,e);we(c,d);d=we(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?te(a,h):\"dangerouslySetInnerHTML\"===g?oe(a,h):\"children\"===g?pe(a,h):xc(a,g,h,d)}switch(c){case \"input\":Cc(a,e);break;case \"textarea\":ie(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?fe(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?fe(a,!!e.multiple,e.defaultValue,\n!0):fe(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function Ge(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function He(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Ie=[],Je=-1;function I(a){0>Je||(a.current=Ie[Je],Ie[Je]=null,Je--)}function J(a,b){Je++;Ie[Je]=a.current;a.current=b}var Ke={},K={current:Ke},L={current:!1},Le=Ke;\nfunction Me(a,b){var c=a.type.contextTypes;if(!c)return Ke;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function M(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ne(a){I(L,a);I(K,a)}function Oe(a){I(L,a);I(K,a)}\nfunction Pe(a,b,c){K.current!==Ke?t(\"168\"):void 0;J(K,b,a);J(L,c,a)}function Qe(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",mc(b)||\"Unknown\",e);return n({},c,d)}function Re(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Ke;Le=K.current;J(K,b,a);J(L,L.current,a);return!0}\nfunction Se(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Qe(a,b,Le),d.__reactInternalMemoizedMergedChildContext=b,I(L,a),I(K,a),J(K,b,a)):I(L,a);J(L,c,a)}var Te=null,Ue=null;function Ve(a){return function(b){try{return a(b)}catch(c){}}}\nfunction We(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Te=Ve(function(a){return b.onCommitFiberRoot(c,a)});Ue=Ve(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Xe(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function N(a,b,c,d){return new Xe(a,b,c,d)}\nfunction Ye(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Ze(a){if(\"function\"===typeof a)return Ye(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gc)return 11;if(a===ic)return 14}return 2}\nfunction $e(a,b){var c=a.alternate;null===c?(c=N(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.firstContextDependency=a.firstContextDependency;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction af(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ye(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ac:return bf(c.children,e,f,b);case fc:return cf(c,e|3,f,b);case bc:return cf(c,e|2,f,b);case cc:return a=N(12,c,b,e|4),a.elementType=cc,a.type=cc,a.expirationTime=f,a;case hc:return a=N(13,c,b,e),a.elementType=hc,a.type=hc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case dc:g=10;break a;case ec:g=9;break a;case gc:g=11;break a;case ic:g=\n14;break a;case jc:g=16;d=null;break a}t(\"130\",null==a?a:typeof a,\"\")}b=N(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function bf(a,b,c,d){a=N(7,a,d,b);a.expirationTime=c;return a}function cf(a,b,c,d){a=N(8,a,d,b);b=0===(b&1)?bc:fc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function df(a,b,c){a=N(6,a,null,b);a.expirationTime=c;return a}\nfunction ef(a,b,c){b=N(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function ff(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);gf(b,a)}\nfunction hf(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);gf(b,a)}function jf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}\nfunction gf(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var kf=!1;function lf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction mf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function of(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=lf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=lf(a.memoizedState),e=c.updateQueue=lf(c.memoizedState)):d=a.updateQueue=mf(e):null===e&&(e=c.updateQueue=mf(d));null===e||d===e?of(d,b):null===d.lastUpdate||null===e.lastUpdate?(of(d,b),of(e,b)):(of(d,b),e.lastUpdate=b)}\nfunction qf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=lf(a.memoizedState):rf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function rf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=mf(b));return b}\nfunction sf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-2049|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:kf=!0}return d}\nfunction tf(a,b,c,d,e){kf=!1;b=rf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var r=k.expirationTime;r<e?(null===m&&(m=k,null===g&&(f=l)),h<r&&(h=r)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=\n32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\nfunction uf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);vf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;vf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function vf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction wf(a,b){return{value:a,source:b,stack:nc(b)}}var xf={current:null},yf=null,zf=null,Af=null;function Bf(a,b){var c=a.type._context;J(xf,c._currentValue,a);c._currentValue=b}function Cf(a){var b=xf.current;I(xf,a);a.type._context._currentValue=b}function Df(a){yf=a;Af=zf=null;a.firstContextDependency=null}\nfunction Ef(a,b){if(Af!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Af=a,b=1073741823;b={context:a,observedBits:b,next:null};null===zf?(null===yf?t(\"293\"):void 0,yf.firstContextDependency=zf=b):zf=zf.next=b}return a._currentValue}var Ff={},O={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?t(\"174\"):void 0;return a}\nfunction Jf(a,b){J(Hf,b,a);J(Gf,a,a);J(O,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:me(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=me(b,c)}I(O,a);J(O,b,a)}function Kf(a){I(O,a);I(Gf,a);I(Hf,a)}function Lf(a){If(Hf.current);var b=If(O.current);var c=me(b,a.type);b!==c&&(J(Gf,a,a),J(O,c,a))}function Mf(a){Gf.current===a&&(I(O,a),I(Gf,a))}\nfunction P(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}function Nf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:throw a._status=0,b=a._ctor,b=b(),b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)}),a._result=b,b;}}var Of=Xb.ReactCurrentOwner,Pf=(new aa.Component).refs;\nfunction Qf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Vf={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Rf();c=Sf(c,a);var d=nf(c);d.tag=\n2;void 0!==b&&null!==b&&(d.callback=b);Tf();pf(a,d);Uf(a,c)}};function Wf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!jd(c,d)||!jd(e,f):!0}\nfunction Xf(a,b,c){var d=!1,e=Ke;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Of.currentDispatcher.readContext(f):(e=M(b)?Le:K.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Me(a,e):Ke);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Vf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Zf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Vf.enqueueReplaceState(b,b.state,null)}\nfunction $f(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Pf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Of.currentDispatcher.readContext(f):(f=M(b)?Le:K.current,e.context=Me(a,f));f=a.updateQueue;null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Qf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\n\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Vf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var ag=Array.isArray;\nfunction bg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?t(\"289\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Pf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"290\",a)}return a}\nfunction cg(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction dg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=$e(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=df(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=bg(a,b,c),d.return=a,d;d=af(c.type,c.key,c.props,null,a.mode,d);d.ref=bg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=ef(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,g){if(null===b||7!==b.tag)return b=bf(c,a.mode,d,g),b.return=a,b;b=e(b,c,d);b.return=a;return b}function r(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=df(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Zb:return c=af(b.type,b.key,b.props,null,a.mode,c),c.ref=bg(a,null,b),c.return=a,c;case $b:return b=ef(b,a.mode,c),b.return=a,b}if(ag(b)||\nlc(b))return b=bf(b,a.mode,c,null),b.return=a,b;cg(a,b)}return null}function w(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Zb:return c.key===e?c.type===ac?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $b:return c.key===e?l(a,b,c,d):null}if(ag(c)||lc(c))return null!==e?null:m(a,b,c,d,null);cg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Zb:return a=a.get(null===d.key?c:d.key)||null,d.type===ac?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $b:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(ag(d)||lc(d))return a=a.get(c)||null,m(b,a,d,e,null);cg(b,d)}return null}function B(e,g,h,k){for(var l=null,q=null,m=g,u=g=0,p=null;null!==m&&u<h.length;u++){m.index>u?(p=m,m=null):p=m.sibling;var v=w(e,m,h[u],k);if(null===v){null===m&&(m=p);break}a&&\nm&&null===v.alternate&&b(e,m);g=f(v,g,u);null===q?l=v:q.sibling=v;q=v;m=p}if(u===h.length)return c(e,m),l;if(null===m){for(;u<h.length;u++)if(m=r(e,h[u],k))g=f(m,g,u),null===q?l=m:q.sibling=m,q=m;return l}for(m=d(e,m);u<h.length;u++)if(p=y(m,e,u,h[u],k))a&&null!==p.alternate&&m.delete(null===p.key?u:p.key),g=f(p,g,u),null===q?l=p:q.sibling=p,q=p;a&&m.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=lc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,p=null,v=h.next();null!==q&&!v.done;u++,v=h.next()){q.index>u?(p=q,q=null):p=q.sibling;var A=w(e,q,v.value,k);if(null===A){q||(q=p);break}a&&q&&null===A.alternate&&b(e,q);g=f(A,g,u);null===m?l=A:m.sibling=A;m=A;q=p}if(v.done)return c(e,q),l;if(null===q){for(;!v.done;u++,v=h.next())v=r(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(q=d(e,q);!v.done;u++,v=h.next())v=y(q,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&q.delete(null===v.key?u:\nv.key),g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ac&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Zb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===ac:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===ac?f.props.children:f.props,h);d.ref=bg(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===ac?(d=bf(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=af(f.type,f.key,f.props,null,a.mode,h),h.ref=bg(a,d,f),h.return=a,a=h)}return g(a);case $b:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ef(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=df(f,a.mode,h),d.return=a,a=d),g(a);if(ag(f))return B(a,d,f,h);if(lc(f))return R(a,d,f,h);l&&cg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var eg=dg(!0),fg=dg(!1),gg=null,hg=null,ig=!1;\nfunction jg(a,b){var c=N(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function kg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}\nfunction lg(a){if(ig){var b=hg;if(b){var c=b;if(!kg(a,b)){b=Ge(c);if(!b||!kg(a,b)){a.effectTag|=2;ig=!1;gg=a;return}jg(gg,c)}gg=a;hg=He(b)}else a.effectTag|=2,ig=!1,gg=a}}function mg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;gg=a}function ng(a){if(a!==gg)return!1;if(!ig)return mg(a),ig=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ce(b,a.memoizedProps))for(b=hg;b;)jg(a,b),b=Ge(b);mg(a);hg=gg?Ge(a.stateNode):null;return!0}function og(){hg=gg=null;ig=!1}var pg=Xb.ReactCurrentOwner;\nfunction Q(a,b,c,d){b.child=null===a?fg(b,null,c,d):eg(b,a.child,c,d)}function qg(a,b,c,d,e){c=c.render;var f=b.ref;Df(b,e);d=c(d,f);b.effectTag|=1;Q(a,b,d,e);return b.child}\nfunction rg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ye(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,sg(a,b,g,d,e,f);a=af(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:jd,c(e,d)&&a.ref===b.ref))return tg(a,b,f);b.effectTag|=1;a=$e(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction sg(a,b,c,d,e,f){return null!==a&&e<f&&jd(a.memoizedProps,d)&&a.ref===b.ref?tg(a,b,f):ug(a,b,c,d,f)}function vg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function ug(a,b,c,d,e){var f=M(c)?Le:K.current;f=Me(b,f);Df(b,e);c=c(d,f);b.effectTag|=1;Q(a,b,c,e);return b.child}\nfunction wg(a,b,c,d,e){if(M(c)){var f=!0;Re(b)}else f=!1;Df(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Xf(b,c,d,e),$f(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l));var m=c.getDerivedStateFromProps,r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;r||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l);kf=!1;var w=b.memoizedState;k=g.state=w;var y=b.updateQueue;null!==y&&(tf(b,y,d,g,e),k=b.memoizedState);h!==d||w!==k||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),k=b.memoizedState),(h=kf||Wf(b,c,h,d,w,k,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:P(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l)),m=c.getDerivedStateFromProps,\n(r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l),kf=!1,k=b.memoizedState,w=g.state=k,y=b.updateQueue,null!==y&&(tf(b,y,d,g,e),w=b.memoizedState),h!==d||k!==w||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),w=b.memoizedState),(m=kf||Wf(b,c,h,d,k,w,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,w,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,w,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\nd,b.memoizedState=w),g.props=d,g.state=w,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return xg(a,b,c,d,f,e)}\nfunction xg(a,b,c,d,e,f){vg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Se(b,c,!1),tg(a,b,f);d=b.stateNode;pg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=eg(b,a.child,null,f),b.child=eg(b,null,h,f)):Q(a,b,h,f);b.memoizedState=d.state;e&&Se(b,c,!0);return b.child}function yg(a){var b=a.stateNode;b.pendingContext?Pe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Pe(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction zg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=bf(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=bf(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=fg(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=$e(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=$e(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=eg(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=bf(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=bf(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=eg(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction tg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=$e(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=$e(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Ag(a,b,c){var d=b.expirationTime;if(null!==a&&a.memoizedProps===b.pendingProps&&!L.current&&d<c){switch(b.tag){case 3:yg(b);og();break;case 5:Lf(b);break;case 1:M(b.type)&&Re(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Bf(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return zg(a,b,c);b=tg(a,b,c);return null!==b?b.sibling:null}}return tg(a,b,c)}b.expirationTime=0;switch(b.tag){case 2:d=b.elementType;null!==\na&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Me(b,K.current);Df(b,c);e=d(a,e);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;if(M(d)){var f=!0;Re(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Qf(b,d,g,a);e.updater=Vf;b.stateNode=e;e._reactInternalFiber=b;$f(b,d,a,c);b=xg(null,b,d,!0,f,c)}else b.tag=0,Q(null,b,e,c),b=b.child;\nreturn b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=Nf(e);b.type=a;e=b.tag=Ze(a);f=P(a,f);g=void 0;switch(e){case 0:g=ug(null,b,a,f,c);break;case 1:g=wg(null,b,a,f,c);break;case 11:g=qg(null,b,a,f,c);break;case 14:g=rg(null,b,a,P(a.type,f),d,c);break;default:t(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),ug(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),wg(a,b,\nd,e,c);case 3:yg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;tf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)og(),b=tg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)hg=He(b.stateNode.containerInfo),gg=b,e=ig=!0;e?(b.effectTag|=2,b.child=fg(b,null,d,c)):(Q(a,b,d,c),og());b=b.child}return b;case 5:return Lf(b),null===a&&lg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ce(d,e)?g=null:null!==\nf&&Ce(d,f)&&(b.effectTag|=16),vg(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=1,b=null):(Q(a,b,g,c),b=b.child),b;case 6:return null===a&&lg(b),null;case 13:return zg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=eg(b,null,d,c):Q(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),qg(a,b,d,e,c);case 7:return Q(a,b,b.pendingProps,c),b.child;case 8:return Q(a,b,b.pendingProps.children,c),b.child;case 12:return Q(a,b,b.pendingProps.children,\nc),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Bf(b,f);if(null!==g){var h=g.value;f=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!L.current){b=tg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(1===g.tag){var k=nf(c);k.tag=2;pf(g,k)}g.expirationTime<\nc&&(g.expirationTime=c);k=g.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(l.childExpirationTime<c)l.childExpirationTime=c,null!==k&&k.childExpirationTime<c&&(k.childExpirationTime=c);else if(null!==k&&k.childExpirationTime<c)k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=10===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==k;){if(k===b){k=null;break}g=k.sibling;\nif(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}Q(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Df(b,c),e=Ef(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,Q(a,b,d,c),b.child;case 14:return e=b.type,f=P(e,b.pendingProps),f=P(e.type,f),rg(a,b,e,f,d,c);case 15:return sg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,M(d)?(a=\n!0,Re(b)):a=!1,Df(b,c),Xf(b,d,e,c),$f(b,d,e,c),xg(null,b,d,!0,a,c);default:t(\"156\")}}function Bg(a){a.effectTag|=4}var Cg=void 0,Gg=void 0,Hg=void 0,Ig=void 0;Cg=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Gg=function(){};\nHg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(O.current);a=null;switch(c){case \"input\":f=zc(g,f);d=zc(g,d);a=[];break;case \"option\":f=ee(g,f);d=ee(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=ge(g,f);d=ge(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ye)}ve(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&xe(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&Bg(b)}};Ig=function(a,b,c,d){c!==d&&Bg(b)};\nvar Jg=\"function\"===typeof WeakSet?WeakSet:Set;function Kg(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=nc(c));null!==c&&mc(c.type);b=b.value;null!==a&&1===a.tag&&mc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Lg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Mg(a,c)}else b.current=null}\nfunction Ng(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=se(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction Og(a){\"function\"===typeof Ue&&Ue(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(null!==d){var e=a;try{d()}catch(f){Mg(e,f)}}c=c.next}while(c!==b)}break;case 1:Lg(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){Mg(a,f)}break;case 5:Lg(a);break;case 4:Pg(a)}}\nfunction Qg(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Rg(a){a:{for(var b=a.return;null!==b;){if(Qg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(pe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Qg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=ye)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction Pg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(Og(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?(d=b.stateNode.containerInfo,e=!0):Og(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction Sg(a,b){switch(b.tag){case 0:case 11:case 14:case 15:break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Fe(c,f,e,a,d,b)}break;case 6:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=Rf()));null!==a&&Ng(a,d);c=b.updateQueue;\nif(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new Jg);c.forEach(function(a){var c=Tg.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:t(\"163\")}}var Ug=\"function\"===typeof WeakMap?WeakMap:Map;function Vg(a,b,c){c=nf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Wg(d);Kg(a,b)};return c}\nfunction Xg(a,b,c){c=nf(c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Yg?Yg=new Set([this]):Yg.add(this));var c=b.value,e=b.stack;Kg(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Zg(a){switch(a.tag){case 1:M(a.type)&&Ne(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Oe(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 4:return Kf(a),null;case 10:return Cf(a),null;default:return null}}\nvar $g={readContext:Ef},ah=Xb.ReactCurrentOwner,bh=1073741822,ch=0,dh=!1,S=null,T=null,U=0,eh=-1,fh=!1,V=null,gh=!1,hh=null,ih=null,Yg=null;function jh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ne(b);break;case 3:Kf(b);Oe(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Cf(b)}a=a.return}T=null;U=0;eh=-1;fh=!1;S=null}function Tf(){null!==ih&&(ba.unstable_cancelCallback(hh),ih())}\nfunction kh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){S=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:M(b.type)&&Ne(b);break;case 3:Kf(b);Oe(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)ng(b),b.effectTag&=-3;Gg(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)Hg(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var k=If(O.current);if(ng(b)){g=b;e=g.stateNode;var l=g.type,m=g.memoizedProps,r=h;e[Ga]=g;e[Ha]=m;f=void 0;h=l;switch(h){case \"iframe\":case \"object\":H(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<bb.length;l++)H(bb[l],e);break;case \"source\":H(\"error\",e);break;case \"img\":case \"image\":case \"link\":H(\"error\",e);H(\"load\",e);break;case \"form\":H(\"reset\",e);H(\"submit\",e);break;case \"details\":H(\"toggle\",e);break;case \"input\":Ac(e,m);H(\"invalid\",e);xe(r,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};H(\"invalid\",e);xe(r,\"onChange\");break;case \"textarea\":he(e,m),H(\"invalid\",e),xe(r,\"onChange\")}ve(h,m);l=null;for(f in m)m.hasOwnProperty(f)&&(k=m[f],\"children\"===f?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(f)&&null!=k&&xe(r,f));switch(h){case \"input\":Vb(e);Ec(e,m,!0);break;case \"textarea\":Vb(e);je(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=ye)}f=l;g.updateQueue=f;g=null!==f?!0:!1;g&&Bg(b)}else{m=b;e=f;r=g;l=9===h.nodeType?h:h.ownerDocument;k===ke.html&&(k=le(e));k===ke.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof r.is?l=l.createElement(e,{is:r.is}):(l=l.createElement(e),\"select\"===e&&r.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ga]=m;e[Ha]=g;Cg(e,b,!1,!1);r=e;l=f;m=g;var w=h,y=we(l,m);switch(l){case \"iframe\":case \"object\":H(\"load\",\nr);h=m;break;case \"video\":case \"audio\":for(h=0;h<bb.length;h++)H(bb[h],r);h=m;break;case \"source\":H(\"error\",r);h=m;break;case \"img\":case \"image\":case \"link\":H(\"error\",r);H(\"load\",r);h=m;break;case \"form\":H(\"reset\",r);H(\"submit\",r);h=m;break;case \"details\":H(\"toggle\",r);h=m;break;case \"input\":Ac(r,m);h=zc(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;case \"option\":h=ee(r,m);break;case \"select\":r._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});H(\"invalid\",r);xe(w,\"onChange\");break;case \"textarea\":he(r,\nm);h=ge(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;default:h=m}ve(l,h);k=void 0;var B=l,R=r,v=h;for(k in v)if(v.hasOwnProperty(k)){var q=v[k];\"style\"===k?te(R,q):\"dangerouslySetInnerHTML\"===k?(q=q?q.__html:void 0,null!=q&&oe(R,q)):\"children\"===k?\"string\"===typeof q?(\"textarea\"!==B||\"\"!==q)&&pe(R,q):\"number\"===typeof q&&pe(R,\"\"+q):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=q&&xe(w,k):null!=q&&xc(R,k,q,y))}switch(l){case \"input\":Vb(r);\nEc(r,m,!1);break;case \"textarea\":Vb(r);je(r,m);break;case \"option\":null!=m.value&&r.setAttribute(\"value\",\"\"+yc(m.value));break;case \"select\":h=r;h.multiple=!!m.multiple;r=m.value;null!=r?fe(h,!!m.multiple,r,!1):null!=m.defaultValue&&fe(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(r.onclick=ye)}(g=Be(f,g))&&Bg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?Ig(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?t(\"166\"):void 0),e=If(Hf.current),If(O.current),ng(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Ga]=g,(g=f.nodeValue!==e)&&Bg(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Ga]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;S=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g!==f||0===(b.effectTag&1)&&g)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);Gg(b);break;case 10:Cf(b);break;case 9:break;case 14:break;case 17:M(b.type)&&Ne(b);break;default:t(\"156\")}S=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==S)return S;null!==c&&0===(c.effectTag&1024)&&(null===\nc.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Zg(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction lh(a){var b=Ag(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=kh(a));ah.current=null;return b}\nfunction mh(a,b){dh?t(\"243\"):void 0;Tf();dh=!0;ah.currentDispatcher=$g;var c=a.nextExpirationTimeToWorkOn;if(c!==U||a!==T||null===S)jh(),T=a,U=c,S=$e(T.current,null,U),a.pendingCommitExpirationTime=0;var d=!1;do{try{if(b)for(;null!==S&&!nh();)S=lh(S);else for(;null!==S;)S=lh(S)}catch(B){if(Af=zf=yf=null,null===S)d=!0,Wg(B);else{null===S?t(\"271\"):void 0;var e=S,f=e.return;if(null===f)d=!0,Wg(B);else{a:{var g=a,h=f,k=e,l=B;f=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==l&&\"object\"===\ntypeof l&&\"function\"===typeof l.then){var m=l;l=h;var r=-1,w=-1;do{if(13===l.tag){var y=l.alternate;if(null!==y&&(y=y.memoizedState,null!==y)){w=10*(1073741822-y.timedOutAt);break}y=l.pendingProps.maxDuration;if(\"number\"===typeof y)if(0>=y)r=0;else if(-1===r||y<r)r=y}l=l.return}while(null!==l);l=h;do{if(y=13===l.tag)y=void 0===l.memoizedProps.fallback?!1:null===l.memoizedState;if(y){h=l.updateQueue;null===h?l.updateQueue=new Set([m]):h.add(m);if(0===(l.mode&1)){l.effectTag|=64;k.effectTag&=-1957;\n1===k.tag&&(null===k.alternate?k.tag=17:(f=nf(1073741823),f.tag=2,pf(k,f)));k.expirationTime=1073741823;break a}k=g.pingCache;null===k?(k=g.pingCache=new Ug,h=new Set,k.set(m,h)):(h=k.get(m),void 0===h&&(h=new Set,k.set(m,h)));h.has(f)||(h.add(f),k=oh.bind(null,g,m,f),m.then(k,k));-1===r?g=1073741823:(-1===w&&(w=10*(1073741822-jf(g,f))-5E3),g=w+r);0<=g&&eh<g&&(eh=g);l.effectTag|=2048;l.expirationTime=f;break a}l=l.return}while(null!==l);l=Error((mc(k.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+\nnc(k))}fh=!0;l=wf(l,k);g=h;do{switch(g.tag){case 3:g.effectTag|=2048;g.expirationTime=f;f=Vg(g,l,f);qf(g,f);break a;case 1:if(m=l,r=g.type,w=g.stateNode,0===(g.effectTag&64)&&(\"function\"===typeof r.getDerivedStateFromError||null!==w&&\"function\"===typeof w.componentDidCatch&&(null===Yg||!Yg.has(w)))){g.effectTag|=2048;g.expirationTime=f;f=Xg(g,m,f);qf(g,f);break a}}g=g.return}while(null!==g)}S=kh(e);continue}}}break}while(1);dh=!1;Af=zf=yf=ah.currentDispatcher=null;if(d)T=null,a.finishedWork=null;\nelse if(null!==S)a.finishedWork=null;else{d=a.current.alternate;null===d?t(\"281\"):void 0;T=null;if(fh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<c||0!==f&&f<c||0!==g&&g<c){hf(a,c);ph(a,d,c,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;c=a.nextExpirationTimeToWorkOn=c;b=a.expirationTime=1073741823;ph(a,d,c,b,-1);return}}b&&-1!==eh?(hf(a,c),b=10*(1073741822-jf(a,c)),b<eh&&(eh=b),b=10*(1073741822-Rf()),b=eh-b,ph(a,d,c,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=\nc,a.finishedWork=d)}}function Mg(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Yg||!Yg.has(d))){a=wf(b,a);a=Xg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}break;case 3:a=wf(b,a);a=Vg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}c=c.return}3===a.tag&&(c=wf(b,a),c=Vg(a,c,1073741823),pf(a,c),Uf(a,1073741823))}\nfunction Sf(a,b){0!==ch?a=ch:dh?a=gh?1073741823:U:b.mode&1?(a=qh?1073741822-10*(((1073741822-a+15)/10|0)+1):1073741822-25*(((1073741822-a+500)/25|0)+1),null!==T&&a===U&&--a):a=1073741823;qh&&(0===rh||a<rh)&&(rh=a);return a}function oh(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==T&&U===c)T=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;gf(c,a);c=a.expirationTime;0!==c&&sh(a,c)}}\nfunction Tg(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=Rf();b=Sf(b,a);a=th(a,b);null!==a&&(ff(a,b),b=a.expirationTime,0!==b&&sh(a,b))}\nfunction th(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction Uf(a,b){a=th(a,b);null!==a&&(!dh&&0!==U&&b>U&&jh(),ff(a,b),dh&&!gh&&T===a||sh(a,a.expirationTime),uh>vh&&(uh=0,t(\"185\")))}function wh(a,b,c,d,e){var f=ch;ch=1073741823;try{return a(b,c,d,e)}finally{ch=f}}var xh=null,W=null,yh=0,zh=void 0,X=!1,Ah=null,Y=0,rh=0,Bh=!1,Ch=null,Z=!1,Dh=!1,qh=!1,Eh=null,Fh=ba.unstable_now(),Gh=1073741822-(Fh/10|0),Hh=Gh,vh=50,uh=0,Ih=null;function Jh(){Gh=1073741822-((ba.unstable_now()-Fh)/10|0)}\nfunction Kh(a,b){if(0!==yh){if(b<yh)return;null!==zh&&ba.unstable_cancelCallback(zh)}yh=b;a=ba.unstable_now()-Fh;zh=ba.unstable_scheduleCallback(Lh,{timeout:10*(1073741822-b)-a})}function ph(a,b,c,d,e){a.expirationTime=d;0!==e||nh()?0<e&&(a.timeoutHandle=De(Mh.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Mh(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;Jh();Hh=Gh;Nh(a,c)}function Rf(){if(X)return Hh;Oh();if(0===Y||1===Y)Jh(),Hh=Gh;return Hh}\nfunction sh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===W?(xh=W=a,a.nextScheduledRoot=a):(W=W.nextScheduledRoot=a,W.nextScheduledRoot=xh)):b>a.expirationTime&&(a.expirationTime=b);X||(Z?Dh&&(Ah=a,Y=1073741823,Ph(a,1073741823,!1)):1073741823===b?Qh(1073741823,!1):Kh(a,b))}\nfunction Oh(){var a=0,b=null;if(null!==W)for(var c=W,d=xh;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===W?t(\"244\"):void 0;if(d===d.nextScheduledRoot){xh=W=d.nextScheduledRoot=null;break}else if(d===xh)xh=e=d.nextScheduledRoot,W.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===W){W=c;W.nextScheduledRoot=xh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===W)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}Ah=b;Y=a}var Rh=!1;function nh(){return Rh?!0:ba.unstable_shouldYield()?Rh=!0:!1}function Lh(){try{if(!nh()&&null!==xh){Jh();var a=xh;do{var b=a.expirationTime;0!==b&&Gh<=b&&(a.nextExpirationTimeToWorkOn=Gh);a=a.nextScheduledRoot}while(a!==xh)}Qh(0,!0)}finally{Rh=!1}}\nfunction Qh(a,b){Oh();if(b)for(Jh(),Hh=Gh;null!==Ah&&0!==Y&&a<=Y&&!(Rh&&Gh>Y);)Ph(Ah,Y,Gh>Y),Oh(),Jh(),Hh=Gh;else for(;null!==Ah&&0!==Y&&a<=Y;)Ph(Ah,Y,!1),Oh();b&&(yh=0,zh=null);0!==Y&&Kh(Ah,Y);uh=0;Ih=null;if(null!==Eh)for(a=Eh,Eh=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Bh||(Bh=!0,Ch=d)}}if(Bh)throw a=Ch,Ch=null,Bh=!1,a;}function Nh(a,b){X?t(\"253\"):void 0;Ah=a;Y=b;Ph(a,b,!1);Qh(1073741823,!1)}\nfunction Ph(a,b,c){X?t(\"245\"):void 0;X=!0;if(c){var d=a.finishedWork;null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&(nh()?a.finishedWork=d:Sh(a,d,b)))}else d=a.finishedWork,null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&Sh(a,d,b));X=!1}\nfunction Sh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===Eh?Eh=[d]:Eh.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===Ih?uh++:(Ih=a,uh=0);gh=dh=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=e>d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=\n0):(d<a.latestPingedTime&&(a.latestPingedTime=0),e=a.latestPendingTime,0!==e&&(e>d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?ff(a,d):d<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,ff(a,d)):d>e&&ff(a,d));gf(0,a);ah.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ze=Hd;e=Td();if(Ud(e)){if(\"selectionStart\"in\ne)var f={start:e.selectionStart,end:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(db){f=null;break a}var l=0,m=-1,r=-1,w=0,y=0,B=e,R=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(r=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;R=B;B=v}for(;;){if(B===\ne)break b;R===f&&++w===h&&(m=l);R===k&&++y===g&&(r=l);if(null!==(v=B.nextSibling))break;B=R;R=B.parentNode}B=v}f=-1===m||-1===r?null:{start:m,end:r}}else f=null}f=f||{start:0,end:0}}else f=null;Ae={focusedElem:e,selectionRange:f};Hd=!1;for(V=d;null!==V;){e=!1;f=void 0;try{for(;null!==V;){if(V.effectTag&256)a:{var q=V.alternate;h=V;switch(h.tag){case 0:case 11:case 15:break a;case 1:if(h.effectTag&256&&null!==q){var u=q.memoizedProps,A=q.memoizedState,Yf=h.stateNode,Vh=Yf.getSnapshotBeforeUpdate(h.elementType===\nh.type?u:P(h.type,u),A);Yf.__reactInternalSnapshotBeforeUpdate=Vh}break a;case 3:case 5:case 6:case 4:case 17:break a;default:t(\"163\")}}V=V.nextEffect}}catch(db){e=!0,f=db}e&&(null===V?t(\"178\"):void 0,Mg(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){q=!1;u=void 0;try{for(;null!==V;){var x=V.effectTag;x&16&&pe(V.stateNode,\"\");if(x&128){var C=V.alternate;if(null!==C){var p=C.ref;null!==p&&(\"function\"===typeof p?p(null):p.current=null)}}switch(x&14){case 2:Rg(V);V.effectTag&=-3;break;case 6:Rg(V);\nV.effectTag&=-3;Sg(V.alternate,V);break;case 4:Sg(V.alternate,V);break;case 8:A=V;Pg(A);A.return=null;A.child=null;A.memoizedState=null;A.updateQueue=null;var G=A.alternate;null!==G&&(G.return=null,G.child=null,G.memoizedState=null,G.updateQueue=null)}V=V.nextEffect}}catch(db){q=!0,u=db}q&&(null===V?t(\"178\"):void 0,Mg(V,u),null!==V&&(V=V.nextEffect))}p=Ae;C=Td();x=p.focusedElem;q=p.selectionRange;if(C!==x&&x&&x.ownerDocument&&Sd(x.ownerDocument.documentElement,x)){null!==q&&Ud(x)&&(C=q.start,p=q.end,\nvoid 0===p&&(p=C),\"selectionStart\"in x?(x.selectionStart=C,x.selectionEnd=Math.min(p,x.value.length)):(p=(C=x.ownerDocument||document)&&C.defaultView||window,p.getSelection&&(p=p.getSelection(),u=x.textContent.length,G=Math.min(q.start,u),q=void 0===q.end?G:Math.min(q.end,u),!p.extend&&G>q&&(u=q,q=G,G=u),u=Rd(x,G),A=Rd(x,q),u&&A&&(1!==p.rangeCount||p.anchorNode!==u.node||p.anchorOffset!==u.offset||p.focusNode!==A.node||p.focusOffset!==A.offset)&&(C=C.createRange(),C.setStart(u.node,u.offset),p.removeAllRanges(),\nG>q?(p.addRange(C),p.extend(A.node,A.offset)):(C.setEnd(A.node,A.offset),p.addRange(C))))));C=[];for(p=x;p=p.parentNode;)1===p.nodeType&&C.push({element:p,left:p.scrollLeft,top:p.scrollTop});\"function\"===typeof x.focus&&x.focus();for(x=0;x<C.length;x++)p=C[x],p.element.scrollLeft=p.left,p.element.scrollTop=p.top}Ae=null;Hd=!!ze;ze=null;a.current=b;for(V=d;null!==V;){d=!1;x=void 0;try{for(C=c;null!==V;){var Fb=V.effectTag;if(Fb&36){var Gb=V.alternate;p=V;G=C;switch(p.tag){case 0:case 11:case 15:break;\ncase 1:var Hc=p.stateNode;if(p.effectTag&4)if(null===Gb)Hc.componentDidMount();else{var ii=p.elementType===p.type?Gb.memoizedProps:P(p.type,Gb.memoizedProps);Hc.componentDidUpdate(ii,Gb.memoizedState,Hc.__reactInternalSnapshotBeforeUpdate)}var Dg=p.updateQueue;null!==Dg&&uf(p,Dg,Hc,G);break;case 3:var Eg=p.updateQueue;if(null!==Eg){q=null;if(null!==p.child)switch(p.child.tag){case 5:q=p.child.stateNode;break;case 1:q=p.child.stateNode}uf(p,Eg,q,G)}break;case 5:var ji=p.stateNode;null===Gb&&p.effectTag&\n4&&Be(p.type,p.memoizedProps)&&ji.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:t(\"163\")}}if(Fb&128){var Ic=V.ref;if(null!==Ic){var Fg=V.stateNode;switch(V.tag){case 5:var ce=Fg;break;default:ce=Fg}\"function\"===typeof Ic?Ic(ce):Ic.current=ce}}V=V.nextEffect}}catch(db){d=!0,x=db}d&&(null===V?t(\"178\"):void 0,Mg(V,x),null!==V&&(V=V.nextEffect))}dh=gh=!1;\"function\"===typeof Te&&Te(b.stateNode);Fb=b.expirationTime;b=b.childExpirationTime;b=b>Fb?b:Fb;0===b&&(Yg=\nnull);a.expirationTime=b;a.finishedWork=null}function Wg(a){null===Ah?t(\"246\"):void 0;Ah.expirationTime=0;Bh||(Bh=!0,Ch=a)}function Th(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||X||Qh(1073741823,!1)}}function Uh(a,b){if(Z&&!Dh){Dh=!0;try{return a(b)}finally{Dh=!1}}return a(b)}function Wh(a,b,c){if(qh)return a(b,c);Z||X||0===rh||(Qh(rh,!1),rh=0);var d=qh,e=Z;Z=qh=!0;try{return a(b,c)}finally{qh=d,(Z=e)||X||Qh(1073741823,!1)}}\nfunction Xh(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===kd(c)&&1===c.tag?void 0:t(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(M(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);t(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(M(h)){c=Qe(c,h,g);break a}}c=g}else c=Ke;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nTf();pf(f,e);Uf(f,d);return d}function Yh(a,b,c,d){var e=b.current,f=Rf();e=Sf(f,e);return Xh(a,b,c,e,d)}function Zh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function $h(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$b,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nCb=function(a,b,c){switch(b){case \"input\":Cc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=La(d);e?void 0:t(\"90\");Wb(d);Cc(d,e)}}}break;case \"textarea\":ie(a,c);break;case \"select\":b=c.value,null!=b&&fe(a,!!c.multiple,b,!1)}};\nfunction ai(a){var b=1073741822-25*(((1073741822-Rf()+500)/25|0)+1);b>=bh&&(b=bh-1);this._expirationTime=bh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}ai.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new bi;Xh(a,b,null,c,d._onCommit);return d};\nai.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nai.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Nh(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};ai.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function bi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}bi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nbi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\nfunction ci(a,b,c){b=N(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nci.prototype.render=function(a,b){var c=this._internalRoot,d=new bi;b=void 0===b?null:b;null!==b&&d.then(b);Yh(a,c,null,d._onCommit);return d};ci.prototype.unmount=function(a){var b=this._internalRoot,c=new bi;a=void 0===a?null:a;null!==a&&c.then(a);Yh(null,b,null,c._onCommit);return c};ci.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new bi;c=void 0===c?null:c;null!==c&&e.then(c);Yh(b,d,a,e._onCommit);return e};\nci.prototype.createBatch=function(){var a=new ai(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function di(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Kb=Th;Lb=Wh;Mb=function(){X||0===rh||(Qh(rh,!1),rh=0)};\nfunction ei(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new ci(a,!1,b)}\nfunction fi(a,b,c,d,e){di(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Zh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=ei(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Zh(f._internalRoot);h.call(a)}}Uh(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Zh(f._internalRoot)}\nfunction gi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;di(b)?void 0:t(\"200\");return $h(a,b,null,c)}\nvar ki={createPortal:gi,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=nd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return fi(null,a,b,!0,c)},render:function(a,b,c){return fi(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return fi(a,b,c,!1,d)},unmountComponentAtNode:function(a){di(a)?\nvoid 0:t(\"40\");return a._reactRootContainer?(Uh(function(){fi(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return gi.apply(void 0,arguments)},unstable_batchedUpdates:Th,unstable_interactiveUpdates:Wh,flushSync:function(a,b){X?t(\"187\"):void 0;var c=Z;Z=!0;try{return wh(a,b)}finally{Z=c,Qh(1073741823,!1)}},unstable_createRoot:hi,unstable_flushControlled:function(a){var b=Z;Z=!0;try{wh(a)}finally{(Z=b)||X||Qh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ja,\nKa,La,Ca.injectEventPluginsByName,qa,Ra,function(a){za(a,Qa)},Ib,Jb,Jd,Ea]}};function hi(a,b){di(a)?void 0:t(\"299\",\"unstable_createRoot\");return new ci(a,!0,null!=b&&!0===b.hydrate)}(function(a){var b=a.findFiberByHostInstance;return We(n({},a,{overrideProps:null,findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ia,bundleType:0,version:\"16.7.0\",rendererPackageName:\"react-dom\"});\nvar li={default:ki},mi=li&&ki||li;module.exports=mi.default||mi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 34\n// module chunks = 0","/** @license React v16.7.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,A=n?Symbol.for(\"react.memo\"):\n60115,B=n?Symbol.for(\"react.lazy\"):60116,C=\"function\"===typeof Symbol&&Symbol.iterator;function aa(a,b,e,c,d,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[e,c,d,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},F={};\nfunction G(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}G.prototype.isReactComponent={};G.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};G.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function H(){}H.prototype=G.prototype;function I(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}var J=I.prototype=new H;\nJ.constructor=I;k(J,G.prototype);J.isPureReactComponent=!0;var K={current:null,currentDispatcher:null},L=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};\nfunction N(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:d,_owner:K.current}}\nfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,e,c){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+U(d,h);g+=T(d,f,e,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,h++),g+=T(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function V(a,b,e){return null==a?0:T(a,\"\",b,e)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\nfunction da(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,function(a){return a}):null!=a&&(O(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+e)),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(P,\"$&/\")+\"/\");b=R(b,g,c,d);V(a,da,b);S(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=R(null,null,b,e);V(a,ca,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){O(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:G,PureComponent:I,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:B,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:A,type:a,compare:void 0===b?null:b}},Fragment:r,StrictMode:t,Suspense:z,createElement:N,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;\nif(null!=b){void 0!==b.ref&&(h=b.ref,f=K.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=N.bind(null,a);b.type=a;return b},isValidElement:O,version:\"16.7.0\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:K,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 35\n// module chunks = 0","/** @license React v0.12.0\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var c=null,f=!1,h=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=c.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=c,b=c.next;if(c===b)c=null;else{var d=c.previous;c=d.next=b;b.previous=d}a.next=a.previous=null;d=a.callback;b=a.expirationTime;a=a.priorityLevel;var e=h,Q=l;h=a;l=b;try{var g=d()}finally{h=e,l=Q}if(\"function\"===typeof g)if(g={callback:g,priorityLevel:a,expirationTime:b,next:null,previous:null},null===c)c=g.next=g.previous=g;else{d=null;a=c;do{if(a.expirationTime>=b){d=a;break}a=a.next}while(a!==c);null===d?d=c:d===c&&(c=g,p());b=d.previous;b.next=d.previous=g;g.next=d;g.previous=\nb}}function v(){if(-1===k&&null!==c&&1===c.priorityLevel){m=!0;try{do u();while(null!==c&&1===c.priorityLevel)}finally{m=!1,null!==c?p():n=!1}}}function t(a){m=!0;var b=f;f=a;try{if(a)for(;null!==c;){var d=exports.unstable_now();if(c.expirationTime<=d){do u();while(null!==c&&c.expirationTime<=d)}else break}else if(null!==c){do u();while(null!==c&&!w())}}finally{m=!1,f=b,null!==c?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var d=exports.unstable_now(),e=!1;if(0>=P-d)if(-1!==b&&b<=d)e=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(e)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var d=h,e=k;h=a;k=exports.unstable_now();try{return b()}finally{h=d,k=e,v()}};\nexports.unstable_scheduleCallback=function(a,b){var d=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=d+b.timeout;else switch(h){case 1:b=d+-1;break;case 2:b=d+250;break;case 5:b=d+1073741823;break;case 4:b=d+1E4;break;default:b=d+5E3}a={callback:a,priorityLevel:h,expirationTime:b,next:null,previous:null};if(null===c)c=a.next=a.previous=a,p();else{d=null;var e=c;do{if(e.expirationTime>b){d=e;break}e=e.next}while(e!==c);null===d?d=c:d===c&&(c=a,p());\nb=d.previous;b.next=d.previous=a;a.next=d;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)c=null;else{a===c&&(c=b);var d=a.previous;d.next=b;b.previous=d}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=h;return function(){var d=h,e=k;h=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{h=d,k=e,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return h};\nexports.unstable_shouldYield=function(){return!f&&(null!==c&&c.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==c&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return c};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/cjs/scheduler.production.min.js\n// module id = 36\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/index.js\n// module id = 37\n// module chunks = 0","module.exports = function(THREE) {\n\tvar MOUSE = THREE.MOUSE\n\tif (!MOUSE)\n\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n\t/**\n\t * @author qiao / https://github.com/qiao\n\t * @author mrdoob / http://mrdoob.com\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author erich666 / http://erichaines.com\n\t */\n\t/*global THREE, console */\n\n\tfunction OrbitConstraint ( object ) {\n\n\t\tthis.object = object;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t// and where it pans with respect to.\n\t\tthis.target = new THREE.Vector3();\n\n\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.25;\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar EPS = 0.000001;\n\n\t\t// Current position in spherical coordinate system.\n\t\tvar theta;\n\t\tvar phi;\n\n\t\t// Pending changes\n\t\tvar phiDelta = 0;\n\t\tvar thetaDelta = 0;\n\t\tvar scale = 1;\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar zoomChanged = false;\n\n\t\t// API\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn theta;\n\n\t\t};\n\n\t\tthis.rotateLeft = function ( angle ) {\n\n\t\t\tthetaDelta -= angle;\n\n\t\t};\n\n\t\tthis.rotateUp = function ( angle ) {\n\n\t\t\tphiDelta -= angle;\n\n\t\t};\n\n\t\t// pass in distance in world space to move left\n\t\tthis.panLeft = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panLeft ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get X column of matrix\n\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in distance in world space to move up\n\t\tthis.panUp = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panUp ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get Y column of matrix\n\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyIn = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyOut = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\tvar quatInverse = quat.clone().inverse();\n\n\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\t\treturn function () {\n\n\t\t\t\tvar position = this.object.position;\n\n\t\t\t\toffset.copy( position ).sub( this.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\n\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\n\t\t\t\t// angle from y-axis\n\n\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n\t\t\t\ttheta += thetaDelta;\n\t\t\t\tphi += phiDelta;\n\n\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n\t\t\t\tvar radius = offset.length() * scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\n\t\t\t\t// move target to panned location\n\t\t\t\tthis.target.add( panOffset );\n\n\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( this.target ).add( offset );\n\n\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\tif ( this.enableDamping === true ) {\n\n\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\tphiDelta = 0;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t};\n\n\n\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t// supported.\n\t//\n\t//    Orbit - left mouse / touch: one finger move\n\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n\tfunction OrbitControls ( object, domElement ) {\n\n\t\tvar constraint = new OrbitConstraint( object );\n\n\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\t// API\n\n\t\tObject.defineProperty( this, 'constraint', {\n\n\t\t\tget: function() {\n\n\t\t\t\treturn constraint;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn constraint.getPolarAngle();\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn constraint.getAzimuthalAngle();\n\n\t\t};\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// center is old, deprecated; use \"target\" instead\n\t\tthis.center = this.target;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t// backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t\t// Set to false to disable use of the keys\n\t\tthis.enableKeys = true;\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar rotateStart = new THREE.Vector2();\n\t\tvar rotateEnd = new THREE.Vector2();\n\t\tvar rotateDelta = new THREE.Vector2();\n\n\t\tvar panStart = new THREE.Vector2();\n\t\tvar panEnd = new THREE.Vector2();\n\t\tvar panDelta = new THREE.Vector2();\n\n\t\tvar dollyStart = new THREE.Vector2();\n\t\tvar dollyEnd = new THREE.Vector2();\n\t\tvar dollyDelta = new THREE.Vector2();\n\n\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\t\tvar state = STATE.NONE;\n\n\t\t// for reset\n\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// events\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar startEvent = { type: 'start' };\n\t\tvar endEvent = { type: 'end' };\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tfunction pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\n\t\t}\n\n\t\tthis.update = function () {\n\n\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( constraint.update() === true ) {\n\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tstate = STATE.NONE;\n\n\t\t\tthis.target.copy( this.target0 );\n\t\t\tthis.object.position.copy( this.position0 );\n\t\t\tthis.object.zoom = this.zoom0;\n\n\t\t\tthis.object.updateProjectionMatrix();\n\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\tthis.update();\n\n\t\t};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.update();\n\n\t\t}\n\n\t\tfunction onMouseUp( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar delta = 0;\n\n\t\t\tif ( event.wheelDelta !== undefined ) {\n\n\t\t\t\t// WebKit / Opera / Explorer 9\n\n\t\t\t\tdelta = event.wheelDelta;\n\n\t\t\t} else if ( event.detail !== undefined ) {\n\n\t\t\t\t// Firefox\n\n\t\t\t\tdelta = - event.detail;\n\n\t\t\t}\n\n\t\t\tif ( delta > 0 ) {\n\n\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t} else if ( delta < 0 ) {\n\n\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\t\t\tscope.dispatchEvent( startEvent );\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\t\tswitch ( event.keyCode ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchstart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t\tfunction touchmove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\n\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\n\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchend( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction contextmenu( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tthis.dispose = function() {\n\n\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t}\n\n\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\n\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t// force an update at start\n\t\tthis.update();\n\n\t};\n\n\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tOrbitControls.prototype.constructor = OrbitControls;\n\n\tObject.defineProperties( OrbitControls.prototype, {\n\n\t\tobject: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.object;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttarget: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.target;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\tthis.constraint.target.copy( value );\n\n\t\t\t}\n\n\t\t},\n\n\t\tminDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tenableDamping : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.enableDamping = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// backward compatibility\n\n\t\tnoZoom: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\treturn ! this.enableZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\tthis.enableZoom = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoRotate: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\treturn ! this.enableRotate;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\tthis.enableRotate = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoPan: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\treturn ! this.enablePan;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\tthis.enablePan = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoKeys: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\treturn ! this.enableKeys;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\tthis.enableKeys = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tstaticMoving : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\treturn ! this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\tthis.constraint.enableDamping = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdynamicDampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn OrbitControls;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three-orbit-controls/index.js\n// module id = 38\n// module chunks = 0","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '72' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\t\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\t\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n\r\n// polyfills\r\n\r\nif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\r\n\t// Missing in Android stock browser.\r\n\r\n\t( function () {\r\n\r\n\t\tvar lastTime = 0;\r\n\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\r\n\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\r\n\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\r\n\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\tvar id = self.setTimeout( function () {\r\n\r\n\t\t\t\t\tcallback( currTime + timeToCall );\r\n\r\n\t\t\t\t}, timeToCall );\r\n\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\treturn id;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\r\n\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\r\n\t\t\t\tself.clearTimeout( id );\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}() );\r\n\r\n}\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n// mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n// depth modes\r\n\r\nTHREE.NeverDepth = 0;\r\nTHREE.AlwaysDepth = 1;\r\nTHREE.LessDepth = 2;\r\nTHREE.LessEqualDepth = 3;\r\nTHREE.EqualDepth = 4;\r\nTHREE.GreaterEqualDepth = 5;\r\nTHREE.GreaterDepth = 6;\r\nTHREE.NotEqualDepth = 7;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb ( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tvar parseAlpha = function ( strAlpha ) {\r\n\r\n\t\t\tvar alpha = parseFloat( strAlpha );\r\n\r\n\t\t\tif ( alpha < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn alpha;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n};\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\t\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction descSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset renderDepth ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRootObject = ( meta === undefined );\r\n\r\n\t\tvar data = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\tdata.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\r\n\t\tdata.matrix = this.matrix.toArray();\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tdata.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {};\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = data;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.array.length / this.data.stride;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.DirectGeometry.prototype = {\r\n\r\n\tconstructor: THREE.DirectGeometry,\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddIndex: function ( index ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\r\n\t},\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tget drawcalls() {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\tget offsets() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\r\n\t},\r\n\r\n\tclearDrawCalls: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.left = source.left;\r\n\tthis.right = source.right;\r\n\tthis.top = source.top;\r\n\tthis.bottom = source.bottom;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.left = this.left;\r\n\tdata.object.right = this.right;\r\n\tdata.object.top = this.top;\r\n\tdata.object.bottom = this.bottom;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.fov = source.fov;\r\n\tthis.aspect = source.aspect;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.fov = this.fov;\r\n\tdata.object.aspect = this.aspect;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.color.copy( source.color );\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\r\n\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.groundColor.copy( source.groundColor );\r\n\tthis.intensity = source.intensity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.groundColor = this.groundColor.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.decay = source.decay;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.angle = source.angle;\r\n\tthis.exponent = source.exponent;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n}\r\n\r\nTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.angle = this.angle;\r\n\tdata.object.exponent = this.exponent;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar imageLoader;\r\n\r\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\r\n\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\r\n\t\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset ) {\r\n\r\n\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhere[ name ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// defaults\r\n\r\n\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\tvar mpars = {};\r\n\r\n\t\t\t// parameters from model file\r\n\r\n\t\t\tif ( m.shading ) {\r\n\r\n\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.transparent !== undefined ) {\r\n\r\n\t\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\r\n\t\t\t\tmpars.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\r\n\t\t\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// modifiers\r\n\r\n\t\t\tif ( m.transparency !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\tm.opacity = m.transparency;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined ) {\r\n\r\n\t\t\t\tmpars.opacity = m.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// textures\r\n\r\n\t\t\tif ( texturePath ) {\r\n\r\n\t\t\t\tif ( m.mapDiffuse ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapLight ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAO ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapBump ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapNormal ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapSpecular ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAlpha ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\t\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\t\tgeometry.animation = json.animation;\r\n\t\t\tgeometry.animations = json.animations;\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\r\n\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\t\tmaterial.uuid = json.uuid;\r\n\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MeshFaceMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TextGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tvar getGeometry = function ( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar getMaterial = function ( name ) {\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.side = source.side;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blending = source.blending;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\t// Deprecated\r\n\r\n\tget wrapAround () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tset wrapAround ( boolean ) {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tget wrapRGB () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\treturn new THREE.Color();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\t\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.metal = source.metal;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.derivatives = false; // set to use derivatives\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.attributes = source.attributes;\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.lights = source.lights;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.derivatives = source.derivatives;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.attributes = this.attributes;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\r\n\tthis.images = source.images;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Points.prototype.constructor = THREE.Points;\r\n\r\nTHREE.Points.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Points.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// DEPRECATED\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar tempA = new THREE.Vector3();\r\n\tvar tempB = new THREE.Vector3();\r\n\tvar tempC = new THREE.Vector3();\r\n\r\n\tvar uvA = new THREE.Vector2();\r\n\tvar uvB = new THREE.Vector2();\r\n\tvar uvC = new THREE.Vector2();\r\n\r\n\tvar barycoord = new THREE.Vector3();\r\n\r\n\tvar intersectionPoint = new THREE.Vector3();\r\n\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\treturn uv1.clone();\r\n\r\n\t}\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar material = this.material;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar a, b, c;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tvar uv;\r\n\r\n\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\r\n\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tuv: uv,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\nTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.skin = source.skin;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\t\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function update() {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Skeleton.prototype.clone = function () {\r\n\r\n\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n};\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\t\r\n\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\tinfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tinfluences[ this.currentKeyframe ] = mix;\r\n\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\tif ( b > - 1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\r\n\tthis.duration = source.duration;\r\n\tthis.mirroredLoop = source.mirroredLoop;\r\n\tthis.time = source.time;\r\n\r\n\tthis.lastKeyframe = source.lastKeyframe;\r\n\tthis.currentKeyframe = source.currentKeyframe;\r\n\r\n\tthis.direction = source.direction;\r\n\tthis.directionBackwards = source.directionBackwards;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t},\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn levels[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function update( camera ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\tvar levels = source.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.levels = [];\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tdata.object.levels.push( {\r\n\t\t\tobject: level.object.uuid,\r\n\t\t\tdistance: level.distance\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function Sprite( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\r\n\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture,\t// THREE.Texture\r\n\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\tscale: 1, \t\t// scale\r\n\t\trotation: 0, \t\t// rotation\r\n\t\topacity: opacity,\t// opacity\r\n\t\tcolor: color,\t\t// color\r\n\t\tblending: blending\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.positionScreen.copy( source.positionScreen );\r\n\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = -1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = -1;\r\n\r\n\tvar opaqueImmediateObjects = [];\r\n\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\tvar transparentImmediateObjects = [];\r\n\tvar transparentImmediateObjectsLastIndex = -1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value !== undefined ) pixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t};\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( numericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = program.getUniforms();\r\n\r\n\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group === undefined ) {\r\n\r\n\t\t\tvar count;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tcount = index.count;\r\n\r\n\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tcount = position.data.array.length / 3;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar drawRange = geometry.drawRange;\r\n\r\n\t\t\tgroup = {\r\n\t\t\t\tstart: drawRange.start,\r\n\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = -1;\r\n\t\ttransparentObjectsLastIndex = -1;\r\n\r\n\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushImmediateRenderItem( object ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( object.material.transparent ) {\r\n\r\n\t\t\tarray = transparentImmediateObjects;\r\n\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing position or grow the array\r\n\r\n\t\tif ( index < array.length ) {\r\n\r\n\t\t\tarray[ index ] = object;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( object );\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\tlights.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tsprites.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\tlensFlares.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\tpushImmediateRenderItem( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material = overrideMaterial;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar object = renderList[ i ];\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\r\n\t\t\tsetMaterial( material );\r\n\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterialProperties.uniformsList = [];\r\n\r\n\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\r\n\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = uniformLocations[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\r\n\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tsetMaterialFaces( material );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setMaterialFaces( material ) {\r\n\r\n\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn capabilities.vertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsInstancedArrays = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tshadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tshadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.cullFace;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\tshadowMap.cullFace = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapDebug: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.debug;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\tshadowMap.debug = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\r\n\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\tvar name = info.name;\r\n\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\r\n\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\r\n\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms[ name ] = location;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\"flipSided\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tchunks.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\tchunks.push( parameterName );\r\n\t\t\tchunks.push( parameters[ parameterName ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\tthis.cullFace = THREE.CullFaceFront;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\r\n\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_state.setDepthTest( true );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\tvar shadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t_state.enable( _gl.BLEND );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\tvar depthMaterial;\r\n\r\n\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\r\n\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdepthMaterial = _depthMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tdepthMaterial.visible = material.visible;\r\n\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\r\n\t\treturn depthMaterial;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = undefined;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\tgl.clearDepth( 1 );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\tgl.frontFace( gl.CCW );\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tthis.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === undefined ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t};\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\n\r\nTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif ( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.start( 0, this.startTime );\r\n\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n\tthis.connect();\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.connect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.connect( this.filter );\r\n\t\tthis.filter.connect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.connect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.disconnect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.disconnect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.disconnect();\r\n\t\tthis.filter = value;\r\n\t\tthis.connect();\r\n\r\n\t} else {\r\n\r\n\t\tthis.filter = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\r\n\tthis.playbackRate = value;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\r\n\treturn this.playbackRate;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getLoop = function () {\r\n\r\n\treturn this.source.loop;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRefDistance = function () {\r\n\r\n\treturn this.panner.refDistance;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\r\n\treturn this.panner.rolloffFactor;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t// determine where we are between the 'before' and 'after' points\r\n\r\n\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t// add that fractional amount to t\r\n\r\n\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub( pt1 );\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t}\r\n\r\n\t// Get length of sub-curve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistant sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar args = [\r\n\t\taX, aY,\r\n\t\txRadius, yRadius,\r\n\t\taStartAngle, aEndAngle,\r\n\t\taClockwise,\r\n\t\taRotation || 0 // aRotation is optional.\r\n\t];\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint( 1 );\r\n\targs.push( lastPoint.x );\r\n\targs.push( lastPoint.y );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tvar cos, sin;\r\n\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\r\n\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1 ];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\tpoints.splice( points.length - 1, 1 );\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length === 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length === 1 ) {\r\n\r\n\t\ttmpPath = subPaths[ 0 ];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[ mainIdx ] = undefined;\r\n\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\r\n\t\tvar ambiguous = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t}\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\ttmpShape = newShapes[ i ].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.extractAllSpacedPoints( divisions );\r\n\r\n\t}\r\n\r\n\treturn this.extractAllPoints( divisions );\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3;\r\n\r\n\t\t\tif ( intPoint === 0 ) {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint ];\r\n\t\t\tp2 = points[ intPoint + 1 ];\r\n\r\n\t\t\tif ( intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\r\n\t},\r\n\tget: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\r\n\t},\r\n\tremove: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype = {\r\n\r\n\tconstructor: THREE.Animation,\r\n\r\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\r\n\tplay: function ( startTime, weight ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t},\r\n\r\n\treset: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\tanimations: {},\r\n\t\t\t\t\tblending: {\r\n\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = this.data.name;\r\n\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\tvar animationCache = animations[ name ];\r\n\r\n\t\t\tif ( animationCache === undefined ) {\r\n\r\n\t\t\t\tanimationCache = {\r\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t};\r\n\r\n\t\t\t\tanimations[ name ] = animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get keys to match our current time\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tresetBlendWeights: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\r\n\t\t\tif ( animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar blending = animationCache.blending;\r\n\r\n\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\tblending.scaleWeight = 0.0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function() {\r\n\r\n\t\tvar points = [];\r\n\t\tvar target = new THREE.Vector3();\r\n\t\tvar newVector = new THREE.Vector3();\r\n\t\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t\t// Catmull-Rom spline\r\n\r\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\t\tvar c = [], v3 = [],\r\n\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\tpa, pb, pc, pd;\r\n\r\n\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\r\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\t\treturn v3;\r\n\r\n\t\t};\r\n\r\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t\t};\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t\tif ( this.weight === 0 )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar duration = this.data.length;\r\n\r\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\t\tthis.reset();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t\t// get keys\r\n\r\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t\t// interpolate\r\n\r\n\t\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\t\tvar vector = object.position;\r\n\r\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tgetNextKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key % keys.length;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key > 0 ? key : 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\tobj = this.hierarchy[ h ];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyFrameAnimation.prototype = {\r\n\r\n\tconstructor: THREE.KeyFrameAnimation,\r\n\r\n\tplay: function ( startTime ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\t\tif ( this.isPlaying === false ) {\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\t// reset key cache\r\n\r\n\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\tobject,\r\n\t\t\t\tnode;\r\n\r\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.update( 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPaused = false;\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused  = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t\t// reset JIT matrix and remove cache\r\n\r\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t\tdelete node.animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tvar keys = node.keys,\r\n\t\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetNextKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key % keys.length;\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar frameTime = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\r\n\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\r\n\t\tif ( frame !== this.currentFrame ) {\r\n\r\n\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\tinfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\r\n\t\tinfluences[ frame ] = mix;\r\n\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.BoxGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.BoxGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.depth,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.depthSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push( center );\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\nTHREE.CircleGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 3 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i );\r\n\t\tindices.push( i + 1 );\r\n\t\tindices.push( 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\nTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\nTHREE.CylinderGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CylinderGeometry(\r\n\t\tthis.parameters.radiusTop,\r\n\t\tthis.parameters.radiusBottom,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.openEnded,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\nTHREE.PlaneGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\nTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\nTHREE.RingGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.RingGeometry(\r\n\t\tthis.parameters.innerRadius,\r\n\t\tthis.parameters.outerRadius,\r\n\t\tthis.parameters.thetaSegments,\r\n\t\tthis.parameters.phiSegments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\nTHREE.SphereGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\nTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\nTHREE.TorusGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.arc\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\nTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.p,\r\n\t\tthis.parameters.q,\r\n\t\tthis.parameters.heightScale\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\nTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\tthis.parameters.vertices,\r\n\t\tthis.parameters.indices,\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\treturn geometry.copy( this );\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\nTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\nTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\nTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\nTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\r\n\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\tvar count = drawcall.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\t\t\r\n\t\tif ( headLength < length ) {\r\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.line );\r\n\t\t}\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tif ( headLength < length ){\r\n\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\tthis.line.updateMatrix();\r\n\t}\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tbox.setFromObject( object );\r\n\r\n\t\tif ( box.empty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.translate( 0, - 0.5, 0 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/three.js\n// module id = 39\n// module chunks = 0"],"sourceRoot":""}